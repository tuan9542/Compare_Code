SET QUOTED_IDENTIFIER ON;
SET ANSI_NULLS ON;
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROC dbo.sp_MdelPhar_Grab_Cancel_Delivery
    @TransactionCode VARCHAR(100) = ''
  , @Reason NVARCHAR(500) = ''
  , @GrabStatus NVARCHAR(50) = ''
AS
BEGIN
    /*
		Những case xử lý trong store:
		1. Cancel
		2. Indelivery
		3. Complete
	*/
    -- Cancel, Indelivery, Complete
    SET NOCOUNT ON;
    INSERT INTO dbo.Logs ( Store, Message, CreateBy, CreateDate, IsSendMail )
    VALUES (
               N'sp_MdelPhar_Grab_Cancel_Delivery' -- Store - nvarchar(max)
             , CONCAT(N'@TransactionCode = ', @TransactionCode, ', @Reason = ', @Reason, ', @GrabStatus = ', @GrabStatus) -- Message - nvarchar(max)
             , '' -- CreateBy - varchar(50)
             , GETDATE() -- CreateDate - datetime
             , NULL -- IsSendMail - bit
           );
    BEGIN TRY
        DECLARE @TransportStatus_New INT = 0;

        DECLARE
            @IDORDR          BIGINT     = 0
          , @PosNum          INT
          , @EcomNum         VARCHAR(50)
          , @TransportStatus INT        = 0;

        SELECT
            @IDORDR = ID
          , @PosNum = PosNum
          , @EcomNum = EcomNum
          , @TransportStatus = TransportStatus
        FROM
            dbo.PE_ORDR ( NOLOCK )
        WHERE
            Transaction_Code_Grab = @TransactionCode;
        --IF ( @IDORDR <> 0 )--AND @TransportStatus > 3 )
        --BEGIN
        --    SELECT
        --        0 AS ResultID
        --      , N'Không thể cập nhật hủy Grab sau trạng thái hoàn tất POS!' AS Message;
        --    RETURN;
        --END;
        --ELSE 
        IF ( @IDORDR <> 0 )
        BEGIN
            IF ( @TransportStatus = 0 )
            BEGIN
                SELECT 0 AS ResultID, N'Trạng thái Grab chưa được định nghĩa!' AS Message;

                RETURN;
            END;
            IF NOT EXISTS (
                              SELECT TOP 1
                                     1
                              FROM
                                  dbo.DeliveryTransportInfo AS I ( NOLOCK )
                              WHERE
                                  I.IDORDR = @IDORDR
                          )
            BEGIN
                INSERT INTO dbo.DeliveryTransportInfo ( IDORDR, PosNum, EcomNum, Status, CreateDateTime )
                VALUES (
                           @IDORDR -- IDORDR - bigint
                         , @PosNum -- PosNum - bigint
                         , @EcomNum -- EcomNum - varchar(50)
                         , 1 -- Status - int
                         , GETDATE() -- CreateDateTime - datetime
                       );
            END;

            DECLARE
                @Sql_Update_DeliveryTransportInfo NVARCHAR(MAX) = N''
              , @ColumnUpdate                     NVARCHAR(50)  = N'';
            SET @Sql_Update_DeliveryTransportInfo = CONCAT('UPDATE dbo.DeliveryTransportInfo SET {column} = GETDATE() WHERE IDORDR = ', @IDORDR);
            SET @ColumnUpdate = CASE
                                    WHEN @GrabStatus = 'QUEUEING' THEN 'QUEUEING'
                                    WHEN @GrabStatus = 'ALLOCATING' THEN 'ALLOCATING' --4
                                    WHEN @GrabStatus = 'PICKING_UP' THEN 'PICKING_UP'
                                    WHEN @GrabStatus = 'IN_DELIVERY' THEN 'IN_DELIVERY'
                                    WHEN @GrabStatus = 'COMPLETED' THEN 'COMPLETED'
                                    WHEN @GrabStatus = 'CANCELED' THEN 'CANCELED'
                                    WHEN @GrabStatus = 'IN_RETURN' THEN 'IN_RETURN'
                                    WHEN @GrabStatus = 'RETURNED' THEN 'RETURNED'
                                    WHEN @GrabStatus = 'FAILED' THEN 'FAILED'
                                    ELSE ''
                                END;
            IF ( ISNULL(@ColumnUpdate, '') <> '' )
            BEGIN
                SET @Sql_Update_DeliveryTransportInfo = REPLACE(@Sql_Update_DeliveryTransportInfo, '{column}', @ColumnUpdate);
            END;
            PRINT @Sql_Update_DeliveryTransportInfo;
            EXEC sys.sp_executesql @Sql_Update_DeliveryTransportInfo;

            SET @TransportStatus_New = CASE
                                           WHEN @GrabStatus = 'QUEUEING' THEN 3
                                           WHEN @GrabStatus = 'ALLOCATING' THEN 3 --4
                                           WHEN @GrabStatus = 'PICKING_UP' THEN 3
                                           WHEN @GrabStatus = 'IN_DELIVERY' THEN 5
                                           WHEN @GrabStatus = 'COMPLETED' THEN 6
                                           WHEN @GrabStatus = 'CANCELED' THEN 4
                                           WHEN @GrabStatus = 'IN_RETURN' THEN 4
                                           WHEN @GrabStatus = 'RETURNED' THEN 9
                                           WHEN @GrabStatus = 'FAILED' THEN 13
                                           ELSE 0
                                       END;
            /*	Grab Status
ALLOCATING : dang  tìm TX	
PICKING_UP: tai xe da xac nhan
IN_DELIVERY : tai xe dang chay giao
COMPLETED : giao hang hoan tat
CANCELED : do frt ra lenh cancel
FAILED : khong tim duoc tai xe
RETURNED: TX grab tra hang
IN_RETURN: TX đang trả hàng
*/

            IF ( @GrabStatus IN ('FAILED'))
            BEGIN

                SELECT
                    s.EmployeeCode AS UserID
                  , a.Token
                  , a.DeviceType
                  , s.PosNum
                  , s.EcomNum AS EcomNum
                  , N'Đơn hàng giao hàng Grab ' + s.EcomNum + N' tìm tài xế thất bại hoặc bị tài xế hủy. Vui lòng chọn NV Shop tự giao' AS Mess
                  , CASE WHEN a.UserID IS NULL THEN 'E' ELSE 'P' END AS NotifyStatus
                INTO
                    #tmp_Notify
                FROM
                    dbo.Assign_ORDR ( NOLOCK ) s
                    INNER JOIN dbo.UserToken a ( NOLOCK ) ON s.EmployeeCode = a.UserID
                WHERE
                    s.IDORDR = @IDORDR;

                CREATE TABLE #Tmp_PushNotiAPI
                (
                    Row INT IDENTITY(1, 1)
                  , ID BIGINT
                  , Messages NVARCHAR(1000)
                  , Token NVARCHAR(1000)
                );

                INSERT INTO dbo.MDELPHAR_PUSHNOTIFY
                (
                    PosNum
                  , EcomNum
                  , UserCode
                  , Title
                  , Messages
                  , Updatetdate
                  , createdate
                  , Status
                  , Token
                  , Dervicetype
                  , comment
                  , TThai
                  , Typeapp
                  , Sound
                )
                OUTPUT
                    Inserted.ID
                  , Inserted.Messages
                  , Inserted.Token
                INTO #Tmp_PushNotiAPI ( ID, Messages, Token )
                SELECT DISTINCT
                       a.PosNum AS PosNum
                     , a.EcomNum AS EcomNum
                     , a.UserID AS UserCode
                     , N'MDel Thuốc' AS Title
                     , a.Mess AS Messages
                     , NULL AS UpdateDate
                     , GETDATE() AS CreateDate
                     , a.NotifyStatus AS STATUS
                     , a.Token
                     , a.DeviceType
                     , NULL AS Commend
                     , NULL AS TThai
                     , 1 AS Typeapp
                     , ''
                FROM
                    #tmp_Notify a
                WHERE
                    ISNULL(a.Token, '') <> '';

                DECLARE
                    @IndexN      INT = 1
                  , @TotalIndexN INT = ( SELECT COUNT(1)FROM #Tmp_PushNotiAPI );

                WHILE ( @IndexN <= @TotalIndexN )
                BEGIN
                    DECLARE
                        @strRes       NVARCHAR(3000)
                      , @MessagesNoti NVARCHAR(2000)
                      , @TokenNoti    NVARCHAR(1000)
                      , @IDNoti       BIGINT;
                    SELECT
                        @IDNoti = ID
                      , @MessagesNoti = Messages
                      , @TokenNoti = Token
                    FROM
                        #Tmp_PushNotiAPI
                    WHERE
                        Row = @IndexN;

                    EXEC LOCAL.master.dbo.sp_MdelPhar_Send_Notification_Firebase
                        @Title = N'MDel Thuốc' -- nvarchar(500)
                      , @Messages = @MessagesNoti -- nvarchar(2000)
                      , @Token = @TokenNoti -- nvarchar(1000)
                      , @Sound = 'default.wav' -- varchar(200)
                      , @TypeOrder = 'GrabCancel'
                      , @strRes = @strRes OUTPUT; -- nvarchar(max)

                    UPDATE
                        dbo.MDELPHAR_PUSHNOTIFY
                    SET
                        Response = @strRes
                      , Status = 'C'
                      , Updatetdate = GETDATE()
                    WHERE
                        ID = @IDNoti;

                    SET @IndexN += 1;
                END;

                DROP TABLE
                    #Tmp_PushNotiAPI
                  , #tmp_Notify;

                -- update transportstatus
                UPDATE
                    dbo.PE_ORDR
                SET
                    TransportStatus = @TransportStatus_New
                  , IsCancelGrab = 1
                  , ReasonCancelGrab = @Reason
                  -- TuanNA89 - 20/07/2021 - Thêm rule Grab hủy
                  , TransportBy = NULL
                WHERE
                    Transaction_Code_Grab = @TransactionCode;
            END;
            ELSE
            BEGIN
                IF @GrabStatus = 'COMPLETED'
                BEGIN
                    DECLARE
                        @DocType         VARCHAR(10)    = ''
                      , @PaymentByGraber INT            = 0
                      , @Money           NUMERIC(19, 0) = 0;

                    SELECT TOP 1
                           @DocType = O.DocType
                    FROM
                        [10.96.254.35].FRT_PHARMACY_BETA.dbo.Transporters_SO AS O ( NOLOCK )
                    WHERE
                        O.DocEntry_Ecom = @EcomNum
                    ORDER BY
                        O.ID DESC;

                    SELECT TOP 1
                           @Money = PO.TotalAmount
                    FROM
                        dbo.PE_ORDR AS PO ( NOLOCK )
                    WHERE
                        PO.EcomNum = @EcomNum
                    ORDER BY
                        PO.ID DESC;

                    IF (( @DocType = '01' AND @Money > 2000000 ) OR @DocType = '05' )
                    BEGIN
                        SET @TransportStatus_New = 10;
                    END;
                END;

                UPDATE
                    dbo.PE_ORDR
                SET
                    TransportStatus = @TransportStatus_New
                WHERE
                    Transaction_Code_Grab = @TransactionCode;
            END;

            INSERT INTO dbo.TransportStatus_Log
            (
                IDORDR
              , PosNum
              , EcomNum
              , TransportStatus
              , CreateBy
              , CreateDate
              , IsPull
              , PullDate
              , DeviceType
              , VersionApp
              , GrabStatus
            )
            SELECT
                O.ID
              , O.PosNum
              , O.EcomNum
              , @TransportStatus_New
              , '-1'
              , GETDATE()
              , 0
              , NULL
              , NULL
              , NULL
              , @GrabStatus
            FROM
                dbo.PE_ORDR AS O ( NOLOCK )
            WHERE
                O.Transaction_Code_Grab = @TransactionCode;

            SELECT 1 AS ResultID, N'Success' AS Message;
            RETURN;
        END;
        ELSE
        BEGIN
            SELECT 0 AS ResultID, N'Không tìm thấy đơn hàng!' AS Message;
            RETURN;
        END;
    END TRY
    BEGIN CATCH
        INSERT INTO dbo.Logs ( Store, Message, CreateBy, CreateDate, IsSendMail )
        VALUES (
                   N'sp_MdelPhar_Grab_Cancel_Delivery' -- Store - nvarchar(max)
                 , CONCAT(N'@TransactionCode = ', @TransactionCode, ', @Reason = ', @Reason, ', @GrabStatus = ', @GrabStatus, ' - error: ', ERROR_MESSAGE()) -- Message - nvarchar(max)
                 , '' -- CreateBy - varchar(50)
                 , GETDATE() -- CreateDate - datetime
                 , NULL -- IsSendMail - bit
               );
    END CATCH;

END;
GO

