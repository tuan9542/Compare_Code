SET QUOTED_IDENTIFIER ON;
SET ANSI_NULLS ON;
GO
ALTER PROCEDURE dbo.sp_MDELPHAR_API_ChangeTransportStatus_DaSoanHang
(
    @IDMdel INT
  , @EcomNum VARCHAR(50)
  , @UserID VARCHAR(40)
  , @DeviceType INT = NULL -- 1: android; 2: ios
  , @Pricing_vtp NUMERIC(19, 6) = 0
  , @Product_Weight INT = 0
  , @Product_Length INT = 0
  , @Product_Height INT = 0
  , @Product_Width INT = 0
)
AS
BEGIN
    DECLARE @ErrorMessage_Log NVARCHAR(MAX) = N'';
    SET @ErrorMessage_Log = N'Log: [sp_MDELPHAR_API_ChangeTransportStatus_DaSoanHang]';
    SET @ErrorMessage_Log += N'@IDMdel=''' + ISNULL(CONVERT(NVARCHAR(50), @IDMdel), 'NULL') + N'''';
    SET @ErrorMessage_Log += N',@EcomNum=''' + ISNULL(CONVERT(NVARCHAR(50), @EcomNum), 'NULL') + N'''';
    SET @ErrorMessage_Log += N', @UserID=''' + ISNULL(CONVERT(NVARCHAR(50), @UserID), 'NULL') + N'''';
    SET @ErrorMessage_Log += N', @DeviceType=''' + ISNULL(CONVERT(NVARCHAR(50), @DeviceType), 'NULL') + N'''';
    SET @ErrorMessage_Log += N', @Pricing_vtp=''' + ISNULL(CONVERT(NVARCHAR(50), @Pricing_vtp), 'NULL') + N'''';
    SET @ErrorMessage_Log += N', @Product_Weight=''' + ISNULL(CONVERT(NVARCHAR(50), @Product_Weight), 'NULL') + N'''';
    SET @ErrorMessage_Log += N', @Product_Length=''' + ISNULL(CONVERT(NVARCHAR(50), @Product_Length), 'NULL') + N'''';
    SET @ErrorMessage_Log += N', @Product_Height=''' + ISNULL(CONVERT(NVARCHAR(50), @Product_Height), 'NULL') + N'''';
    SET @ErrorMessage_Log += N', @Product_Width=''' + ISNULL(CONVERT(NVARCHAR(500), @Product_Width), 'NULL') + N'''';
    SET @ErrorMessage_Log += N' ! ';
    INSERT INTO dbo.Logs ( Store, Message, CreateBy, CreateDate, IsSendMail )
    VALUES (
               N'sp_MDELPHAR_API_ChangeTransportStatus_DaSoanHang' -- Store - nvarchar(max)
             , @ErrorMessage_Log -- Message - nvarchar(max)
             , 'HT' -- CreateBy - varchar(50)
             , GETDATE() -- CreateDate - datetime
             , NULL -- IsSendMail - bit
           );


    DECLARE
        @ResultID INT
      , @Message  NVARCHAR(MAX)
      , @ID       INT          = 0
      , @PosNum   INT;

    IF EXISTS (
                  SELECT TOP 1
                         1
                  FROM
                      dbo.PE_ORDR a ( NOLOCK )
                  WHERE
                      a.ID = @IDMdel
                      AND a.EcomNum = @EcomNum
              )
    BEGIN
        IF EXISTS (
                      SELECT TOP 1
                             1
                      FROM
                          dbo.Assign_ORDR a ( NOLOCK )
                      WHERE
                          a.IDORDR = @IDMdel
                          AND a.EcomNum = @EcomNum
                          AND EmployeeCode = @UserID
                          AND IsDelete = 0
                          AND EmployeeType IN (1, 2, 4, 5, 6)
                  ) -- 1 : tp THUOC | 2 pp Thuoc | 4 Ban chinh | 5 T.Quy | 6 T.Quy BK
        BEGIN
            IF EXISTS (
                          SELECT TOP 1
                                 1
                          FROM
                              dbo.PE_ORDR a ( NOLOCK )
                          WHERE
                              a.ID = @IDMdel
                              AND a.EcomNum = @EcomNum
                              AND TransportStatus IN (0, 1)
                      ) --0 Chua soan hang || 1 Dang soan hang
            BEGIN
                SET @PosNum = ISNULL((
                                         SELECT TOP 1
                                                PosNum
                                         FROM
                                             dbo.PE_ORDR a ( NOLOCK )
                                         WHERE
                                             a.ID = @IDMdel
                                             AND a.EcomNum = @EcomNum
                                     )
                                   , 0
                                    );

                IF @PosNum = 0
                BEGIN
                    SELECT TOP 0
                           CONVERT(NVARCHAR(250), NULL) AS Msg
                         , CONVERT(INT, NULL) AS SoDonHangPOS
                    INTO
                        #tmp_POS;
                    BEGIN TRY
                        DECLARE @p_PRODUCT_NAME NVARCHAR(200);
                        DECLARE @p_PRODUCT_DESCRIPTION NVARCHAR(500);
                        DECLARE @p_PRODUCT_QUANTITY INT;
                        DECLARE @p_PRODUCT_PRICE INT;
                        DECLARE @p_PRODUCT_TYPE NVARCHAR(20);
                        DECLARE @p_ORDER_SERVICE NVARCHAR(20);
                        DECLARE @p_count INT;
                        DECLARE @p_KL_TB INT;
                        DECLARE @p_RECEIVER_ADDRESS NVARCHAR(500);
                        DECLARE @p_RECEIVER_PROVINCE NVARCHAR(50);
                        DECLARE @p_RECEIVER_DISTRICT NVARCHAR(50);
                        DECLARE @p_RECEIVER_WARD NVARCHAR(50);
                        DECLARE @p_detail NVARCHAR(MAX);
                        SELECT
                            *
                        INTO
                            #TMPrdr1
                        FROM
                            dbo.PE_RDR1 a ( NOLOCK )
                        WHERE
                            a.IDHeader = @IDMdel
                        ORDER BY
                            a.Price DESC;
                        SELECT TOP 1
                               @p_PRODUCT_NAME = ItemName
                             , @p_PRODUCT_QUANTITY = Quantity
                        FROM
                            #TMPrdr1;
                        SET @p_KL_TB = @Product_Weight / @p_count;
                        SET @p_count = ( SELECT COUNT(1)FROM #TMPrdr1 );
                        SELECT TOP 1
                               @p_PRODUCT_DESCRIPTION = a.Note
                             , @p_PRODUCT_PRICE = a.OrderAmount
                             , @p_PRODUCT_TYPE = N'HH'
                             , @p_ORDER_SERVICE = a.Delivery_Type
                             , @p_RECEIVER_ADDRESS = ISNULL(a.CustAddress, '')
                             , @p_RECEIVER_PROVINCE = ISNULL(a.ReceiverProvince, '')
                             , @p_RECEIVER_DISTRICT = ISNULL(a.ReceiverDistrict, '')
                             , @p_RECEIVER_WARD = a.CustWardID
                        FROM
                            dbo.PE_ORDR a ( NOLOCK )
                        WHERE
                            a.ID = @IDMdel;
                        SET @p_detail = (
                                            SELECT
                                                ItemName AS PRODUCT_NAME
                                              , Price AS PRODUCT_PRICE
                                              , ISNULL(@p_KL_TB, 0) AS PRODUCT_WEIGHT
                                              , Quantity AS PRODUCT_QUANTITY
                                            FROM
                                                #TMPrdr1
                                            FOR XML RAW('DATA'), ROOT('DocumentElement')
                                        );
                        --HH là loại hàng hóa
                        /*
						<DocumentElement>
	<DATA>
		<PRODUCT_NAME>NANO CURCUMIN PLUS TAM THẤT XẠ ĐEN HVQY 3X10</PRODUCT_NAME>
		<PRODUCT_PRICE>20000</PRODUCT_PRICE>
		<PRODUCT_WEIGHT>10</PRODUCT_WEIGHT>
		<PRODUCT_QUANTITY>1</PRODUCT_QUANTITY>
	</DATA>
</DocumentElement>
						*/
                        INSERT INTO #tmp_POS ( Msg, SoDonHangPOS )
                        EXEC FRT_PHARMACY_ECOM.dbo.sp_Pull_SO_From_Ecom_To_ORDR
                            @NumEcom = @EcomNum -- varchar(50)
                          , @PRODUCT_NAME = @p_PRODUCT_NAME -- nvarchar(500)
                          , @PRODUCT_DESCRIPTION = @p_PRODUCT_DESCRIPTION -- nvarchar(500)
                          , @PRODUCT_QUANTITY = @p_PRODUCT_QUANTITY -- smallint
                          , @PRODUCT_PRICE = @p_PRODUCT_PRICE -- int
                          , @Product_Weight = @Product_Weight -- float
                          , @Product_Length = @Product_Length -- float
                          , @Product_Width = @Product_Height -- float
                          , @Product_Height = @Product_Width -- float
                          , @PRODUCT_TYPE = @p_PRODUCT_TYPE -- varchar(5)
                          , @ORDER_PAYMENT = 1 -- int
                          , @ORDER_SERVICE = @p_ORDER_SERVICE -- varchar(10)
                          , @ORDER_SERVICE_ADD = '' -- varchar(10)
                          , @ORDER_VOUCHER = '' -- varchar(50)
                          , @ORDER_NOTE = @p_PRODUCT_DESCRIPTION -- nvarchar(150)
                          , @MONEY_COLLECTION = @p_PRODUCT_PRICE -- int
                          , @DETAIL_ITEMS = @p_detail -- nvarchar(max)
                          , @RECEIVER_ADDRESS = @p_RECEIVER_ADDRESS -- nvarchar(500)
                          , @RECEIVER_PROVINCE = @p_RECEIVER_PROVINCE -- int
                          , @RECEIVER_DISTRICT = @p_RECEIVER_DISTRICT -- int
                          , @RECEIVER_WARD = @p_RECEIVER_WARD; -- int

                        IF EXISTS ( SELECT TOP 1 1 FROM #tmp_POS )
                        BEGIN
                            SET @PosNum = ISNULL(( SELECT TOP 1 SoDonHangPOS FROM #tmp_POS ), 0);
                            IF @PosNum <> 0
                            BEGIN
                                DECLARE @now DATETIME = GETDATE();
                                --TransportStatus DangSoanHang = 1,DaSoanHang = 2                  
                                UPDATE
                                    dbo.PE_ORDR
                                SET
                                    PosNum = @PosNum
                                  , TransportStatus = 2
                                  , Pricing_vtp = @Pricing_vtp
                                  , Product_Weight = @Product_Weight
                                  , Product_Length = @Product_Length
                                  , Product_Width = @Product_Width
                                  , Product_Height = @Product_Height -- lamhv4 add @Pricing_vtp
                                  , UpdateDate = @now
                                  , UpdateBy = @UserID
                                  , UpdateBy1 = @UserID
                                  , UpdateDate1 = @now
                                  , PosPushDate = @now
                                WHERE
                                    ID = @IDMdel
                                    AND EcomNum = @EcomNum;

                                UPDATE
                                    dbo.PE_RDR1
                                SET
                                    PosNum = @PosNum
                                WHERE
                                    IDHeader = @IDMdel
                                    AND EcomNum = @EcomNum;

                                UPDATE
                                    dbo.Assign_ORDR
                                SET
                                    PosNum = @PosNum
                                WHERE
                                    IDORDR = @IDMdel
                                    AND EcomNum = @EcomNum;

                                UPDATE
                                    dbo.TransportStatus_Log
                                SET
                                    PosNum = @PosNum
                                WHERE
                                    IDORDR = @IDMdel
                                    AND EcomNum = @EcomNum;

                                INSERT INTO dbo.TransportStatus_Log ( IDORDR, PosNum, EcomNum, TransportStatus, CreateBy, CreateDate, DeviceType )
                                VALUES (
                                           @IDMdel -- IDORDR - int
                                         , @PosNum -- PosNum - int
                                         , @EcomNum -- EcomNum - varchar(50)
                                         , 2 -- TransportStatus - int
                                         , @UserID -- UpdateBy - varchar(40)
                                         , @now -- CreateDate - datetime
                                         , @DeviceType
                                       );

                                SET @ResultID = 1;
                                SET @Message = N'Đã soạn hàng';
                                SET @ID = @PosNum;
                            END;
                            ELSE
                            BEGIN
                                SET @ResultID = 0;
                                SET @Message = N'Số đơn hàng POS bằng 0';
                            END;
                        END;
                        ELSE
                        BEGIN
                            SET @ResultID = 0;
                            SET @Message = N'POS không trả về số đơn hàng';
                        END;

                    END TRY
                    BEGIN CATCH
                        INSERT INTO dbo.Logs ( Store, Message, CreateBy, CreateDate )
                        VALUES (
                                   N'FRT_PHARMACY_ECOM.dbo.sp_Pull_SO_From_Ecom_To_ORDR @NumEcom =' + @EcomNum -- Store - nvarchar(max)
                                 , ERROR_MESSAGE() -- Message - nvarchar(max)
                                 , '10616-ANHTVH' -- CreateBy - varchar(50)
                                 , GETDATE() -- CreateDate - datetime
                               );
                        SET @ResultID = 0;
                        SET @Message = N'Tạo đơn hàng POS lỗi';
                    END CATCH;

                    DROP TABLE #tmp_POS;
                END;
                ELSE
                BEGIN
                    IF EXISTS (
                                  SELECT TOP 1
                                         1
                                  FROM
                                      dbo.PE_ORDR a ( NOLOCK )
                                  WHERE
                                      a.ID = @IDMdel
                                      AND a.EcomNum = @EcomNum
                                      AND TransportStatus IN (0, 1)
                              ) -- Chua soan hang
                    BEGIN
                        UPDATE
                            dbo.PE_ORDR
                        SET
                            TransportStatus = 2
                        WHERE
                            ID = @IDMdel
                            AND EcomNum = @EcomNum
                            AND TransportStatus IN (0, 1);
                    END;
                    SET @ResultID = 1;
                    SET @Message = N'Đã soạn hàng';
                    SET @ID = @PosNum;
                END;
            END;
            ELSE
            BEGIN
                SET @ResultID = 0;
                SET @Message = N'Đơn hàng đang ở trạng thái Chưa soạn hàng hoặc Đang soạn hàng mới có thể chuyển sảng Đã soạn hàng';
            END;
        END;
        ELSE
        BEGIN
            SET @ResultID = 0;
            SET @Message = N'Bạn không có quyền soạn đơn hàng này';
        END;
    END;
    ELSE
    BEGIN
        SET @ResultID = 0;
        SET @Message = N'Không tìm thấy đơn hàng';
    END;

    SELECT @ResultID AS ResultID, @Message AS [Message], @ID AS ID;
END;

GO

