
function checkFileUpload(f) {
    //▼	Edit - VietMXH - 02/08/2018 - Check đuôi file==================================================
    var l_File_Size = f.files[0].size;
    if (l_File_Size > 10485760) {
        $(f).val('');
        alert('Cảnh báo: Chỉ cho upload file có dung lượng <10MB! (' + l_File_Size + ' bytes)');
        return;
    }
    var l_File_Name = f.files[0].name;
    var l_File_Name_Str = l_File_Name.replace('.', '');
    if (/^[\w ]*$/.test(l_File_Name_Str) == false) {
        $(f).val('');
        alert('Cảnh báo: Tên file phải không dấu, không khoảng trắng và không có kí tự đặc biệt!');
        return;
    }
    else {
        var inValid = /\s/;
        if (inValid.test(l_File_Name_Str)) {
            $(f).val('');
            alert('Cảnh báo: Tên file không để khoảng trắng!');
            return;
        }
    }

    var l_FileExt = l_File_Name.split('.')[1];
    if (!!l_FileExt && l_FileExt != '') {
        var l_Allow_FileExt_Str = g_Allow_FileExt_Str;
        if (!!l_Allow_FileExt_Str && l_Allow_FileExt_Str != '') {
            var l_Allow_FileExt_Str__SplitToArr = l_Allow_FileExt_Str.split(',');
            if ($.inArray(l_FileExt.toLowerCase(), l_Allow_FileExt_Str__SplitToArr) < 0) {
                $(f).val('');
                alert('Cảnh báo: Đuôi file không hỗ trợ! (*.' + l_FileExt.toLowerCase() + ')');
                return;
            }
        }
        else {
            $(f).val('');
            alert('Cảnh báo: Hệ thống không cho up file!');
            return;
        }
    }
    else {
        $(f).val('');
        alert('Cảnh báo: Đuôi file không hợp lệ! (*.?)');
        return;
    }
    //▲	Edit - VietMXH - 02/08/2018 - Check đuôi file==================================================
};

Date.prototype.toDateInputValue = (function () {
    var local = new Date(this);
    local.setMinutes(this.getMinutes() - this.getTimezoneOffset());
    return local.toJSON().slice(0, 10);
});
String.prototype.replaceAll = (function (character) {
    var local = this;
    // character : , ; 
    /// replace local 

    return local;
});
function checkFileUploads(f) {
    $.each(f.files, function (index, item) {
        //▼	Edit - VietMXH - 02/08/2018 - Check đuôi file==================================================
        var l_File_Size = f.files[index].size;
        if (l_File_Size > 10485760) {
            $(f).val('');
            alert('Cảnh báo: Chỉ cho upload file có dung lượng <10MB! (' + l_File_Size + ' bytes)');
            return;
        }
        var l_File_Name = f.files[index].name;
        var l_File_Name_Str = l_File_Name.replace('.', '');
        if (/^[\w ]*$/.test(l_File_Name_Str) == false) {
            $(f).val('');
            alert('Cảnh báo: Tên file phải không dấu, không khoảng trắng và không có kí tự đặc biệt!');
            return;
        }
        else {
            var inValid = /\s/;
            if (inValid.test(l_File_Name_Str)) {
                $(f).val('');
                alert('Cảnh báo: Tên file không để khoảng trắng!');
                return;
            }
        }

        var l_FileExt = l_File_Name.split('.')[1];
        if (!!l_FileExt && l_FileExt != '') {
            var l_Allow_FileExt_Str = g_Allow_FileExt_Str;
            if (!!l_Allow_FileExt_Str && l_Allow_FileExt_Str != '') {
                var l_Allow_FileExt_Str__SplitToArr = l_Allow_FileExt_Str.split(',');
                if ($.inArray(l_FileExt.toLowerCase(), l_Allow_FileExt_Str__SplitToArr) < 0) {
                    $(f).val('');
                    alert('Cảnh báo: Đuôi file không hỗ trợ! (*.' + l_FileExt.toLowerCase() + ')');
                    return;
                }
            }
            else {
                $(f).val('');
                alert('Cảnh báo: Hệ thống không cho up file!');
                return;
            }
        }
        else {
            $(f).val('');
            alert('Cảnh báo: Đuôi file không hợp lệ! (*.?)');
            return;
        }
        //▲	Edit - VietMXH - 02/08/2018 - Check đuôi file==================================================
    });
};
var DeleteIMG, DeleteIMG2, DeleteIMG3; //Add - ThuongNM2 - 05/10/2018 - Loại: 187 - Thêm biến DeleteIMG3
$(document).ready(function () {
    var $$ = function (id) { return document.getElementById(id); },
        container = $$('handsontableEx'), Send = $$('btnSend'), hot;
    var container_TruyThuShop23 = $$('hansontable_data_truy_thu_shop_23'),hot_23; // LuanNT44-06/09/2019-23
    var container_TruyThuShop23_shop = $$('hansontable_data_truy_thu_shop_23_shop'),hot_23_shop; // LuanNT44-13/11/2019-23
    var catagoryInfo, catagoriesData;                                                       //Catagories Tree
    var dayOfWeek = [], dayOfMonth = [];                                                    //Schedu

    var arrNameShopDept = [], dataDept, dataDeptHandsontable = [];                         //#Dept 04/09/2015  
    var arrNameDevices = [], dataDevices, dataLimitedHc, dataHcHandsontable = [], dataLimitedHc135 = [];           //#Hc 04/09/2015  
    var InfoEmpCH_23 = []; //Edit - ThuongNM2 - 2018/09/25 Thay đổi rule HM BBDG
    var arrAppleNames = [], dataAppleNames;                                                // #Apple 04/09/2015
    var arrNameProduct = [], dataProduct, dataLimitedMko, dataMkoHandsontable = [];        // #Maketing  04/09/2015   
    var arrNameProduct_115 = [], dataDept_115, dataProduct_115, dataLimitedMkoMko, dataMkoMkoHandsontable = [];
    var arrNameProduct_HcCreate = [], dataDept_HcCreate = [], dataProduct_HcCreate, dataLimitedHcCreate, dataHcCreateHandsontable = []; // HC HC tạo  //NgoanHT - 25/10/2017 - 152 - Thêm - L2
    var arrNameEmployHr = [], dataHr, dataHrHandsontable = [];                                //#Hr 04/09/2015
    var arrNameTypeFund = [], dataFund, dataFundHandsontable = [];                            //#Fund  04/09/2015
    var arrNameEmployMoneyAdvance = [], dataMoneyAdvance, dataMoneyAdvanceHandsontable = [];  //#MoneyAdvance 04/09/2015
    var dataInventoryCash = [], dataInventoryCashHandsontable = [];                           //#InventoryCash 09/09/2015
    var dataItems = [], dataGripItems = [];                                                   //== Kiểm tra mặt hàng trên lưới có thuộc 'đồ dùng kỹ thuật' hay không
    var dataHcShopMoi = [];
    var dataFull = [], dataHandsontable = [];
    var dataLimitMkts = [];
    var dataShopByASM = [], dataShopByASMName = [];//Add - TrungNC3 - 20/11/2017 - Up thực yêu cầu Mkts thay đổi
    var duplicate1Shop = [], duplicate2Shop = [], duplicate3Shop = [];//Add - TrungNC3 - 20/11/2017 - Up thực yêu cầu Mkts thay đổi
    var $$ = function (id) { return document.getElementById(id); },
        container = $$('handsontableEx'),
        hot;
    var dataSave = [], dataHandsontable = [], catagoryInfo, dataInventoryHC = [];
    var dataSource_chitietHangmuc_24 = [], dataSource_NCC_24 = [], dataSource_Hangmuc2_24 = []; // LuanNT44 - 11/04/2020 - 24 - edit
    //Loại yêu cầu
    var $areaLoaiYeuCau = $('#areaLoaiYeuCau'),
        $txtLoaiYeuCau = $('#txtLoaiYeuCau'),
        $txtNgayHoanThanh = $('#TimeFutureFinish');

    // Loại hệ thống
    var $areaLoaiHeThong = $('#areaLoaiHeThong'),
        $txtLoaiHeThong = $('#txtLoaiHeThong'),
        $txtSearchLoaiHeThong = $('#txtSearchLoaiHeThong'),
        $areaTreeLoaiHethong = $('#areaTreeLoaiHethong'),
        $treeLoaiHeThong = $('#treeLoaiHeThong');
    $areaTreeLoaiHethong.hide();
    // Tiêu Đề
    var $areaTieuDe = $('#areaTieuDe'),
        $txtTieuDe = $('#Title'),
        $areaBtnCc = $('#areaBtnCc'),
        $btnCc = $('.cc-toggle'),
        $areaBtnDatLich = $('#areaBtnDatLich'),
        $btnDatlich = $('.schedule-toggle'),
        $areaBtnNoiDung = $('#areaBtnNoiDung'),
        $btnNoiDung = $('.body-toggle'),
        $areaBtnFileDinhKem = $('#areaBtnFileDinhKem'),
        $btnFileDinhKem = $('.file-toggle');

    //Cc
    var $areaCc = $('.cc'),
        $txtCc = $('#Cc');

    //Người thay thế
    var $areaNguoiThayThe = $('.sender'),
        $txtNguoiThayThe = $('#sender');


    //File Đính kèm
    var $areaFileDinhkem = $('.file-upload'),
        $fileDinhKem = $('#fileUpload');


    //Đặt lịch 
    var $areaDatLich = $('.schedule'),
        $dateBatDauDatLich = $('#dateFrom'),
        $dateNgayKetThucDatLich = $('#dateTo'),
        $chkTheoNgayThu = $('#schedule'),
        $dataNgayThu = $('#scheduleTypeData'),
        $timeGui = $('#timeSend');


    //Nội dung
    var $areaNoiDung = $('.compose-message'),
        $txtNoiDung = $('#Message');


    //Chi tiết
    var $areaChiTiet = $('#detail'),
        $areaDowloadAndImport = $('#sum-total');

    //cap nhat thoi gian
    var $areaUpdateTime = $('.timeUpdate');

    // nút gửi
    var $btnSend = $('#btnSend');

    //Hidden Thông tin
    var $hiddenChitiet = $('#Details'),
        $hiddenGioiHan = $('#DetailsLimited'),
        $hiddenMoTa = $('#Description'),
        $hiddenTieuDe = $('#TitleRequest'),
        $hiidenDatLich = $('#scheduleTypeDataHidden'),
        $hidddenTypeId = $('#typeId'),
        $hiddenGroupId = $('#GroupId');

    //  Catagories Modal
    var $catagoriesModal = $('#catagoriesModal'),
        $txtSearchCatagoriesModal = $('#searchCatagories'),
        $treeCatagoriesModal = $('#categoryTree');

    var hiddenDefault = function () {
        $areaLoaiHeThong.hide();
        $areaCc.hide();
        $areaNguoiThayThe.hide();
        $areaFileDinhkem.hide();
        $areaDatLich.hide();
        $areaChiTiet.hide();
        $areaNoiDung.hide();
        $areaUpdateTime.hide();
    };
    hiddenDefault();

    var pageSize = 100;
    var dataPages = [];
    var dataItemCode = [];
    //===============================================================================
    functionCellColor = {
        diffRenderer: function (instance, td, row, col, prop, value, cellProperties) {
            Handsontable.cellTypes['formula'].renderer.apply(this, arguments);
            td.style.backgroundColor = '#c3f89c';
            td.style.fontWeight = (col === 13 ? 'bold' : 'normal');
        },
        headerRenderer: function (instance, td, row, col, prop, value, cellProperties) {
            Handsontable.renderers.TextRenderer.apply(this, arguments);
            td.style.fontWeight = 'bold';
            td.style.color = '#ff6a00';
        },
        Render_Color_Row: function () {
            hot.updateSettings({
                cells: function (row, col, prop) {
                    var cellProperties = {};
                    var data = $.grep(rowHili, function (item, index) {
                        return item === row;
                    });
                    if (data.length > 0) {
                        cellProperties.renderer = functionCellColor.headerRenderer;
                    }
                    return cellProperties;
                }
            })
        }
    },
    //===============================================================================
        Validater = {
            //============validater=============
            quantity: function (value, callback) {
                if (value === 0)
                    callback(true);
                else if (isNaN(value) || value === undefined || value === null || value === "")
                    callback(false);
                else if (value < 0)
                    callback(false);
                else
                    callback(true);
            },          //quantity >=0 and isnumber
            money: function (value, callback) {
                if (value === 0)
                    callback(true);
                else if (isNaN(value) || value === undefined || value === null || value === "") {
                    callback(false);
                }
                else if (value < 0)
                    callback(false);
                else
                    callback(true);
            },             // money >= 0 and is number
            dateGreaterNowDay: function (value, callback) {
                var newdate = value.split("/").reverse().join("/");
                var dateValue = new Date(newdate);
                if ((dateValue.getTime() >= new Date().getTime())) {
                    callback(true);
                } else if (value === undefined || value === "") {
                    callback(true);
                } else {
                    callback(false);
                }
            }, // date > now
            //============validate================
            endFile: function (name) {
                var extension = name.split('.').pop().toLowerCase();
                if ($.inArray(extension, ['xlsx']) == -1) {
                    XFunction.RenderMessage('error', 'File exel không hợp lệ định dạng file hỗ trợ : xlsx');
                    return false;
                }
                else {
                    return true;
                }
            },                     //end file excel
            moneyString: function (value) {
                var number = value.replace(/,/g, '');
                if (isNaN(number)) {
                    return false;
                } else {
                    return true;
                }
            },                // money have ',' >=0     
            dateCheck: function (value) {
                if (value !== undefined && value !== "" && value !== null) {
                    var ManyNumber = value.split("/");
                    if (ManyNumber.length == 3) {
                        if (
                            isNaN(ManyNumber[0]) === false && parseInt(ManyNumber[0]) > 0 && parseInt(ManyNumber[0]) < 32 && ManyNumber[0].length === 2 &&
                            isNaN(ManyNumber[1]) === false && parseInt(ManyNumber[1]) > 0 && parseInt(ManyNumber[1]) < 13 && ManyNumber[1].length === 2 &&
                            isNaN(ManyNumber[2]) === false && parseInt(ManyNumber[2]) > 2000 && ManyNumber[2].length === 4
                        ) {
                            return true;
                        } else {
                            return false;
                        }
                    } else {
                        return false;
                    }
                } else {
                    return false;
                }

            },                  // check dd/mm/yyyy format 
        };
    //===============================================================================
    $('#fileUpload').change(function (event) {
        var files = event.target.files;
    });
    //===============================================================================
    var XFunction = {
        //===============================================================================
        RenderDataDayOfWeek: function () {
            for (i = 0; i < 6; i++) {
                var newdata = { label: 'Thứ ' + (i + 2), value: i + 2 };
                dayOfWeek.push(newdata);
            }
            dayOfWeek.push({ label: 'Chủ Nhật', value: 1 });
        },
        RenderDataDayOfMought: function () {
            for (i = 0; i < 31; i++) {
                var newdata = { label: (i + 1), value: i + 1 };
                dayOfMonth.push(newdata);
            }

        },

        RenderSchedu: function () {

            var now = new Date();
            var firstDay = new Date(now.getFullYear(), now.getMonth(), now.getDate());
            var lastDay = new Date(now.getFullYear(), now.getMonth() + 1, now.getDate());

            $('#dateFrom').val(firstDay.toDateInputValue());
            $('#dateTo').val(lastDay.toDateInputValue());

            var now = new Date(), housr, minutes;

            if (now.getHours() < 10) housr = "0" + now.getHours();
            else housr = now.getHours();

            if (now.getMinutes() < 10) minutes = "0" + now.getMinutes();
            else minutes = now.getMinutes();

            var time = housr + ":" + minutes + ":00";
            $('#timeSend').val(time);

            $('#dateFrom').change(function () {
                var dateF = $('#dateFrom').val();
                var dataT = $('#dateTo').val();
                if ((new Date(dateF) >= new Date(dataT))) {
                    toastr["error"]("<trong>Ngày bắt đầu không được lớn hơn hoặc bằng ngày kết thúc</strong>");
                    $('#dateFrom').val(firstDay.toDateInputValue());
                } else if (new Date(dateF) < now) {
                    toastr["error"]("<trong>Ngày bắt đầu không được nhỏ hơn ngày hiện tại</strong>");
                    $('#dateFrom').val(firstDay.toDateInputValue());
                }
            });
            $('#dateTo').change(function () {
                var dateF = $('#dateFrom').val();
                var dataT = $('#dateTo').val();
                if ((new Date(dataT) <= new Date(dateF))) {
                    toastr["error"]("<trong>Ngày kết thúc không được nhỏ hơn hoặc bằng ngày bắt đầu</strong>");
                    $('#dateTo').val(lastDay.toDateInputValue());
                } else if (new Date(dataT) < now) {
                    toastr["error"]("<trong>Ngày kết thúc không được nhỏ hơn ngày hiện tại</strong>");
                    $('#dateTo').val(lastDay.toDateInputValue());
                }
            });

        },
        RenderScheduData: function () {
            $('#scheduleTypeData').multiselect({
                enableCaseInsensitiveFiltering: true,
                maxHeight: 200,
                includeSelectAllOption: true,
                selectAllText: 'Chọn tất cả',
                buttonWidth: '100%',
                buttonText: function (options, select) {
                    if (options.length === 0) {
                        return 'Chưa chọn';
                    }
                    else if (options.length > 5) {
                        return "Đã chọn (" + options.length + ")";
                    }
                    else {
                        var labels = [];
                        options.each(function () {
                            if ($(this).attr('label') !== undefined) {
                                labels.push($(this).attr('label'));
                            }
                            else {
                                labels.push($(this).html());
                            }
                        });
                        return labels.join(', ') + '';
                    }
                },
                onChange: function (option, checked, select) {
                    if ($('#scheduleTypeData').val() == null)
                        $('#scheduleTypeDataHidden').val("");
                    else
                        $('#scheduleTypeDataHidden').val($('#scheduleTypeData').val());

                }
            });
            $('#scheduleTypeData').multiselect('dataprovider', dayOfMonth);

            $('#schedule').change(function () {
                var stage = $('#schedule').is(':checked');
                if (stage) {
                    $('#scheduleTypeData').multiselect('dataprovider', dayOfWeek);
                }
                else {
                    $('#scheduleTypeData').multiselect('dataprovider', dayOfMonth);
                }
            });
        },

        RenderOtherEvent: function () {

            $('.sum-note').summernote({
                height: 100,
                codemirror: { theme: 'monokai' },
                toolbar:
                    [
                        ['style', ['style']],
                        ['font', ['bold', 'italic', 'underline', 'clear']],
                        ['fontname', ['fontname']],
                        ['color', ['color']],
                        ['para', ['ul', 'ol', 'paragraph']],
                        ['height', ['height']],
                        ['table', ['table']],
                        ['view', ['fullscreen', 'codeview']],
                        ['help', ['help']]
                    ],
                onpaste: function (e) {
                    var bufferText = ((e.originalEvent || e).clipboardData || window.clipboardData).getData('Text');
                    e.preventDefault();
                    setTimeout(function () {
                        document.execCommand('insertText', false, bufferText);
                    }, 10);
                },
                onImageUpload: function (files, editor, welEditable) {
                    setShowMessage('error', 'Callog không hỗ trợ gửi nội dung có hình vui lòng upload hình bên dưới :(');
                }
            });

            $('.cc').hide();
            $('.cc-toggle').on('click', function () {
                $('.cc').toggle('slow');
            })

            $('.schedule').hide();
            $('.schedule-toggle').on('click', function () {
                $('.schedule').toggle('slow');
            })

            $('.file-upload').hide();
            $('.file-toggle').on('click', function () {
                $('.file-upload').toggle('slow');
            })

            $('.compose-message').hide();
            $('.body-toggle').on('click', function () {
                $('.compose-message').toggle('slow');
            });

            $('#areaBtnthaythe').hide();
            $('.sender').hide();
            $('.thaythe-toggle').on('click', function () {
                $('.sender').toggle('slow');
            });

            $('.greenTree').hide();

            $('#sum-total').hide();

            $('.sender').hide();

        },
        RenderKeyCode: function () {
            Handsontable.Dom.addEvent(document.body, 'keyup', function (e) {
                if (e.keyCode === 35 && $('#myModal').hasClass('in') == false && $('#warningModal').hasClass('in') == false) {
                    $('#btnSend').trigger('click');
                }
                if ((e.keyCode === 35 || e.keyCode === 13) && $('#warningModal').hasClass('in') == true) {
                    $('#SendModal').trigger('click');
                }
                if ((e.keyCode === 36 || e.keyCode === 27) && $('#warningModal').hasClass('in') == true) {
                    $('#NoSendModal').trigger('click');
                }
            });
        },

        RenderMessage: function (type, message) {
            toastr.options = { "newestOnTop": true, "showMethod": "show", "hideMethod": "hide", "positionClass": "toast-top-right", "timeOut": "5000", "extendedTimeOut": "5000", };
            toastr[type]("<strong>" + message + "</strong>");
        },
        //===============================================================================
        RenderTreeChooseCatagories: function () {
            //▼ Add - 22/10/2018 - TuanNA89 -- CR Cải tiến calllog
            var CheckSurvey = function (TypeId) {
                //▼ Add - 22/10/2018 - TuanNA89 -- CR Cải tiến calllog - check calllog chưa survey
                var idSelected, checkSurvey, lengthSurvey, i, result;
                $surveyModal = $('#surveyModal');
                $sendSurvey = $('#sendSurvey');

                $.ajax({
                    async: false,
                    url: "/Requests/CaiTienCalllog_KiemTra",
                    type: "GET",
                    data: { p_LoaiCalllog: TypeId },
                    success: function (p_ActionResult) {
                        if (!!p_ActionResult && p_ActionResult.length > 0 && p_ActionResult[0].Result == '1') {
                            $surveyModal.modal('show');
                            $catagoriesModal.modal('hide');
                            messageSurvey = document.getElementById("messageSurvey");
                            messageSurvey.innerHTML = p_ActionResult[0].Msg;
                            lengthSurvey = p_ActionResult.length;
                            requestSurvey = document.getElementById("requestSurvey");

                            for (i = 0; i < lengthSurvey; i++) {
                                requestSurvey.innerHTML += p_ActionResult[i].CodeSurvey;
                            }

                            checkSurvey = p_ActionResult[0].Result;

                            //▼ Add - 22/10/2018 - TuanNA89 -- CR Cải tiến calllog - cập nhật survey calllog
                            $sendSurvey.on('click', function () {
                                var listSurveyChecked = $('input[type="radio"]:checked');
                                var noteSurvey = $('input[name="noteSurvey"]');
                                var data = [],
                                    item = {},
                                    i, requestId, rating, note;

                                if (listSurveyChecked.length < lengthSurvey) {
                                    XFunction.RenderMessage('error', 'Phải đánh giá hết calllog cũ mới được phép tạo calllog mới!');
                                    result = false;
                                }
                                else {
                                    for (i = 0; i < lengthSurvey; i++) {
                                        requestId = (listSurveyChecked[i].name).replace('star', '') || '';
                                        rating = listSurveyChecked[i].value || '0';
                                        note = noteSurvey[i].value || '';

                                        if (rating == '0') {
                                            XFunction.RenderMessage('error', 'Mã Calllog ' + requestId + ' chưa được đánh giá!');
                                            return false;
                                        }

                                        if ((rating == '1') && (note == '')) {
                                            XFunction.RenderMessage('error', 'Vui lòng cho chúng tôi biết ý kiến của bạn ở ô chọn 1 sao, bằng cách nhập vào mục Đóng góp ý kiến!');
                                            return false;
                                        }

                                        item = {
                                            "RequestId": (listSurveyChecked[i].name).replace('star', ''),
                                            "Rating": listSurveyChecked[i].value,
                                            "Note": noteSurvey[i].value
                                        };
                                        data.push(item);
                                    }
                                    console.log(data);

                                    $.ajax({
                                        async: false,
                                        url: "/Requests/CaiTienCalllog_CapNhatDanhGia",
                                        type: "POST",
                                        data: { p_data: data, p_User: '' },
                                        success: function (p_ActionResult) {
                                            if (!!p_ActionResult && p_ActionResult.length > 0 && p_ActionResult[0].Result == '0') {
                                                XFunction.RenderMessage('error', 'Lỗi cập nhật');
                                                result = false;
                                            }
                                            else {
                                                XFunction.RenderMessage('success', 'Cập nhật thành công!');
                                                $surveyModal.modal('hide');
                                                result = true;
                                            }
                                        },
                                        error: function () {
                                            XFunction.RenderMessage('error', 'Lỗi cập nhật!');
                                            result = false;
                                        }
                                    });
                                }
                            });
                            //▲ Add - 22/10/2018 - TuanNA89 -- CR Cải tiến calllog - cập nhật survey calllog
                        }
                        else {
                            result = false;
                        }
                    }
                });
                //▲ Add - 22/10/2018 - TuanNA89 -- CR Cải tiến calllog - check calllog chưa survey
                return result;
            };
            //▲ Add - 22/10/2018 - TuanNA89 -- CR Cải tiến calllog
            $.get('/Requests/GetCategories', null, function (data) {
                catagoriesData = data;
                var catarories = [];
                if (data != "" && data != null && data != undefined) {
                    $.each(data, function (index, item) {
                        catarories.push({ "id": item.Id, "parent": item.ParentId, "text": item.Description, });
                    });
                }
                $('#categoryTree').jstree({
                    "core": { data: catarories, },
                    "plugins": ["wholerow", "search", "types"],
                    "types": {
                        "Fa": { "icon": "/assets/images/Maps-Pin-Place-icon.png" },
                        "Chid": { "icon": "/assets/images/blue-home-icon.png" },
                        "Default": { "icon": "/assets/images/Maps-Pin-Place-icon.png" }
                    },
                }).on('changed.jstree', function (e, data) {
                    var listSelected = data.selected;
                    $.each(listSelected, function (index, item) {
                        var find = false;
                        $.each(catagoriesData, function (index, element) {
                            if (item == element.Id && element.HasDetail !== null && element.Is_CreateCallLog === true) {//TrungNC3 - 23/10/2017 - Them điều kiện chọn Loai CallLog
                                //▼ Add - 22/10/2018 - TuanNA89 -- CR Cải tiến calllog
                                var resultCheckSurvey = CheckSurvey(element.Id);
                                //▲ Add - 22/10/2018 - TuanNA89 -- CR Cải tiến calllog

                                $.get('/Requests/GetScheduleTime', { TypeId: element.Id }, function (data) {
                                    $('#TimeFutureFinish').val(data);
                                });

                                var dt = new Date();

                                //▼	Edit - VietMXH - 30/07/2018 - Ecom==================================================
                                switch (element.Id) {
                                    case 18:
                                        if (true) {
                                            $('#Title').val(element.Description + ' - ' + (dt.getMonth() + 1) + '/' + dt.getFullYear());
                                        }
                                        break;
                                    case 25:
                                        if (true) {
                                            // Add - TuanNA89 - 22/07/2020 - Chặn không cho thao tác loại CL này
                                            var a = document.createElement('a');
                                            a.target = '_blank';
                                            a.href = 'https://ssc.fptshop.com.vn/login.jspa?logout=true';

                                            //then use this code for alert
                                            if (window.confirm('Bạn vui lòng vào Uservice để tạo yêu cầu hỗ trợ theo đường link: https://ssc.fptshop.com.vn/login.jspa?logout=true. Cảm ơn bạn đã hợp tác!')) {
                                                a.click();
                                            };
                                            //alert('info', 'Bạn vui lòng vào Uservice để tạo yêu cầu hỗ trợ theo đường link: <a href="https://ssc.fptshop.com.vn/login.jspa?logout=true" target="_blank">https://ssc.fptshop.com.vn/login.jspa?logout=true</a>.Cảm ơn bạn đã hợp tác!');
                                            return false;
                                            // Add - TuanNA89 - 22/07/2020 - Chặn không cho thao tác loại CL này
                                            $('#Title').val(element.Description + shop + ' - ' + (dt.getMonth() + 1) + '/' + dt.getFullYear());

                                            //▼	Edit - VietMXH - 08/08/2018 - CallLog Hỗ trợ Thông tin - Ecom==================================================
                                            if ($.inArray($('#g_JobTitleCode').val(), [
                                                , '00476'    //  00476:Nhân Viên Hỗ Trợ Kỹ Thuật Ecom
                                                , '00482'    //  00482:Trưởng nhóm tiếp nhận cuộc gọi
                                                , '00483'    //  00483:Nhân Viên Tiếp Nhận Cuộc Gọi
                                                , '00486'    //  00486:Trưởng nhóm xử lý đơn hàng
                                                , '00505'    //  00505:Trưởng Nhóm Dự Án Ecom
                                                , '00568'    //  00568:Nhân Viên Xử Lý Đơn Hàng F.F
                                                , '00591'    //  00591:Nhân Viên Hỗ Trợ Kỹ Thuật Ecom_Ca Đêm
                                                , '00606'    //  00606:Nhân viên telesale FFriends
                                                , '00609'    //  00609:Nhân viên Hỗ trợ Kỹ thuật Online APR
                                                , '00610'    //  00610:Nhân viên Tư vấn Trực tuyến
                                                , '00642'    //  00642:Nhân viên Khai thác đơn hàng
                                                , '00687'    //  00687:Trưởng nhóm tư vấn trực tuyến
                                            ]) > -1) {
                                                $txtLoaiHeThong.val('Pass code');  //  Loại Hệ thống: Pass code ( 5757:BETA ; 2476:GOLIVE )
                                                $txtCc.tagsinput('add', { Code: "***frt.kythuat.ecom@fpt.com.vn", Name: "frt.kythuat.ecom@fpt.com.vn", Type: "GroupMail" });
                                                $.ajax({
                                                    async: false,
                                                    url: "/Requests/Create__GET__CallCenter_GetContentInbound",
                                                    type: "GET",
                                                    data: { p_EcomId: $('#g_EcomId').val() },
                                                    success: function (p_ActionResult) {
                                                        if (!!p_ActionResult && p_ActionResult.length > 0 && p_ActionResult[0].CallContent != '') {
                                                            $('.compose-message .note-editor .note-editable').text(p_ActionResult[0].CallContent.toString());
                                                        }
                                                    }
                                                });
                                            }
                                            //▲	Edit - VietMXH - 08/08/2018 - CallLog Hỗ trợ Thông tin - Ecom==================================================

                                        }
                                        break;
                                    case 132:
                                        if (true) {
                                            $('#Title').val(element.Description + ' - ' + nameNotCode + shop + ' - ' + (dt.getMonth() + 1) + '/' + dt.getFullYear());
                                        }
                                        break;
                                    case 150:
                                        if (true) {
                                            $('#Title').val(element.Description + ' - ' + dt.getDate() + '/' + (dt.getMonth() + 1) + '/' + dt.getFullYear());
                                        }
                                        break;
                                    case 154:
                                    case 163:
                                        if (true) {
                                            $('#Title').val(element.Description + shop + ' - ' + dt.getDate() + '/' + (dt.getMonth() + 1) + '/' + dt.getFullYear());
                                        }
                                        break;
                                    case 181:
                                    case 186:
                                    case 201:
                                        if (true) {
                                            $('#Title').val(element.Description + shopB1 + ' - ' + dt.getDate() + '/' + (dt.getMonth() + 1) + '/' + dt.getFullYear());
                                        }
                                        break;
                                    case 204:
                                        if (true) {
                                            $('#Title').val(element.Description + shop + ' - ' + dt.getDate() + '/' + (dt.getMonth() + 1) + '/' + dt.getFullYear());
                                        }
                                        break;
                                        //ChuongNT3 - 22/08/2018 - sửa tiêu đề 205
                                    case 205:
                                        if (true) {
                                            $('#Title').val(element.Description + shop + ' - ' + dt.getDate() + '/' + (dt.getMonth() + 1) + '/' + dt.getFullYear());
                                        }
                                        break;
                                    //▼ Add - TuanNA89 - 04/12/2019 - CallLog in ấn POSM - Loại 223
                                    case 223:
                                        if (true) {
                                            $('#Title').val(element.Description + ' - ' + dt.getDate() + '/' + (dt.getMonth() + 1) + '/' + dt.getFullYear());
                                        }
                                        break;
                                    //▲ Add - TuanNA89 - 04/12/2019 - CallLog in ấn POSM - Loại 223
                                    default:
                                        if (true) {
                                            $('#Title').val(element.Description + shop + ' - ' + (dt.getMonth() + 1) + '/' + dt.getFullYear());
                                        }
                                        break;
                                }
                                //▲	Edit - VietMXH - 30/07/2018 - Ecom==================================================

                                $txtLoaiYeuCau.val(element.Description);
                                $('#catagoryType').val(element.Description);

                                XFunction.RenderDataAndEventForTypeId(element);
                                $('#catagoriesModal').modal('hide');

                                catagoryInfo = element;

                                find = true;
                                return true;
                            }
                        });
                        if (find == true) return true;
                    });

                }).on('loaded.jstree', function () {
                    $('#categoryTree').jstree('open_all');
                });

                var to = false;
                $('#searchCatagories').keyup(function () {
                    if (to) { clearTimeout(to); }
                    to = setTimeout(function () {
                        var v = $('#searchCatagories').val();
                        $('#categoryTree').jstree(true).search(v);
                    }, 250);
                });

                $('#categoryTree').jstree("open_all");
                $('#catagoriesModal').modal('show');
            });
        },
        RenderTagInputCc: function () {

            //▼	Edit - VietMXH - 23/06/2018 - /Requests/Create get CC==================================================
            ////$.get('/Requests/GetEmps', null, function (data) {
            ////    $('.user-tag').tagsinput({
            ////        itemValue: 'value', itemText: 'text',
            ////        typeahead: { source: data },
            ////    });
            ////    $('.sender-tag').tagsinput({
            ////        itemValue: 'value', itemText: 'text',
            ////        typeahead: { source: data },
            ////        maxTags: 1,
            ////    });
            ////});
            //---------------------------------------------------------------------------------------------------------
            $.get('/Requests/Request__Create__GetCC',
                { p_EmployeeCode: "", p_Is_AddGroupMail: true },
                function (p_ActionResult) {
                    $('.user-tag').tagsinput({
                        itemValue: 'Code', itemText: 'Name',
                        typeahead: { source: p_ActionResult },
                        tagClass: function (p_Item) {
                            switch (p_Item.Type) {
                                case 'Employee': return 'label label-info';
                                case 'GroupMail': return 'label label-danger label-important';
                            }
                        }
                    });
                    var l_ActionResult_Emp = $.grep(p_ActionResult, function (p_Item, p_Index) {
                        return p_Item.type == 1;
                    });
                    $('.sender-tag').tagsinput({
                        itemValue: 'Code', itemText: 'Name',
                        typeahead: { source: l_ActionResult_Emp },
                        maxTags: 1,
                    });
                });
            //▲	Edit - VietMXH - 23/06/2018 - /Requests/Create get CC==================================================

        },
        //===============================================================================
        RenderDataAndEventForTypeId: function (info) { // LuanNT44-06/09/2019-23
            var id = info.Id;
            $('#fileSupp').attr('href', 'Download?TypeId=' + info.Id); //render link dowload file support import excel
            if (info.Id === 23) {
                XFunction.RenderGridHc();                                   //#Hc 04/09/2015
                Handsontable.Dom.addEvent(Send, 'click', function () {
                    $btnSend.prop("disabled", true);// Edit - ThuongNM2 - 2018/10/10 Fix lỗi tạo trùng CL 23
                    console.log('InsideCode', InsideCode);

                    // TuanNA89 - 05/10/2020 - Lưu Log, so sánh mã nhân viên trên màn hình tạo CL và CurrentUser
                    $.get('/Requests/CheckDiffUser', { InsideCode_FromView: InsideCode, Note: 'CreateRequests/RenderDataAndEventForTypeId' }, function (respone) {
                        if (respone) {
                            console.log(respone);
                            if (respone[0].Result == '0') {
                                xFunction.RenderMessage('error', respone[0].Message);
                                window.location = "/";
                            }
                        }
                    }).done(function () { });

                    //=== Kiểm tra có tồn tại 1 callLog trong tháng chưa duyệt của loại 126 hay không
                    var dataGripItems = hot.getData();
                    var ItemCodes = [], data126;
                    $.each(dataGripItems, function (index, item) {
                        $.grep(dataItems, function (value, posi) {
                            if (value.ItemName === item.ItemName) {
                                ItemCodes.push(value.ItemId);
                            };
                        });
                    });
                    $.get('/Requests/Request_GetSimilar_TypeID_126', { TypeId: 126, Items_Code: ItemCodes.toString() }, function (data) {
                        data126 = data;
                    });
                    //▼  LuanNT44-06/09/2019-23
                    $.get('/Requests/GetRequestSimilar', { TypeId: 23 }, function (data) {
                        //▼  Add - ThuongNM2 - 02/08/2019 - Loại 23 - HC
                        $.get('/Requests/Items_LimitedValue_BO', null, function (dataBO) {
                            //▼ Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                            //var myData = hot.getData(0, 0, hot.getData().length, 8);
                            var myData = hot == undefined ? "" : $.grep(hot.getData(), function (item, index) {
                                return item.ItemName != undefined && item.ItemName != '' && item.ItemName != null;
                            });
                            //▼  LuanNT44-13/11/2019-23
                            var maPB_BO = '', companyCode = ''; // LuanNT44-10/01/2020-Hân YC thêm mã kho truyền sang POS
                            if(dataBO !== undefined && dataBO !== null && dataBO !== '' && dataBO.length > 0)
                            {
                                maPB_BO = dataBO[0].MaPB;
                                companyCode = dataBO[0].CompanyCodeB1; // LuanNT44 - 10 / 01 / 2020 - Hân YC thêm mã kho truyền sang POS
                            }
                            var datas = [], dataCheckLimitedHc = [];
                            $.each(myData, function (index, item) {
                                //▼ Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                                if (item.ItemName !== null && item.ItemName !== undefined && item.ItemName !== "") {
                                    var timkiemthietbi = $.grep(dataDevices, function (element, index) {
                                        //▼ Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                                        return element.ItemName === item.ItemName && item.soluongdat > 0;
                                    });
                                    if (timkiemthietbi != null && timkiemthietbi != undefined && timkiemthietbi.length > 0) {
                                        datas.push({
                                            //▼ Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                                            'ProductGroup': timkiemthietbi[0].MaNhomSP,
                                            'Item': timkiemthietbi[0].ItemId,
                                            'ItemGroup': timkiemthietbi[0].GroupId,
                                            'QuantityTonKho': item.soluongtonkho,
                                            'Quantity': item.soluongdat,
                                            'Price': timkiemthietbi[0].Price,
                                            'Sum': item.soluongdat * timkiemthietbi[0].Price,
                                            'Unit': timkiemthietbi[0].Unit,
                                            'Note': item.ghichu,
                                            'NhanVienTT' : item.NhanVienTT,
                                            'SoLuongTT' : item.SoluongAo, // LuanNT44-20/09/2019-23
                                            'ShopDatAo': item.ShopDatAo,
                                            'SLDat': item.SLDat,
                                            'GhiChuDat': item.GhiChuDat,
                                            'MaPB_BO': maPB_BO,   // LuanNT44-10/01/2020-Hân YC thêm mã kho truyền sang POS
                                            'CompanyCodeB1': companyCode  // LuanNT44-10/01/2020-Hân YC thêm mã kho truyền sang POS
                                            //▲ Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                                        });
                                    }
                                }
                            });
                            //▲ Edit - =======================================
                            //=== Nếu loại 126 có tồn tại 1 callLog trong tháng chưa duyệt
                            //=== thì không cho tạo nữa
                            //▲ LuanNT44-06/09/2019-23
                            if (data126 !== undefined && data126 !== null && data126 !== '' && data126.length > 0) {
                                var req = '';
                                $.each(data126, function (index, item) {
                                    req += item.Id + ', ';
                                });
                                XFunction.RenderMessage('error', 'Hiện tại trong tháng đang có ' + data126.length + ' yêu cầu ' + req + ' đặt hàng chưa được xử lý <br/> Nên không được thêm cho đến khi các yêu cầu kia được xử lý hoặc qua tháng mới');
                                $btnSend.prop("disabled", false);// Edit - ThuongNM2 - 2018/10/10 Fix lỗi tạo trùng CL 23
                                return false;
                            };
                            //▼ Edit - ThuongNM2 - 2018/10/22 Không bắt hoàn tất những CL trong tháng
                            if (data !== undefined && data !== null && data !== '' && data.length > 0) {
                                var req = '';
                                $.each(data, function (index, item) {
                                    req += item.Id + ', ';
                                });
                                XFunction.RenderMessage('error', 'Hiện tại trong tháng đang có ' + data.length + ' yêu cầu ' + req + ' đặt hàng chưa được xử lý <br/> Nên không được tạo thêm cho đến khi các yêu cầu kia được xử lý hoặc qua tháng mới');
                                $btnSend.prop("disabled", false);// Edit - ThuongNM2 - 2018/10/10 Fix lỗi tạo trùng CL 23
                                return false;
                            }
                            //▲ Edit - ThuongNM2 - 2018/10/22 Không bắt hoàn tất những CL trong tháng
                            if (datas.length <= 0) {
                                XFunction.RenderMessage('error', 'Chi tiết không được để trống <br/>Xin hãy nhập chi tiết vào bảng chi tiết');
                                $btnSend.prop("disabled", false);// Edit - ThuongNM2 - 2018/10/10 Fix lỗi tạo trùng CL 23
                                return false;
                            }
                            //▼  LuanNT44-06/09/2019-23 // LuanNT44-17/09/2019
                            if(JobTitleCode !== '00304')
                            {
                                //▼ LuanNT44-03/01/2020-23-fix update line detail
                                $.each(datas, function (index, item)
                                {
                                    if (item.ItemGroup != 19) {
                                        item.NhanVienTT = '';
                                        item.SoLuongTT = '';
                                    }
                                })
                                //▲ LuanNT44-03/01/2020-23-fix update line detail
                                var flagGhichuAO = $.grep(datas, function(item,index){
                                    return item.ItemGroup == 19 && (item.Note == '' || item.Note == null || item.Note == undefined)
                                })
                                if(flagGhichuAO.length > 0)
                                {
                                    XFunction.RenderMessage('error', 'Vui lòng nhập loại áo nam/nữ, size áo tại cột ghi chú');
                                    $btnSend.prop("disabled", false);
                                    return false;
                                }
                                //▼ LuanNT44-18/09/2019
                                var ShopCodeB1HC = InfoEmpHC_23[0].WarehouseCodeB1; // LuanNT44-09/09/2019-23
                                var flagNVTT = $.grep(datas, function(item,index){
                                    return item.ItemGroup == 19 && (item.NhanVienTT == '' || item.NhanVienTT == null || item.NhanVienTT == undefined)
                                })
                                if(flagNVTT.length > 0 && (ShopCodeB1HC !== null && ShopCodeB1HC !== undefined && ShopCodeB1HC !== "")) // LuanNT44-18/09/2019 -23
                                {
                                    XFunction.RenderMessage('error', 'Chưa có nhân viên truy thu trên popup !!');
                                    $btnSend.prop("disabled", false);
                                    return false;
                                }
                                //▲ LuanNT44-18/09/2019
                            }
                            else
                            {
                                var flagGhichuAO_00304 = $.grep(datas, function(item,index){
                                    return item.ItemGroup == 19 && ((item.ShopDatAo == '' || item.ShopDatAo == null || item.ShopDatAo == undefined) || (item.SLDat == '' || item.SLDat == null || item.SLDat == undefined || item.SLDat == 0) || (item.GhiChuDat == '' || item.GhiChuDat == null || item.GhiChuDat == undefined))
                                })
                                if(flagGhichuAO_00304.length > 0)
                                {
                                    XFunction.RenderMessage('error', 'Vui lòng nhập đầy đủ thông tin popup cột "Shop đặt áo" !');
                                    $btnSend.prop("disabled", false);
                                    return false;
                                }
                            }
                            var checkflag_Aodat = 0;
                            $.each(datas, function (index, item) {
                                if (JobTitleCode !== '00304') {
                                    var sldat = item.Quantity;
                                    var list_sl_ao = item.SoLuongTT;
                                    if (list_sl_ao !== '' && list_sl_ao !== undefined && list_sl_ao !== null) {
                                        var sl_ao = 0;
                                        if (list_sl_ao.indexOf(',') > 0) {
                                            var array_ao = list_sl_ao.split(',');
                                            $.each(array_ao, function (index1, item1) {
                                                sl_ao += Number(item1);
                                            })
                                        }
                                        else {
                                            sl_ao = Number(item.SoLuongTT);
                                        }
                                        if (sldat != sl_ao) {
                                            checkflag_Aodat ++;
                                        }
                                    }
                                }
                                else {
                                    var sldat = item.Quantity;
                                    var list_sl_ao = item.SLDat;
                                    if (list_sl_ao !== '' && list_sl_ao !== undefined && list_sl_ao !== null) {
                                        var sl_ao = 0;
                                        if (list_sl_ao.indexOf(',') > 0) {
                                            var array_ao = list_sl_ao.split(',');
                                            $.each(array_ao, function (index1, item1) {
                                                sl_ao += Number(item1);
                                            })
                                        }
                                        else {
                                            sl_ao = Number(item.SLDat); // LuanNT44 - 09/05/2020 - 23 - fix
                                        }
                                        if (sldat != sl_ao) {
                                            checkflag_Aodat++;
                                        }
                                    }
                                }
                            })
                            if (checkflag_Aodat > 0) {
                                XFunction.RenderMessage('error', 'Số lượng áo đặt không bằng số lượng áo trên popup !');
                                $btnSend.prop("disabled", false);// LuanNT44-Edit
                                return false;
                            }
                            //▲ LuanNT44-13/11/2019-23
                            //▲ LuanNT44-06/09/2019-23 // LuanNT44-17/09/2019
                            //▼ Edit - ThuongNM2 - 2018/09/25 Thay đổi rule HM BBDG
                            //=== Kiểm tra định mức của từng nhóm hàng theo mã shop
                            //console.log(dataLimitedHc)
                            //console.log(datas)
                            //▼  LuanNT44-06/09/2019-23
                            var flagAoDongPhuc = 0;
                            $.each(datas, function(index, item){ // kiểm tra line toàn áo đồng phục
                                if(item.ItemGroup == 19) // LuanNT44-18/09/2019
                                {
                                    flagAoDongPhuc ++;
                                }
                            })
                            //▲ LuanNT44-06/09/2019-23
                            
                            var checkShopAPR = false;

                            if (ShopCodeB1HC !== null && ShopCodeB1HC !== undefined && ShopCodeB1HC !== "") {
                                checkShopAPR = ShopCodeB1HC.toString().startsWith("4"); // Shop APR bắt đầu bằng 4
                                $.each(dataLimitedHc, function (index, item) {
                                    var nhomgioihan = $.grep(datas, function (element, index) {
                                        return element.ItemGroup == item.MaNhom && element.ItemGroup != 19; //  LuanNT44-06/09/2019-23
                                    });
                                    if (nhomgioihan !== null && nhomgioihan !== undefined && nhomgioihan !== "" && nhomgioihan.length > 0) {
                                        var thanhtien = 0, vuot = 0;
                                        $.each(nhomgioihan, function (index, itemGroup) {
                                            ///----------------------------------------- Rule mới --
                                            if (InfoEmpHC_23[0].RegionL2 === "00006")// Shop pilot Ha noi BO thì Region NULL rồi
                                            {
                                                if (itemGroup.ItemGroup === 1) {
                                                    if (checkShopAPR === false && (itemGroup.Item === 445 || itemGroup.Item === 446 || itemGroup.Item === 852)) {
                                                        thanhtien += parseInt(itemGroup.Sum);
                                                    }
                                                }
                                                else {
                                                    thanhtien += parseInt(itemGroup.Sum);
                                                }
                                            }
                                                ///----------------------------------------- Rule mới --
                                                ///----------------------------------------- Rule Cũ --
                                            else { // Không phải shop HN và Thuộc BO
                                                thanhtien += parseInt(itemGroup.Sum);
                                            }

                                            ///----------------------------------------- Rule Cũ --
                                        });
                                        if (thanhtien > item.DinhMuc) {
                                            vuot = thanhtien - parseInt(item.DinhMuc);
                                        }
                                        dataCheckLimitedHc.push({
                                            'ItemGroup': item.TenNhom,
                                            'DinhMuc': item.DinhMuc,
                                            'Vuot': vuot,
                                            'Sum': thanhtien,
                                            'MaNhom': item.MaNhom
                                            , 'HanMuc': item.HanMuc//Add - TrungNC3 - 20/10/2017 - Thêm hạn mức trả về khi gọi - Cập nhật mã nhóm sản phẩm 
                                        });
                                    }
                                });
                            }
                            else {
                                //của BO
                                var dataLimitedHc_BO = dataBO;
                                $.each(dataLimitedHc_BO, function (index, itemBO) {
                                    var nhomgioihan = $.grep(datas, function (element, index) {
                                        return element.ItemGroup == 5;
                                    });
                                    if (nhomgioihan !== null && nhomgioihan !== undefined && nhomgioihan !== "" && nhomgioihan.length > 0) {
                                        var thanhtien = 0, vuot = 0;
                                        $.each(nhomgioihan, function (index, itemGroup) {
                                            thanhtien += parseInt(itemGroup.Sum);
                                        });
                                        if (thanhtien > itemBO.DinhMuc) {
                                            vuot = thanhtien - parseInt(itemBO.DinhMuc);
                                        }
                                        dataCheckLimitedHc.push({
                                            'ItemGroup': itemBO.TenNhom,
                                            'DinhMuc': itemBO.DinhMuc,
                                            'Vuot': vuot,
                                            'Sum': thanhtien,
                                            'MaNhom': itemBO.MaPB
                                            , 'HanMuc': itemBO.HanMuc
                                        });
                                    }
                                });

                            }
                            //▲ Edit - ThuongNM2 - 2018/09/25 Thay đổi rule HM BBDG
                            var checkVuot = $.grep(dataCheckLimitedHc, function (item, index) { return parseInt(item.Vuot) > 0; });// ThuongNM2 - Edit - 2018/12/19                           
                            if (checkVuot !== null && checkVuot !== undefined && checkVuot !== "" && checkVuot.length > 0) {
                                // ThuongNM2 - Edit - 2018/12/19
                                $.each(checkVuot, function (index, item) {
                                    $('#tableGioiHan').append('<tr class="danger"><td>' + item.ItemGroup + '</td><td>' + item.DinhMuc.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,") + '</td><td>' + item.Vuot.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,") + '</td><td>' + item.Sum.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,") + '</td></tr>');
                                });
                                // ThuongNM2 - Edit - 2018/12/19
                                $('#warningModal').modal('show');
                                $("#SendModal").off('click').click(function () {
                                    
                                    //▼ Add - NgoanHT - 16/05/2018 - Loại: 23 - Thêm form thông báo trể hạn
                                    var d = new Date();
                                    var n = d.getDate();
                                    if ((n > 10 && (ShopCodeB1HC !== null && ShopCodeB1HC !== undefined && ShopCodeB1HC !== "")) || (n > 6 && (ShopCodeB1HC === null || ShopCodeB1HC === undefined || ShopCodeB1HC === ""))) { //  Add - ThuongNM2 - 02/08/2019 - Loại 23 - HC  // LuanNT-24/08/2019
                                        //▼ LuanNT44-18/09/2019
                                        if(flagAoDongPhuc == datas.length)
                                        {     
                                            $('#Details').val(JSON.stringify(datas));
                                            $('#DetailsLimited').val(JSON.stringify(dataCheckLimitedHc));
                                            $('#Description').val(catagoryInfo.Description);
                                            $('#TitleRequest').val($('#Title').val());
                                            $('#typeId').val(catagoryInfo.Id);
                                            $('#PassApproved').val('1');
                                            $('#CheckViolation').val('0');
                                            var form = $("form#form-create");
                                            form.attr("action", "/Requests/Create");
                                            dataCheckLimitedHc = [], datas = [];
                                            form.submit();
                                            $('#WaitDialog').modal('show');
                                            return true;
                                        }
                                        else
                                        {
                                            $('#warningTreHanModal').modal('show');
                                            $("#CancelModal").off('click').click(function () {
                                                $('#warningTreHanModal').modal("hide");
                                                $btnSend.prop("disabled", false);// Edit - ThuongNM2 - 2018/10/10 Fix lỗi tạo trùng CL 23
                                                return;
                                            });
                                            $("#NextModal").off('click').click(function () {
                                                $('#Details').val(JSON.stringify(datas));
                                                $('#DetailsLimited').val(JSON.stringify(dataCheckLimitedHc));
                                                $('#Description').val(catagoryInfo.Description);
                                                $('#TitleRequest').val($('#Title').val());
                                                $('#typeId').val(catagoryInfo.Id);
                                                $('#PassApproved').val('1');
                                                $('#CheckViolation').val('1');
                                                var form = $("form#form-create");
                                                form.attr("action", "/Requests/Create");
                                                dataCheckLimitedHc = [], datas = [];
                                                form.submit();
                                                $('#WaitDialog').modal('show');
                                                return true;
                                            });
                                        }
                                        //▲ LuanNT44-18/09/2019
                                    } else {
                                        $('#Details').val(JSON.stringify(datas));
                                        $('#DetailsLimited').val(JSON.stringify(dataCheckLimitedHc));
                                        $('#Description').val(catagoryInfo.Description);
                                        $('#TitleRequest').val($('#Title').val());
                                        $('#typeId').val(catagoryInfo.Id);
                                        $('#PassApproved').val('1');
                                        $('#CheckViolation').val('0');
                                        var form = $("form#form-create");
                                        form.attr("action", "/Requests/Create");
                                        dataCheckLimitedHc = [], datas = [];
                                        form.submit();
                                        $('#WaitDialog').modal('show');
                                        return true;
                                    };
                                    //▲ Add - NgoanHT - 16/05/2018 - Loại: 23 - Thêm form thông báo trể hạn

                                });
                                $("#NoSendModal").off('click').click(function () {
                                    $('#warningModal').modal("hide");
                                    $('#tableGioiHan').empty();
                                    dataCheckLimitedHc = [], datas = [];
                                    $btnSend.prop("disabled", false);// Edit - ThuongNM2 - 2018/10/10 Fix lỗi tạo trùng CL 23
                                    return false;
                                });
                            }
                            else {

                                //▼ Add - NgoanHT - 16/05/2018 - Loại: 23 - Thêm form thông báo trể hạn
                                var d = new Date();
                                var n = d.getDate();

                                if ((n > 10 && (ShopCodeB1HC !== null && ShopCodeB1HC !== undefined && ShopCodeB1HC !== "")) || (n > 6 && (ShopCodeB1HC === null || ShopCodeB1HC === undefined || ShopCodeB1HC === ""))) { //  Add - ThuongNM2 - 02/08/2019 - Loại 23 - HC // LuanNT-24/08/2019
                                    //▼ LuanNT44-18/09/2019
                                    if(flagAoDongPhuc == datas.length)
                                    {
                                        $('#warningTreHanModal').modal("hide");
                                        $('#Details').val(JSON.stringify(datas));
                                        $('#DetailsLimited').val(JSON.stringify(dataCheckLimitedHc));
                                        $('#Description').val(catagoryInfo.Description);
                                        $('#TitleRequest').val($('#Title').val());
                                        $('#typeId').val(catagoryInfo.Id);
                                        $('#PassApproved').val('0');
                                        $('#CheckViolation').val('0');
                                        var form = $("form#form-create");
                                        form.attr("action", "/Requests/Create");
                                        dataCheckLimitedHc = [], datas = [];
                                        form.submit();
                                        $('#WaitDialog').modal('show');
                                        return true;
                                    }
                                    else
                                    {
                                        $('#warningTreHanModal').modal('show');
                                        $("#CancelModal").off('click').click(function () {
                                            $('#warningTreHanModal').modal("hide");
                                            $btnSend.prop("disabled", false);// Edit - ThuongNM2 - 2018/10/10 Fix lỗi tạo trùng CL 23
                                            return;
                                        });
                                        $("#NextModal").off('click').click(function () {
                                            $('#warningTreHanModal').modal("hide");
                                            $('#Details').val(JSON.stringify(datas));
                                            $('#DetailsLimited').val(JSON.stringify(dataCheckLimitedHc));
                                            $('#Description').val(catagoryInfo.Description);
                                            $('#TitleRequest').val($('#Title').val());
                                            $('#typeId').val(catagoryInfo.Id);
                                            $('#PassApproved').val('0');
                                            $('#CheckViolation').val('1');
                                            var form = $("form#form-create");
                                            form.attr("action", "/Requests/Create");
                                            dataCheckLimitedHc = [], datas = [];
                                            form.submit();
                                            $('#WaitDialog').modal('show');
                                            return true;
                                        });
                                    }
                                    //▲ LuanNT44-18/09/2019
                                } else {
                                    $('#warningTreHanModal').modal("hide");
                                    $('#Details').val(JSON.stringify(datas));
                                    $('#DetailsLimited').val(JSON.stringify(dataCheckLimitedHc));
                                    $('#Description').val(catagoryInfo.Description);
                                    $('#TitleRequest').val($('#Title').val());
                                    $('#typeId').val(catagoryInfo.Id);
                                    $('#PassApproved').val('0');
                                    $('#CheckViolation').val('0');
                                    var form = $("form#form-create");
                                    form.attr("action", "/Requests/Create");
                                    dataCheckLimitedHc = [], datas = [];
                                    form.submit();
                                    $('#WaitDialog').modal('show');
                                    return true;
                                }
                                //▲ Add - NgoanHT - 16/05/2018 - Loại: 23 - Thêm form thông báo trể hạn

                            }
                        });
                    });
                    //▲  Add - ThuongNM2 - 02/08/2019 - Loại 23 - HC
                });   //#Hc 04/09/2015
            }
            //▼  Add - LuanNT44 - 11/04/2020 - 24 - edit
            else if (id == 24) {
                contruct_24();
            }
            //▲  Add - LuanNT44 - 11/04/2020 - 24 - edit
            else if (info.Id === '37x') {
                XFunction.RenderGridHr();                                    //#Hr 04/09/2015
                Handsontable.Dom.addEvent(Send, 'click', function () {
                    var myData = hot.getData(0, 0, hot.getData().length, 4), datas = [];

                    $.each(myData, function (index, item) {
                        if (item[0] !== "" && item[0] !== null && item[0] !== undefined) {
                            var timKiemNhanVien = $.grep(dataHr, function (element, index) {
                                return element.text === item[0] && item[1] > 0;
                            });
                            if (timKiemNhanVien != null && timKiemNhanVien != undefined && timKiemNhanVien.length > 0) {
                                var newData = {
                                    'value': timKiemNhanVien[0].value,
                                    'note': (item[2] === undefined || item[2] === null) ? "" : item[2],
                                    'sum': item[1],
                                };
                                datas.push(newData);
                            }
                        }
                    });

                    if (datas.length == 0) {
                        XFunction.RenderMessage('error', 'Chi tiết không được để trống <br/>Xin hãy nhập chi tiết vào bảng chi tiết');
                        return false;
                    }
                    else {
                        $('#Details').val(JSON.stringify(datas));
                        $('#Description').val(catagoryInfo.Description);
                        $('#typeId').val(catagoryInfo.Id);
                        $('#TitleRequest').val($('#Title').val());
                        var form = $("form#form-create");
                        form.submit();
                        $('#WaitDialog').modal('show');
                        datas = [];
                        return true;
                    }
                });    //#Hr 04/09/2015
            } else if (info.Id === 37) {
                contruct_37();
            } else if (info.Id === 60) {
                XFunction.RenderGridDept();
                Handsontable.Dom.addEvent(Send, 'click', function () {
                    var myData = hot.getData(0, 0, hot.getData().length, 8), datas = [];
                    var checkDate = true;

                    $.each(myData, function (index, item) {
                        if (item[0] !== "" && item[0] !== null && item[0] !== undefined) {
                            var tiemkiemshop = $.grep(dataDept, function (element, index) {
                                return element.WarehouseName === item[0];
                            });
                            if (tiemkiemshop != null && tiemkiemshop != undefined && tiemkiemshop.length > 0) {

                                if (Validater.dateCheck(item[4]) == false) {
                                    XFunction.RenderMessage('error', 'Ngày chứng từ chưa đúng định dạng <br/> Vui lòng sửa lại cho đúng (DD/MM/YYYY)');
                                    checkDate = false;
                                    return false;
                                }
                                if (Validater.dateCheck(item[5]) == false) {
                                    XFunction.RenderMessage('error', 'Ngày đến hạng chưa đúng định dạng <br/> Vui lòng sửa lại cho đúng (DD/MM/YYYY)');
                                    checkDate = false;
                                    return false;
                                }
                                if (item[1] === undefined || item[1] === '' || item[1] === null) {
                                    XFunction.RenderMessage('error', 'Mã khách hàng chưa đúng định dạng <br/> Vui lòng sửa lại cho đúng');
                                    checkDate = false;
                                    return false;
                                }
                                if (item[2] === undefined || item[2] === '' || item[2] === null) {
                                    XFunction.RenderMessage('error', 'Tên khách hàng chưa đúng định dạng <br/> Vui lòng sửa lại cho đúng');
                                    checkDate = false;
                                    return false;
                                }
                                if (item[3] === undefined || item[3] === '' || item[3] === null) {
                                    XFunction.RenderMessage('error', 'Số hóa đơn chưa đúng định dạng <br/> Vui lòng sửa lại cho đúng');
                                    checkDate = false;
                                    return false;
                                }
                                if (item[7] === undefined || item[7] === '' || item[7] === null || isNaN(item[7])) {
                                    XFunction.RenderMessage('error', 'Tiền chứng từ chưa đúng định dạng <br/> Vui lòng sửa lại cho đúng');
                                    checkDate = false;
                                    return false;
                                }
                                if (item[8] === undefined || item[8] === '' || item[8] === null || isNaN(item[8])) {
                                    XFunction.RenderMessage('error', 'Dư Chứng từ chưa đúng định dạng <br/> Vui lòng sửa lại cho đúng');
                                    checkDate = false;
                                    return false;
                                }


                                var newData = {
                                    'shopId': tiemkiemshop[0].WarehouseCode,
                                    'customerId': item[1],
                                    'customerName': item[2],
                                    'saleCode': item[3],
                                    'dateStart': item[4],
                                    'dateEnd': item[5],
                                    'note': item[6],
                                    'priceTc': item[7],
                                    'priceTcout': item[8]
                                };
                                datas.push(newData);
                            }
                        }
                    });

                    if (checkDate == false) {
                        return false;
                    }
                    else if (datas.length == 0) {
                        XFunction.RenderMessage('error', 'Chi tiết không được để trống <br/>Xin hãy nhập chi tiết vào bảng chi tiết');
                        return false;
                    }
                    else {
                        $('#Details').val(JSON.stringify(datas));
                        $('#Description').val(catagoryInfo.Description);
                        $('#TitleRequest').val($('#Title').val());
                        $('#typeId').val(catagoryInfo.Id);
                        var form = $("form#form-create");
                        form.submit();
                        $('#WaitDialog').modal('show');
                        datas = [];
                        return true;
                    }
                });
            } else if (info.Id === 63) {
                XFunction.RenderGridApple();
                Handsontable.Dom.addEvent(Send, 'click', function () {
                    var myData = hot.getData(0, 0, hot.getData().length, 2), datas = [];
                    $.each(myData, function (index, item) {
                        if (item[0] != "" && item[0] != null && item[0] != undefined && item[1] != 0 && item[1] != undefined && item != "") {
                            var tiemkiemsanpham = $.grep(dataAppleNames, function (element, index) {
                                return element.name === item[0] &&
                                    item[1] != undefined && item[1] != '' &&
                                    item[1] != undefined && item[1] != 0;
                            });
                            if (tiemkiemsanpham != null && tiemkiemsanpham != undefined && tiemkiemsanpham.length > 0) {
                                var newData = {
                                    'productId': tiemkiemsanpham[0].id,
                                    'productName': tiemkiemsanpham[0].name,
                                    'quantity': item[1],
                                    'note': item[2],
                                };
                                datas.push(newData);
                            }
                        }
                    });
                    if (datas.length == 0) {
                        toastr.options = { "newestOnTop": true, "showMethod": "show", "hideMethod": "hide", "positionClass": "toast-top-right" };
                        toastr["error"]("<trong>Chi tiết không được để trống <br/>Xin hãy nhập chi tiết vào bảng chi tiết</strong>");
                        return false;
                    }
                    else {
                        $('#Details').val(JSON.stringify(datas));
                        $('#Description').val(catagoryInfo.Description);
                        $('#TitleRequest').val($('#Title').val());
                        $('#typeId').val(catagoryInfo.Id);
                        var form = $("form#form-create");
                        form.submit();
                        $('#WaitDialog').modal('show');
                        datas = [];
                        return true;
                    }
                });
            } else if (info.Id === 22) {
                XFunction.RenderGridMko();
                //▼ Add - TrungNC3 - 20/11/2017 - Up thực yêu cầu Mkts thay đổi
                Handsontable.Dom.addEvent(Send, 'click', function () {
                    var myData = hot.getData(0, 0, hot.getData().length, 8), datas = [], dataCheckLimitedHc = [];
                    var lstItemId = ''
                    var dataVuotNgayTao = [];
                    $.each(myData, function (index, item) {
                        if (item[1] != null && item[1] != undefined && item[1] != "") {
                            var timkiemthietbi = $.grep(dataProduct, function (element, index) {
                                return element.ItemName === item[1] && item[3] > 0;
                            });
                            var timkiemShop = $.grep(dataShopByASM, function (element, index) {
                                return (element.WarehouseName) === item[0];
                            });
                            if (timkiemthietbi != null && timkiemthietbi != undefined && timkiemthietbi.length > 0) {
                                $.each(timkiemthietbi, function (index, item) {
                                    lstItemId += item.ItemId + ',';
                                });
                                var newData = {
                                    'ItemId': timkiemthietbi[0].ItemId,
                                    'ItemName': timkiemthietbi[0].ItemName,
                                    'GroupId': timkiemthietbi[0].GroupId,
                                    'GroupName': timkiemthietbi[0].ItemName,
                                    'Quantity': item[3],
                                    'Price': timkiemthietbi[0].Price,
                                    'Sum': item[5],
                                    'Unit': timkiemthietbi[0].Unit,
                                    'FormsProcessing': item[7],
                                    'Note': item[8],
                                    'ShopCodeB1': timkiemShop[0].WarehouseCodeB1,
                                    'ShopCode': timkiemShop[0].WarehouseCode,
                                    'ShopName': timkiemShop[0].WarehouseName
                                };
                                datas.push(newData);
                            }
                        }
                    });
                    var dateNow = new Date();
                    //ChuongNT3 - 23/07/2018 - loại 22 - fix ngày tạo CL
                    var ngayHM = dateNow.getDate();
                    var thangHM = ngayHM < 7 ? dateNow.getMonth() : dateNow.getMonth() + 1; // LuanNT44 - 19/08/2020 - 22 - update hạn mức tạo ngày 7 (old 16)
                    var namHM = dateNow.getFullYear();
                    if (thangHM == 0) {
                        thangHM = 12;
                        namHM = dateNow.getFullYear() - 1;
                    }
                    //ChuongNT3 - 23/07/2018 - loại 22 - fix ngày tạo CL
                    if (datas.length == 0) {
                        XFunction.RenderMessage('error', 'Chi tiết không được để trống <br/>Xin hãy nhập chi tiết vào bảng chi tiết');
                        return false;
                    }
                    else {
                        $.each(datas, function (index, item) {
                            $.each(dataLimitMkts, function (index1, item1) {
                                if (item.ItemId.toString() === item1.MaSP && item.ShopCodeB1 === item1.MaShop && item1.NgayGioiHanDat < dateNow.getDate() && !!item1.NgayGioiHanDat) {
                                    dataVuotNgayTao.push(index + 1);
                                };
                            });
                        });
                        if (!!dataVuotNgayTao && dataVuotNgayTao.length > 0) {
                            XFunction.RenderMessage('error', 'Có sản phẩm đã quá ngày được phép đặt. Vui lòng xem lại dòng: ' + $.unique(dataVuotNgayTao).join(','));
                            return false;
                        }
                        else {
                            var req = '';
                            $.get('/Requests/GetRequestSimilar_Mkts', { typeId: 22, ItemId: lstItemId, ShopCode: datas[0].ShopCode }, function (data) {
                                if (!!data && data.length > 0) {
                                    toastr.options = { "newestOnTop": true, "showMethod": "show", "hideMethod": "hide", "positionClass": "toast-top-right", "timeOut": "10000", };
                                    toastr['error']("<strong>" + ' Sản phẩm :' + data[0].Result + ' đã được đặt hàng trên calllog : ' + data[0].RequestIdMar + ' chưa hoàn tất. Bạn có chắc muốn tiếp tục đặt sản phẩm này không ?' + "</strong>");
                                };
                                var nhomgioihan = [];
                                var a = '';
                                var LoaiShopChoosing = [];

                                duplicate1Shop = $.unique(duplicate1Shop);
                                duplicate2Shop = $.unique(duplicate2Shop);
                                duplicate3Shop = $.unique(duplicate3Shop);
                                $.each(datas, function (index2, element) {
                                    LoaiShopChoosing = $.grep(dataLimitMkts, function (item, index) {
                                        return (($.inArray(item.MaShop, duplicate1Shop) !== -1) || ($.inArray(item.MaShop, duplicate2Shop) !== -1) || ($.inArray(item.MaShop, duplicate3Shop) !== -1)) && item.MaShop === element.ShopCodeB1; //ChuongNT3 - 24/05/2018 - Sửa check HM
                                    });
                                    if (!!LoaiShopChoosing && LoaiShopChoosing.length > 0) {
                                        $.each(LoaiShopChoosing, function (index2, item) {
                                            if (element.ItemId == parseInt(item.MaSP) && item.Thang == thangHM && item.Nam == namHM) {                        //ChuongNT3 - 26/07/2018 - loại 22 - fix ngày tạo CL
                                                nhomgioihan.push(element);
                                            };
                                        });
                                    }
                                });

                                $.each(datas, function (index2, element) {
                                    $.each(dataLimitMkts, function (index, item) {
                                        if (item.MaLoaiShop.toString() == LoaiShopChoosing && element.ItemId == parseInt(item.MaSP) && item.Thang == thangHM && item.Nam == namHM) {      //ChuongNT3 - 26/07/2018 - loại 22 - fix ngày tạo CL
                                            nhomgioihan.push(element);
                                        };
                                    });
                                });
                                $.each(dataLimitMkts, function (index, item) {
                                    if (!!nhomgioihan && nhomgioihan.length > 0) {
                                        var thanhtien = 0, vuot = 0;
                                        $.each(nhomgioihan, function (index, itemGroup) {
                                            thanhtien += itemGroup.Sum;
                                        });
                                        $.each(nhomgioihan, function (index1, itemGroup1) {
                                            if (itemGroup1.Quantity > item.GiaTri && itemGroup1.ShopCodeB1 == item.MaShop && itemGroup1.ItemId == parseInt(item.MaSP) && item.Thang == thangHM && item.Nam == namHM) {    //ChuongNT3 - 26/07/2018 - loại 22 - fix ngày tạo CL
                                                vuot = itemGroup1.Quantity - item.GiaTri;
                                                var newData =
                                                    {
                                                        'ItemId': item.MaSP,
                                                        'ItemName': itemGroup1.ItemName,
                                                        'DinhMuc': item.GiaTri,
                                                        'Vuot': vuot,
                                                        'Sum': itemGroup1.Quantity,
                                                        'NgayGioiHanDat': item.NgayGioiHanDat
                                                    };
                                                dataCheckLimitedHc.push(newData);
                                            }
                                        });
                                    };
                                });
                                var checkVuot = $.grep(dataCheckLimitedHc, function (item, index) { return item.Vuot > 0; });
                                var dataVuotNgayTao = [];
                                if (!!checkVuot && checkVuot.length > 0) {
                                    $.each(checkVuot, function (vuotIndex, vuotItem) {
                                        if (vuotItem.NgayGioiHanDat < dateNow.getDate()) {
                                            dataVuotNgayTao.push(vuotItem);
                                        }
                                    });
                                    $.each(checkVuot, function (index, item) {
                                        $('#tableGioiHan_Mkts').append('<tr class="danger"><td>' + item.ItemName + '</td><td>' + item.DinhMuc.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,") + '</td><td>' + item.Vuot.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,") + '</td><td>' + item.Sum.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,") + '</td></tr>');
                                    });
                                    $('#warningModal_Mkts').modal('show');
                                    $("#NoSendModal_Mkts").off('click').click(function () {
                                        $('#warningModal_Mkts').modal("hide");
                                        $('#tableGioiHan_Mkts').empty();
                                        dataCheckLimitedHc = [], datas = [];
                                        return false;
                                    });

                                }
                                else {
                                    dataVuotNgayTao = [];
                                    $.each(datas, function (index, element) {
                                        nhomgioihan = $.grep(dataLimitMkts, function (item, index1) {
                                            return item.ShopCode === element.MaShop && element.ItemId.toString() == item.MaSP && item.Thang == thangHM && item.Nam == namHM && index1 === 0;    //ChuongNT3 - 23/07/2018 - loại 22 - fix ngày tạo CL
                                        });
                                    });
                                    var checkVuot1 = $.grep(nhomgioihan, function (item, index) { return item.NgayGioiHanDat < dateNow.getDate(); });
                                    $('#Details').val(JSON.stringify(datas));
                                    $('#DetailsLimited').val(JSON.stringify(dataCheckLimitedHc));
                                    $('#Description').val(catagoryInfo.Description);
                                    $('#TitleRequest').val($('#Title').val().replace("Chuỗi FPT Shop", datas[0].ShopName));
                                    $('#typeId').val(catagoryInfo.Id);
                                    var form = $("form#form-create");
                                    form.attr("action", "/Requests/Create");
                                    form.submit();
                                    $('#WaitDialog').modal('show');
                                    return true;
                                };
                            });
                        }
                    };
                });
                //▲ Add - TrungNC3 - 20/11/2017 - Up thực yêu cầu Mkts thay đổi
            } else if (info.Id === 115) {
                XFunction.RenderGridMkoMko();
                Handsontable.Dom.addEvent(Send, 'click', function () {
                    var myData = hot.getData(0, 0, hot.getData().length, 10), datas = [], dataCheckLimitedHc = [];

                    $.each(myData, function (index, item) {
                        if (item[1] != null && item[1] != undefined && item[1] != "") {
                            var timkiemthietbi = $.grep(dataProduct_115, function (element, index) {
                                return element.ItemName === item[1] && item[3] > 0;
                            });
                            var timkiemShop = $.grep(dataDept_115, function (element, index) {
                                return (element.WarehouseCode + '--' + element.WarehouseCodeB1 + '--' + element.WarehouseName) === item[0];
                            });
                            if (timkiemthietbi != null && timkiemthietbi != undefined && timkiemthietbi.length > 0
                                && timkiemShop != null && timkiemShop != undefined && timkiemShop.length > 0) {
                                var newData = {
                                    'ShopCode': timkiemShop[0].WarehouseCode.split("--")[0],
                                    'ItemId': timkiemthietbi[0].ItemId,
                                    'ItemName': timkiemthietbi[0].ItemName,
                                    'GroupId': timkiemthietbi[0].GroupId,
                                    'GroupName': timkiemthietbi[0].ItemName,
                                    'Quantity': item[3],
                                    'Price': timkiemthietbi[0].Price,
                                    'Sum': item[5],
                                    'Unit': timkiemthietbi[0].Unit,
                                    'FormsProcessing': item[7],
                                    'Note': item[8],
                                };
                                datas.push(newData);
                            }
                        }
                    });
                    if (datas.length == 0) {
                        XFunction.RenderMessage('error', 'Chi tiết không được để trống <br/>Xin hãy nhập chi tiết vào bảng chi tiết');
                        return false;
                    }
                    else {

                        $.each(dataLimitedMkoMko, function (index, item) {
                            var nhomgioihan = $.grep(datas, function (element, index) {
                                return element.GroupId == item.MaNhom;
                            });

                            if (nhomgioihan != null && nhomgioihan != undefined && nhomgioihan != "" && nhomgioihan.length > 0) {
                                var thanhtien = 0, vuot = 0;
                                $.each(nhomgioihan, function (index, itemGroup) {
                                    thanhtien += itemGroup.Sum;
                                });
                                if (thanhtien > item.DinhMuc) {
                                    vuot = thanhtien - item.DinhMuc;
                                }
                                var newData =
                                    {
                                        'ItemGroup': item.TenNhom,
                                        'DinhMuc': item.DinhMuc,
                                        'Vuot': vuot,
                                        'Sum': thanhtien,
                                        'MaNhom': item.MaNhom
                                    };
                                dataCheckLimitedHc.push(newData);
                            }
                        });

                        var checkVuot = $.grep(dataCheckLimitedHc, function (item, index) { return item.Vuot > 0; });

                        if (checkVuot != null && checkVuot != undefined && checkVuot != "" && checkVuot.length > 0) {
                            $.each(checkVuot, function (index, item) {
                                $('#tableGioiHan').append('<tr class="danger"><td>' + item.ItemGroup + '</td><td>' + item.DinhMuc.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,") + '</td><td>' + item.Vuot.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,") + '</td><td>' + item.Sum.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,") + '</td></tr>');
                            });
                            $('#warningModal').modal('show');
                            $("#SendModal").off('click').click(function () {
                                $('#Details').val(JSON.stringify(datas));
                                $('#DetailsLimited').val(JSON.stringify(dataCheckLimitedHc));
                                $('#Description').val(catagoryInfo.Description);
                                $('#TitleRequest').val($('#Title').val());
                                $('#typeId').val(catagoryInfo.Id);

                                var form = $("form#form-create");
                                form.attr("action", "/Requests/Create");
                                form.submit();
                                $('#WaitDialog').modal('show');
                                return true;
                            });
                            $("#NoSendModal").off('click').click(function () {
                                $('#warningModal').modal("hide");
                                $('#tableGioiHan').empty();
                                dataCheckLimitedHc = [], datas = [];
                                return false;
                            });
                        }
                        else {
                            $('#Details').val(JSON.stringify(datas));
                            $('#DetailsLimited').val(JSON.stringify(dataCheckLimitedHc));
                            $('#Description').val(catagoryInfo.Description);
                            $('#TitleRequest').val($('#Title').val());
                            $('#typeId').val(catagoryInfo.Id);
                            var form = $("form#form-create");
                            form.attr("action", "/Requests/Create");
                            form.submit();
                            $('#WaitDialog').modal('show');
                            return true;
                        }
                    }
                });
            } else if (info.Id === 28) {
                XFunction.RenderGridFund();                                 //#Fund  04/09/2015
                Handsontable.Dom.addEvent(Send, 'click', function () {
                    var myData = hot.getData(0, 0, hot.getData().length, 6), datas = [], dataInvalid = [];
                    $.each(myData, function (index, item) {
                        if (item[0] != null && item[0] != undefined && item[0] != '') {
                            datas.push({
                                'Index': index,
                                'FundType': item[0],
                                'TimeImport': item[1],
                                'MoneyReal': item[2],
                                'MoneyB1CRM': item[3],
                                'MoneyCA0202': item[4],
                                'Note': item[5],
                            });
                        }
                    });
                    $.each(datas, function (index, item) {
                        if (item.TimeImport === null || item.TimeImport === undefined || item.TimeImport === '' || Validater.dateCheck(item.TimeImport) === false ||
                            item.MoneyReal === null || item.MoneyReal === undefined || item.MoneyReal === '' || isNaN(item.MoneyReal) === true ||
                            item.MoneyB1CRM === null || item.MoneyB1CRM === undefined || item.MoneyB1CRM === '' || isNaN(item.MoneyB1CRM) === true ||
                            item.MoneyCA0202 === null || item.MoneyCA0202 === undefined || item.MoneyCA0202 === '' || isNaN(item.MoneyCA0202) === true)
                        { dataInvalid.push(item.Index + 1); }
                    });

                    if (dataInvalid.length > 0) {
                        XFunction.RenderMessage('error', 'Kiểm tra dòng ' + dataInvalid.toString());
                        return false;
                    } else {
                        if (datas.length == 0) {
                            XFunction.RenderMessage('error', 'Dữ liệu không hợp lệ :(');
                            return false;
                        } else {
                            $('#Details').val(JSON.stringify(datas));
                            $('#Description').val(catagoryInfo.Description);
                            $('#TitleRequest').val($('#Title').val());
                            $('#typeId').val(catagoryInfo.Id);
                            var form = $("form#form-create");
                            form.submit();
                            $('#WaitDialog').modal('show');
                            datas = [], dataInvalid = [];
                            return true;
                        }
                    }
                });   //#Fund  04/09/2015
            } else if (info.Id === 32) {
                XFunction.RenderGridMoneyAdvance();                         //#MoneyAdvance 04/09/2015
                Handsontable.Dom.addEvent(Send, 'click', function () {
                    var myData = hot.getData(0, 0, hot.getData().length, 7), datas = [], dataInValid = [];
                    $.each(myData, function (index, item) {
                        if (item[0] !== "" && item[0] !== null && item[0] !== undefined) {
                            var findEmploy = $.grep(dataMoneyAdvance, function (element, index) {
                                return element.text === item[0];
                            });
                            if (findEmploy !== undefined && findEmploy !== '' && findEmploy !== null && findEmploy.length > 0) {
                                var newData = {
                                    'Index': index,
                                    'EmployId': findEmploy[0].value,
                                    'Money': item[1],
                                    'Type': item[2],
                                    'BankNumber': item[3],
                                    'BankName': item[4],
                                    'DateReturn': item[5],
                                    'Reason': item[6],
                                };
                                datas.push(newData);
                            }
                        }
                    });
                    $.each(datas, function (index, item) {
                        if (item.Money === undefined || item.Money === null || item.Money === '' || isNaN(item.Money) === true ||
                            item.Type === undefined || item.Type === null || item.Type === '' ||
                            item.Reason === '' || item.Reason === undefined || item.Reason === null ||
                            item.DateReturn === undefined || item.DateReturn === null || item.DateReturn === '' || Validater.dateCheck(item.DateReturn) === false) {
                            dataInValid.push(item.Index + 1);
                        } else if (item.Type == 'Chuyển khoản') {
                            if (item.BankNumber === undefined || item.BankNumber === null || item.BankNumber === '' ||
                                item.BankName === undefined || item.BankName === null || item.BankName === '') {
                                dataInValid.push(item.Index + 1);
                            }
                        }
                    });
                    if (dataInValid.length != 0) {
                        XFunction.RenderMessage('error', 'Dữ liệu không hợp lệ :( <br/> Kiểm tra dòng ' + dataInValid.toString());
                        return false;
                    } else {
                        if (datas.length == 0) {
                            XFunction.RenderMessage('error', 'Dữ liệu không hợp lệ :(');
                            return false;
                        } else {
                            $('#Details').val(JSON.stringify(datas));
                            $('#Description').val(catagoryInfo.Description);
                            $('#TitleRequest').val($('#Title').val());
                            $('#typeId').val(catagoryInfo.Id);
                            var form = $("form#form-create");
                            form.submit(); datas = []; dataInValid = [];
                            $('#WaitDialog').modal('show');
                            return true;
                        }
                    }


                });   //#MoneyAdvance 04/09/2015
            } else if (info.Id === 68) {
                XFunction.RenderGridInventoryCash();                        //#InventoryCash 09/09/2015
                Handsontable.Dom.addEvent(Send, 'click', function () {
                    var myData = hot.getData(0, 0, hot.getData().length, 3), datas = [],
                        totalMoney = 0,
                        totalMoney1 = myData[12][2],
                        totalMoney2 = myData[13][2];
                    $.each(myData, function (index, item) {
                        if (index === 10) return false;
                        if (index < 10) {
                            datas.push({
                                Denomination: item[0],
                                Quantity: item[1],
                                Note: item[3],
                            });
                            if (!isNaN(item[0] * item[1])) {
                                totalMoney += item[0] * item[1];
                            }
                        }
                    });
                    if (datas.length == 0) {
                        XFunction.RenderMessage('error', 'Dữ liệu chưa hợp lệ :(');
                        return false;
                    } else if (totalMoney !== (totalMoney1 + totalMoney2)) {
                        XFunction.RenderMessage('error', 'Tổng tiền hàng tồn quỹ + Tổng tiền thu hộ tồn quỹ khác Tổng tiền :(');
                        return false;
                    }
                    else {
                        datas.push({ Denomination: 0, Quantity: totalMoney1, Note: '' });
                        datas.push({ Denomination: 1, Quantity: totalMoney2, Note: '' });
                        $('#Details').val(JSON.stringify(datas));
                        $('#Description').val(catagoryInfo.Description);
                        $('#TitleRequest').val($('#Title').val());
                        $('#typeId').val(catagoryInfo.Id);
                        var form = $("form#form-create");
                        form.submit();
                        datas = []; totalMoney = 0; totalMoney1 = 0, totalMoney2 = 0;
                        $('#WaitDialog').modal('show');
                        return true;
                    }
                });   //#InventoryCash 09/09/2015
            } else if ($.inArray(info.Id, [44, 45]) !== -1) { // LuanNT44 - 11/04/2020 - 24 - edit
                $('#detail').hide(); $('.compose-message').show(); $('.note-editable').focus();
                $('#areaLoaiHeThong').show();
                if (id == 44 || id == 45) id = 44;
                $.get('/Requests/GetCatagoryTree', { type: id }, function (data) {
                    var tree = [];

                    $.each(data, function (index, item) {
                        var newdata = {
                            id: item.Id,
                            parent: item.ParentId,
                            text: item.Name,
                            type: 'Fa'
                        };
                        tree.push(newdata);
                    });

                    $treeLoaiHeThong.jstree({
                        "core": { data: tree },
                        "plugins": ["wholerow", "search", "types"],
                        "types": {
                            "Fa": { "icon": "/assets/images/Maps-Pin-Place-icon.png" },
                            "Chid": { "icon": "/assets/images/blue-home-icon.png" },
                        },
                    }).on('changed.jstree', function (e, data) {
                        var i, j, name, id;
                        for (i = 0, j = data.selected.length; i < j; i++) {
                            name = data.instance.get_node(data.selected[i]).text;
                            id = data.instance.get_node(data.selected[i]).id;
                        }
                        $txtLoaiHeThong.val(name);
                        var dt = new Date();
                        $txtTieuDe.val(catagoryInfo.Description + " - " + name + shop + ' - ' + (dt.getMonth() + 1) + '/' + dt.getFullYear());
                        $hiddenGroupId.val(id);
                        $areaTreeLoaiHethong.hide();
                    });

                    var to = false;
                    $txtSearchLoaiHeThong.keyup(function () {
                        if (to) { clearTimeout(to); }
                        to = setTimeout(function () {
                            var v = $txtSearchLoaiHeThong.val();
                            $treeLoaiHeThong.jstree(true).search(v);
                        }, 250);
                    });


                    $txtLoaiHeThong.click(function () {
                        $areaTreeLoaiHethong.toggle();
                        $txtSearchLoaiHeThong.focus();
                    });

                    $(document).mouseup(function (e) {
                        var region = $areaTreeLoaiHethong, txtRegion = $txtLoaiHeThong;

                        if (!region.is(e.target)
                            && region.has(e.target).length === 0 && !txtRegion.is(e.target)) {
                            region.hide();
                        }


                    });
                });
                $('#btnSend').on('click', function () {
                    //▼  Add - LuanNT44 - 02/07/2018 - Loại 24 - Sữa chữa CSVC -- LuanNT44 - 11/04/2020 - 24 - edit
                        //alert(2)
                        if ($('.note-editable').text().length <= 0) {
                            XFunction.RenderMessage('error', 'Chi tiết không được để trống <br/>Hãy nhập chi tiết vào chi tiết');
                            return false;
                        } else if ($('#txtLoaiHeThong').val().length <= 0 || $('#GroupId').val() === '' || $('#GroupId').val() === undefined) {
                            XFunction.RenderMessage('error', 'Vui lòng chọn loại phù hợp');
                            return false;
                        } else {
                            var form = $("form#form-create");
                            form.attr("action", "/Requests/Create");
                            $('#Description').val(catagoryInfo.Description);
                            $('#TitleRequest').val($('#Title').val());
                            $('#typeId').val(catagoryInfo.Id);
                            form.submit();
                            $('#WaitDialog').modal('show');
                            return true;
                        }
                    //▲  Add - LuanNT44 - 02/07/2018 - Loại 24 - Sữa chữa CSVC -- LuanNT44 - 11/04/2020 - 24 - edit
                });
            } else if ($.inArray(info.Id, [1, 2, 3, 4, 16, 25, 40, 41, 43, 132

                //▼	Add - VietMXH - 15/11/2017 - 184:Hỗ trợ F.Friends==================================================
                    , 184
                //▲	Add - VietMXH - 15/11/2017 - 184:Hỗ trợ F.Friends==================================================

            ]) !== -1) {
                $('#areaBtnthaythe').show();
                $('#detail').hide(); $('.compose-message').show(); $('.note-editable').focus();
                $('.sender').hide(); $('#areaLoaiHeThong').show();
                //▼  Add - LuanNT44 - 25/06/2019 - Màn hình định nghĩa CL Hỗ trợ bán hàng
                if(info.Id === 25)
                {
                    $('#noidungHDSD').show();
                }
                else
                {
                    $('#noidungHDSD').hide();
                }
                //▲  Add - LuanNT44 - 25/06/2019 - Màn hình định nghĩa CL Hỗ trợ bán hàng
                $.get('/Requests/GetCatagoryTree', { type: info.Id }, function (data) {
                    var dataCategories = data;
                    var tree = [];
                    var datas = [];
                    if (info.Id == 16) {
                        datas = $.grep(data, function (item, index) {
                            return $.inArray(item.Id, [720, 717, 1117, 1118, 1119]) !== -1;
                        });
                    } else {
                        datas = data;
                    }
                    //AND P.Id IN (720,717,1117,1118,1119)


                    $.each(datas, function (index, item) {
                        var newdata = {
                            id: item.Id,
                            parent: item.ParentId,
                            text: item.Name,
                            type: 'Fa'
                        };
                        tree.push(newdata);
                    });

                    $treeLoaiHeThong.jstree({
                        "core": { data: tree },
                        "plugins": ["wholerow", "search", "types"],
                        "types": {
                            "Fa": { "icon": "/assets/images/Maps-Pin-Place-icon.png" },
                            "Chid": { "icon": "/assets/images/blue-home-icon.png" },
                        },
                        //▼  Add - LuanNT44 - 25/06/2019 - Màn hình định nghĩa CL Hỗ trợ bán hàng
                        'search': {
                            'case_insensitive': true,
                            'show_only_matches' : true
                        },
                        //▲  Add - LuanNT44 - 25/06/2019 - Màn hình định nghĩa CL Hỗ trợ bán hàng
                    }).on('changed.jstree', function (e, data) {
                        var i, j, name, id, children;  //Add - ChuongNT3 - thêm điều kiện chọn nhánh nhỏ nhất
                        for (i = 0, j = data.selected.length; i < j; i++) {
                            name = data.instance.get_node(data.selected[i]).text;
                            id = data.instance.get_node(data.selected[i]).id;
                            children = data.instance.get_node(data.selected[i]).children.length;  //Add - ChuongNT3 - thêm điều kiện chọn nhánh nhỏ nhất
                        }
                        var dt = new Date();
                        if (info.Id === 132) {
                            $txtTieuDe.val(catagoryInfo.Description + " - " + name + ' - ' + nameNotCode + shop + ' - ' + (dt.getMonth() + 1) + '/' + dt.getFullYear());
                        } 
                        else {
                            $txtTieuDe.val(catagoryInfo.Description + " - " + name + shop + ' - ' + (dt.getMonth() + 1) + '/' + dt.getFullYear());
                        }

                        if (info.Id === 132) {
                            $.each(dataCategories, function (index, item) {
                                if ((item.Id == id && item.Level == 2 && item.Id != 2248) || (item.Id == id && item.Level == 3)) {
                                    $txtLoaiHeThong.val(name);
                                    $hiddenGroupId.val(id);
                                    $areaTreeLoaiHethong.hide();
                                }
                            });
                            //▼Add - ChuongNT3 - thêm điều kiện chọn nhánh nhỏ nhất
                        }
                        else if ((info.Id === 25 || info.Id === 1) && children > 0) { //Add - ChuongNT3 - 30/01/2018 - thêm loại 1
                            XFunction.RenderMessage('error', 'Hãy chọn mục nhỏ nhất');
                            return false;
                        }
                        else { //▲Add - ChuongNT3 - thêm điều kiện chọn nhánh nhỏ nhất
                            $txtLoaiHeThong.val(name);
                            $hiddenGroupId.val(id);
                            $areaTreeLoaiHethong.hide();
                        }
                        //▼  Add - LuanNT44 - 25/06/2019 - Màn hình định nghĩa CL Hỗ trợ bán hàng
                        if(info.Id === 25)
                        {
                            $.get('/Config/GetContentSellLineDefine',{IDfunction : id },function(dataContent){
                                if(dataContent.length > 0)
                                {
                                    var ContentData = '';
                                    $.each(dataContent,function(index,item){
                                        ContentData = item.Content
                                    })
                                    if(ContentData === '' || ContentData === null || ContentData === undefined)
                                    {
                                        ContentData = '';
                                    }
                                    //console.log(ContentData)
                                    $('#ID_function').val(id); // console.log($('#ID_function').val()); // Add-LuanNT44-20/08/2019-25
                                    $('#IDnoidungHDSD').val(ContentData);
                                }
                                else
                                {
                                    XFunction.RenderMessage('error', 'Server không phản hổi !');
                                }
                            })
                        }
                    }).on('loaded.jstree', function () {
                        $('#treeLoaiHeThong').jstree('open_all');
                    });
                    
                    var to = false;
                    $txtSearchLoaiHeThong.keyup(function () {
                        $treeLoaiHeThong.jstree('search', $(this).val());
                    });
                    
                    //▲  Add - LuanNT44 - 25/06/2019 - Màn hình định nghĩa CL Hỗ trợ bán hàng

                    $txtLoaiHeThong.click(function () {
                        $areaTreeLoaiHethong.toggle();
                        $txtSearchLoaiHeThong.focus();
                    });

                    $(document).mouseup(function (e) {
                        var region = $areaTreeLoaiHethong, txtRegion = $txtLoaiHeThong;

                        if (!region.is(e.target)
                            && region.has(e.target).length === 0 && !txtRegion.is(e.target)) {
                            region.hide();
                        }


                    });
                });
                $('#btnSend').on('click', function () {
                    if ($('.note-editable').text().length <= 0) {
                        XFunction.RenderMessage('error', 'Chi tiết không được để trống <br/>Hãy nhập chi tiết vào chi tiết');
                        return false;
                    } else if ($('#txtLoaiHeThong').val().length <= 0 || $('#GroupId').val() === '' || $('#GroupId').val() === undefined) {
                        XFunction.RenderMessage('error', 'Vui lòng chọn loại phù hợp');
                        return false;
                    } else {
                        var form = $("form#form-create");
                        form.attr("action", "/Requests/Create");
                        $('#Description').val(catagoryInfo.Description);
                        $('#TitleRequest').val($('#Title').val());
                        $('#typeId').val(catagoryInfo.Id);
                        $('#NoteHDSD').val($('#IDnoidungHDSD').val()); // Add - LuanNT44 - 25/06/2019 - Màn hình định nghĩa CL Hỗ trợ bán hàng
                        form.submit();
                        $('#WaitDialog').modal('show');
                        return true;
                    }
                });
            } else if (id == 19) {
                window.location.href = '/Requests/CreateBO';
            } else if (id == 39) {
                contruct_39();
            } else if (id == 65) {
                contruct_65();
            } else if (id == 53) {
                contruct_53();
            } else if (id == 75) {
                contruct_75();
            } else if (id == 82) {
                contruct_82();
            } else if (id == 103) {
                contruct_103();
            } else if (id == 104) {
                contruct_104();
            } else if (id == 35) {
                contruct_35();
            } else if (id == 112) {
                contruct_112();
            } else if (id == 130) {
                contruct_130();
            } else if (id == 134) {
                contruct_134();
            } else if (id == 143) {
                contruct_143();
            } else if (id == 150) {
                contruct_150();
            } else if (id == 152) {
                contruct_152();
            } else if (id == 42)// đánh giá chất lượng, bảo vệ tạp vụ
            {
                contruct_42();
            }
            else if (id == 154) {
                contruct_154();
            }
            else if (id == 155) {
                contruct_155();//== đồ dùng hành chính tạo cho shop mới
            }
            else if (id == 161) {
                contruct_161();
            }
            else if (id == 163) {
                contruct_163();
            }
            else if (id == 165) {
                contruct_165();
            }
            else if (id == 169) {
                contruct_169();
            }
            else if (id == 170) {
                contruct_170();
            }
            else if (id == 171) {
                contruct_171();
            }
                //▼ Add - TrungNC3 - 2017.09.01 - Thêm loại 175 - Hành chính hỗ trợ shop
            else if (id == 175) {
                contruct_175();
            }
                //▲ Add - =======================================
                //▼ Add - NgoanHT - 01/11/2017 - Thêm loại 181
            else if (id == 181) {
                contruct_181();
            }
                //▲ Add - =======================================
                //▼ Add - PhiN - 06/12/2017 - add category 186 -Claim Subsidy
            else if (id == 186) {
                contruct_186();
            }
                //▲ Add - PhiN - 06/12/2017 - add category 186 -Claim Subsidy

                //▲ Add - =======================================
                //▼ Add - PhiN - 21/12/2017 - Thêm loại 187 -Cập nhật thay đổi Layout mặt tiền & mặt bằng shop
            else if (id == 187) {
                contruct_187();
            }
                //▲ Add - PhiN - 21/12/2017 - Thêm loại 187 -Cập nhật thay đổi Layout mặt tiền & mặt bằng shop
                //▲ Add - =======================================
                //▼  Add - LuanNT44 - 02/02/2018 - Loại 201 - Kiểm hàng online
            else if (id == 201) {
                contruct_201();
            }
                //▲  Add - LuanNT44 - 02/02/2018 - Loại 201 - Kiểm hàng online
                //▼  Add - LuanNT44 - 06/03/2018 - Loại 204 - Chốt CR qua Calllog
            else if (id == 204) {
                contruct_204();
            }
                //▲  Add - LuanNT44 - 06/03/2018 - Loại 204 - Chốt CR qua Calllog
                //▼ Add - NghiaTV5 - 26/03/2018 - 205 claim bảo hiểm 
            else if (id == 205) {
                contruct_205();
            }
                //▲  Add - NghiaTV5 - 26/03/2018 - 205 claim bảo hiểm 
            
            //▼ Add - TuanNA89 - 17/09/2019 - Calllog phụ cấp trực đêm - Loại 216
            else if (id == 216){
                contruct_216();
            }
            //▲ Add - TuanNA89 - 17/09/2019 - Calllog phụ cấp trực đêm - Loại 216
            //▼ Add - TuanNA89 - 15/10/2019 - Calllog Xuất sử dụng VPKM cho Khai trương & Hoạt náo - Loại 218
            else if (id == 218){
                contruct_218();
            }
            //▲ Add - TuanNA89 - 15/10/2019 - Calllog Xuất sử dụng VPKM cho Khai trương & Hoạt náo - Loại 218
            //▼ Add - TuanNA89 - 04/12/2019 - CallLog in ấn POSM - Loại 223
            else if (id == 223){
                contruct_223();
            }
            //▲ Add - TuanNA89 - 04/12/2019 - CallLog in ấn POSM - Loại 223
            else {
                xFunction.Render(info);
            }
            $areaCc.show();

        },
        //===============================================================================
        //▼ 23 - Edit - TrungNC3 - 18/09/2017 - Chỉnh sửa lưới CallLog hành chính hành chính tạo
        RenderGridHc: function () {  // LuanNT44-06/09/2019-23         
            $('.compose-message').hide();
            $('#detail').show();
            $('#sum-total').hide();   // not support dowload file
            $('#handsontableEx').css('overflow', 'hidden');
            $areaDowloadAndImport.show();
            $('#FileSupport').hide();
            //▼ Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
            var arrDevices = [], dataShop_B1 = [], dataShopAll_B1 = [], data_GroupProduct = [], data_GroupProductName = [];
            $.get('/Requests/GetDevices', { type: 23 }, function (data) {
                $.get('/Requests/GetInfoUserCreteRequest', function (respone) {
                    //=== Lưu toàn bộ mặt hàng
                    dataItems = data;
                    if (respone[0].WarehouseCode == null || respone[0].WarehouseCode == '' || respone[0].WarehouseCode == undefined) {
                        dataShop_B1 = respone;
                        InfoEmpHC_23 = dataShop_B1; //Edit - ThuongNM2 - 2018/09/25 Thay đổi rule HM BBDG
                        dataDevices = $.grep(data, function (item, index) {
                            return item.Loai == 2 || item.Loai == 3;
                        });
                        $.each(dataDevices, function (index, item) {
                            if (item.GroupId !== 2) {
                                arrNameDevices.push(item.ItemName);
                                arrDevices.push(item);
                            }
                        });
                    } else {
                        dataShop_B1 = respone;
                        InfoEmpHC_23 = dataShop_B1; //Edit - ThuongNM2 - 2018/09/25 Thay đổi rule HM BBDG
                        dataDevices = $.grep(data, function (item, index) {
                            return item.Loai == 1 || item.Loai == 3;
                        });
                        $.each(dataDevices, function (index, item) {
                            if (item.GroupId !== 2) {
                                arrNameDevices.push(item.ItemName);
                                arrDevices.push(item);
                            }
                        });
                    }

                });
            });
            $.get('/Requests/GetLimitedValue', { type: 23 }, function (data) {
                dataLimitedHc = data;
            });
            $.get('/Requests/GetShopByRegion', { regionId: 0 }, function (data) {
                dataShopAll_B1 = data;
            });
            //▼ Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
            $.get('/Requests/GroupProduct_Get', function (data) {
                data_GroupProduct = data;
                if (data.length > 0) {
                    $.each(data, function (index, item) {
                        data_GroupProductName.push(item.MaNhom + '--' + item.TenNhom);
                    });
                };
            });
            //▼  LuanNT44-06/09/2019-23
            //▼  LuanNT44-13/11/2019-23
            $.get('/Requests/LoadNVByShop', function (dataNV) {
                $.get('/Requests/LoadShopDatAoCreate_23', function (dataShop) {
                    var Loaddata_NVTT23 = [];
                    var Loaddata_shopdat23 = [];
                    if(dataNV.length > 0)
                    {
                        $.each(dataNV, function (index, item) {
                            Loaddata_NVTT23.push(item.NVShop);
                        });
                    }
                    if(dataShop.length > 0)
                    {
                        $.each(dataShop, function (index, item) {
                            Loaddata_shopdat23.push(item.NameShop);
                        });
                    }
                    var setting_ShopTT23 = function () {
                        return {
                            //=================================Data=======
                            //data: dataLoad2,
                            //================================Cols=======
                            manualColumnMove: true,
                            rowHeaders: true,
                            minSpareRows: 5,
                            stretchH: 'all',
                       
                            //====================================Oder ==============================================
                            colHeaders: [
                                    'Tên nhân viên bị truy thu',
                                    'Email nhân viên bị truy thu',
                                    'Số lượng áo', // LuanNT44-20/09/2019-23
                                    'Tháng truy thu'
                            ],
                            columns: [
                                { data: "Employess", type: 'autocomplete',strict: false, source: Loaddata_NVTT23, width: 200, className: 'htLeft', readOnly: false },
                                { data: "Email", type: 'text', className: 'htLeft', width: 200, readOnly: true },
                                { data: "SLAo", type: 'numeric', format: '0,0', validator: Validater.quantity, allowInvalid: false , width: 100},// LuanNT44-20/09/2019-23
                                { data: "ThangTT", type: 'text', width: 100, className: 'htLeft', readOnly: true }
                            ],                  
                            afterChange: function (changes, source) {
                                if (!changes || source == 'not') {
                                    return;
                                }
                                var instance = this;
                                changes.forEach(function (change) {
                                    var row = change[0];
                                    var col = change[1];
                                    var newValue = change[3];
                                    var cellProperties, options;
                                    var d = new Date();
                                    if (col === 'Employess') {
                                        if (newValue !== null && newValue !== '' && newValue !== undefined) {
                                            var email = ''
                                            $.grep(dataNV, function (item, index) {
                                                if (item.NVShop === newValue) {
                                                    email = item.Email;
                                                }
                                            })
                                        
                                            hot_23.setDataAtRowProp(row, 'Email', email, 'not');
                                            hot_23.setDataAtRowProp(row, 'SLAo',1, 'not'); // LuanNT44-20/09/2019-23
                                            //▼ LuanNT44-19/09/2019-23-edit ngày
                                            if(d.getDate() < 11)
                                            {
                                                if(d.getMonth() == 0)
                                                {
                                                    hot_23.setDataAtRowProp(row, 'ThangTT', 12, 'not');
                                                }
                                                else
                                                {
                                                    hot_23.setDataAtRowProp(row, 'ThangTT', d.getMonth(), 'not');
                                                }
                                            }
                                            else
                                            {
                                                hot_23.setDataAtRowProp(row, 'ThangTT', d.getMonth() + 1, 'not');
                                            }
                                            //▲ LuanNT44-19/09/2019-23-edit ngày
                                        }
                                        else
                                        {
                                            hot_23.setDataAtRowProp(row, 'Email', '', 'not');
                                            hot_23.setDataAtRowProp(row, 'ThangTT', '', 'not');
                                            hot_23.setDataAtRowProp(row, 'SLAo', '', 'not'); // LuanNT44-20/09/2019-23
                                        }
                                    }
                                    if (col === 'SLAo') { // LuanNT44-20/09/2019-23
                                        if(newValue === '' || newValue === null || newValue === undefined || Number(newValue) < 1)
                                        {
                                            hot_23.setDataAtRowProp(row, 'SLAo',1, 'not');
                                        }
                                    }
                                });
                                hot_23.render();
                            },
                        };
                    };
                    var setting_ShopTT23_shop = function () {
                        return {
                            //=================================Data=======
                            //data: dataLoad2,
                            //================================Cols=======
                            manualColumnMove: true,
                            rowHeaders: true,
                            minSpareRows: 5,
                            stretchH: 'all',
                       
                            //====================================Oder ==============================================
                            colHeaders: [
                                    'Shop đặt áo',
                                    'Số lượng đặt', 
                                    'Ghi chú'
                            ],
                            columns: [
                                { data: "shopDat", type: 'autocomplete',strict: false, source: Loaddata_shopdat23, width: 200, className: 'htLeft', readOnly: false },
                                { data: "SLAoDat", type: 'numeric', format: '0,0', validator: Validater.quantity, allowInvalid: false , width: 200},
                                { data: "Ghichu", type: 'text', width: 200, className: 'htLeft', readOnly: false}
                            ],
                            //▼ LuanNT44-09/04/2020-23-fix popup shop dặt áo
                            beforeChange: function (changes, source) {
                                if (source == 'not') return;
                                for (i = 0; i < changes.length; i++) {
                                    var row = changes[i][0], col = changes[i][1];
                                    if (col === 'shopDat') {
                                        var value = changes[i][3];
                                        var shopdatao = $.grep(hot_23_shop.getData(), function (item) {
                                            return item.shopDat !== '' && item.shopDat !== undefined && item.shopDat !== null;
                                        })
                                        console.log(shopdatao);
                                        if (shopdatao.length > 0) {
                                            var flagshop = 0;
                                            $.each(shopdatao, function (index, item) {
                                                if (value == item.shopDat) {
                                                    flagshop++;
                                                }
                                            })
                                            if (flagshop > 0) {
                                                hot_23_shop.setDataAtRowProp(row, 'shopDat', '', 'not');
                                                hot_23_shop.setDataAtRowProp(row, 'SLAoDat', '', 'not');
                                                hot_23_shop.setDataAtRowProp(row, 'Ghichu', '', 'not');
                                                XFunction.RenderMessage('error', 'Không được trùng shop. !'); return;
                                            }
                                        }
                                    }
                                }
                            },
                            //▲ LuanNT44-09/04/2020-23-fix popup shop dặt áo
                            afterChange: function (changes, source) {
                                if (!changes || source == 'not') {
                                    return;
                                }
                                var instance = this;
                                changes.forEach(function (change) {
                                    var row = change[0];
                                    var col = change[1];
                                    var newValue = change[3];
                                    var cellProperties, options;
                                    var d = new Date();
                                    if (col === 'shopDat') {
                                        if (newValue !== null && newValue !== '' && newValue !== undefined) {

                                        }
                                        else
                                        {
                                            hot_23_shop.setDataAtRowProp(row, 'SLAoDat', '', 'not');
                                            hot_23_shop.setDataAtRowProp(row, 'Ghichu', '', 'not');
                                        }
                                    }
                                    if (col === 'SLAoDat') {
                                        if(newValue === '' || newValue === null || newValue === undefined || Number(newValue) < 1)
                                        {
                                            hot_23_shop.setDataAtRowProp(row, 'SLAoDat',1, 'not');
                                        }
                                    }
                                });
                                hot_23_shop.render();
                            },
                        };
                    };

                    $('#hansontable_data_truy_thu_shop_23').css('overflow','auto');
                    $('#hansontable_data_truy_thu_shop_23_shop').css('overflow','auto');
                    var actionRendererUpload_23 = function (instance, td, row, col, prop, value, cellProperties) {
                        if (prop == 'NVTT') {
                            var valid = instance.getDataAtRowProp(row, 'GroupName'); // LuanNT44-17/09/2019
                            var $button = '';
                            if (valid === null || valid === '' || valid === undefined || valid !== 'Áo đồng phục' || JobTitleCode === '00304') { // LuanNT44-17/09/2019
                                $button = '';
                            }
                            else {
                                $button = $('<i id="r' + row + '" data-value="' + row + '" class="fa fa-cloud-upload" aria-hidden="true" style="color:blue; margin-top: 5%;"></i>');
                            
                                $button.click(function () {
                                    hot_23 = new Handsontable(container_TruyThuShop23, setting_ShopTT23());
                                    //▼ LuanNT44-17/09/2019
                                    var rowline = $(this).attr('data-value');
                                    var dataLoad = [], dataNV = [], dataMail = [], dataSoLuong = []; // LuanNT44-20/09/2019-23
                                    var dataLoadAll = $.grep(hot.getData(), function(item,index){
                                        return index == rowline
                                    })
                                    if(dataLoadAll.length > 0)
                                    {
                                        if(dataLoadAll[0].NV !== '' && dataLoadAll[0].NV !== null && dataLoadAll[0].NV !== undefined)
                                        {
                                            if(dataLoadAll[0].NV.indexOf(',') > 0)
                                            {
                                                dataNV = dataLoadAll[0].NV.split(',');
                                            }
                                            else
                                            {
                                                dataNV.push(dataLoadAll[0].NV);
                                            }
                                        }
                                        //▼ LuanNT44-20/09/2019-23
                                        if(dataLoadAll[0].Email !== '' && dataLoadAll[0].Email !== null && dataLoadAll[0].Email !== undefined)
                                        {
                                            if(dataLoadAll[0].Email.indexOf(',') > 0)
                                            {
                                                dataMail = dataLoadAll[0].Email.split(',');
                                            }
                                            else
                                            {
                                                dataMail.push(dataLoadAll[0].Email);
                                            }
                                        }
                                        if(dataLoadAll[0].SoluongAo !== '' && dataLoadAll[0].SoluongAo !== null && dataLoadAll[0].SoluongAo !== undefined)
                                        {
                                            if(dataLoadAll[0].SoluongAo.indexOf(',') > 0)
                                            {
                                                dataSoLuong = dataLoadAll[0].SoluongAo.split(',');
                                            }
                                            else
                                            {
                                                dataSoLuong.push(dataLoadAll[0].SoluongAo);
                                            }
                                        }
                                        if(dataNV.length > 0)
                                        {
                                            $.each(dataNV, function(index, item){
                                                dataLoad.push({Employess : item, Email: dataMail[index],SLAo: dataSoLuong[index],ThangTT:dataLoadAll[0].Month });
                                            });
                                        }
                                        else
                                        {
                                            dataLoad = [{Employess:"",Email: "",SLAo: "",ThangTT: ""}];
                                        }
                                        //▲ LuanNT44-20/09/2019-23
                                    }
                                    //var dataLoad = [{Employess:"",Email: "",ThangTT: ""}];
                                    //▲ LuanNT44-17/09/2019
                                    hot_23.loadData(dataLoad);
                                    $('#btncomfirm23').attr('data-id', rowline);
                                    $('#modalNVTruyThu_23').modal('show');
                                    setTimeout(function(){
                                        document.getElementById('hansontable_data_truy_thu_shop_23').click();
                                    },500);
                                });
                            }
                            $button != '' ?
                                $(td).empty().append($button) :
                                $(td).empty().append('');

                    
                   
                        }                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
                        else {
                            $(td).empty().append('');
                        }
                        td.style.textAlign = 'center';
                    };
                    var actionRendererUpload_23_shop = function (instance, td, row, col, prop, value, cellProperties) {
                        if (prop == 'ShopDatAo') {
                            var valid = instance.getDataAtRowProp(row, 'GroupName');
                            var $button = '';
                            if (valid === null || valid === '' || valid === undefined || valid !== 'Áo đồng phục' || JobTitleCode !== '00304') {
                                $button = '';
                            }
                            else {
                                $button = $('<i id="r' + row + '" data-value="' + row + '" class="fa fa-cloud-upload" aria-hidden="true" style="color:blue; margin-top: 5%;"></i>');
                            
                                $button.click(function () {
                                    hot_23_shop = new Handsontable(container_TruyThuShop23_shop, setting_ShopTT23_shop());
                                    var rowline = $(this).attr('data-value');
                                    var dataLoad = [], dataNV = [], dataGhiChu = [], dataSoLuong = [];
                                    var dataLoadAll = $.grep(hot.getData(), function(item,index){
                                        return index == rowline
                                    })
                                    if(dataLoadAll.length > 0)
                                    {
                                        if(dataLoadAll[0].ShopDatAo !== '' && dataLoadAll[0].ShopDatAo !== null && dataLoadAll[0].ShopDatAo !== undefined)
                                        {
                                            if(dataLoadAll[0].ShopDatAo.indexOf(',') > 0)
                                            {
                                                dataNV = dataLoadAll[0].ShopDatAo.split(',');
                                            }
                                            else
                                            {
                                                dataNV.push(dataLoadAll[0].ShopDatAo);
                                            }
                                        }
                                        if(dataLoadAll[0].SLDat !== '' && dataLoadAll[0].SLDat !== null && dataLoadAll[0].SLDat !== undefined)
                                        {
                                            if(dataLoadAll[0].SLDat.indexOf(',') > 0)
                                            {
                                                dataSoLuong = dataLoadAll[0].SLDat.split(',');
                                            }
                                            else
                                            {
                                                dataSoLuong.push(dataLoadAll[0].SLDat);
                                            }
                                        }
                                        if(dataLoadAll[0].GhiChuDat !== '' && dataLoadAll[0].GhiChuDat !== null && dataLoadAll[0].GhiChuDat !== undefined)
                                        {
                                            if(dataLoadAll[0].GhiChuDat.indexOf('/') > 0)
                                            {
                                                dataGhiChu = dataLoadAll[0].GhiChuDat.split('/');
                                            }
                                            else
                                            {
                                                dataGhiChu.push(dataLoadAll[0].GhiChuDat);
                                            }
                                        }
                                        if(dataNV.length > 0)
                                        {
                                            $.each(dataNV, function(index, item){
                                                dataLoad.push({shopDat : item, SLAoDat: dataSoLuong[index],Ghichu:dataGhiChu[index] });
                                            });
                                        }
                                        else
                                        {
                                            dataLoad = [{shopDat:"",SLAoDat: "",GhiChuDat: ""}];
                                        }
                                    }
                                    hot_23_shop.loadData(dataLoad);
                                    $('#btncomfirm23_shop').attr('data-id', rowline);
                                    $('#modalNVTruyThu_23_shop').modal('show');
                                    setTimeout(function(){
                                        document.getElementById('hansontable_data_truy_thu_shop_23_shop').click();
                                    },500);
                                });
                            }
                            $button != '' ?
                                $(td).empty().append($button) :
                                $(td).empty().append('');
                        }                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
                        else {
                            $(td).empty().append('');
                        }
                        td.style.textAlign = 'center';
                    };
                    var dataSetting = [{GroupProduct:"",
                        ItemName:"",
                        GroupName:"",
                        soluongtonkho:"",
                        soluongdat:"",
                        Price:"",
                        Unit:"",
                        ghichu:"",
                        NhanVienTT:"", // LuanNT44-17/09/2019
                        NV:"",         // LuanNT44-17/09/2019
                        Email:"",      // LuanNT44-17/09/2019
                        Month:"",      // LuanNT44-17/09/2019
                        SoluongAo:"",  // LuanNT44-20/09/2019-23
                        MaShopdat: "",
                        MaOffice: "",
                        ShopDatAo: "",
                        SLDat: "",
                        GhiChuDat: ""
                    }]
                    var setting = function () {
                        return {
                            //=================================Data=======
                            data: dataSetting,//dataHcHandsontable,
                            //================================Cols=======
                            //▼ Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                            maxCols: 9,
                            minCols: 9,
                            startCols: 9,
                            minSpareCols: 0,
                            allowInsertColumn: false,
                            allowRemoveColumn: false,
                            autoColumnSize: true,
                            autoWrapCol: true,
                            columnSorting: false,
                            colWidths: 'undefined',
                            copyColsLimit: 9,//▼ Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                            currentColClassName: 'currentCol', //currentCol
                            //fixedColumnsLeft: 0,
                            manualColumnMove: false,
                            manualColumnResize: true,
                            viewportColumnRenderingOffset: 9,//▼ Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                            sortIndicator: true,
                            //================================Rows=======
                            allowInsertRow: true,
                            allowRemoveRow: true,
                            autoRowSize: true,
                            autoWrapRow: true,
                            copyRowsLimit: 1000,
                            currentRowClassName: 'currentRow',
                            fixedRowsTop: 0,
                            manualRowMove: false,
                            manualRowResize: true,
                            rowHeaders: true,
                            minSpareRows: 10,
                            startRows: 10,
                            //viewportRowRenderingOffset : 'auto',
                            //maxRows: 'Infinity',
                            //minRows: 'Infinity',
                            //================================Oder=======
                            allowInvalid: false,
                            stretchH: 'all',
                            commentedCellClassName: 'htCommentCell',
                            comments: true,
                            contextMenu: true,
                            copyable: true,
                            customBorders: false,
                            debug: false,
                            disableVisualSelection: true,
                            enterBeginsEditingBoolean: true,
                            fillHandle: true,
                            outsideClickDeselects: true,
                            fragmentSelection: false,
                            groups: false,
                            invalidCellClassName: 'htInvalid',
                            mergeCells: false,
                            multiSelect: true,
                            noWordWrapClassName: 'htNoWrap',
                            placeholder: false,
                            placeholderCellClassName: 'htPlaceholder',
                            readOnlyCellClassName: 'htDimmed',
                            search: false,
                            trimWhitespace: true,
                            undo: true,
                            formulas: true,
                            wordWrap: true,
                            //====================================Oder ==============================================
                            //▼ Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                            colHeaders: ["Nhóm sản phẩm", "Tên mặt hàng", "Nhóm hàng", "Số lượng tồn kho", "Số lượng", "Đơn giá", "Thành tiền", "Đ.V tính", "Ghi chú","NV đặt mua áo","Shop đặt áo"],
                            columns: [
                                //▼ Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                                { data: "GroupProduct", type: 'autocomplete', source: data_GroupProductName, strict: false, className: 'htLeft', width: 300 },
                                { data: "ItemName", type: 'autocomplete', source: arrNameDevices, strict: false, className: 'htLeft', width: 300 },
                                { data: "GroupName", className: 'htLeft', readOnly: true, },
                                //▼ Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                                { data: "soluongtonkho", type: 'text', readOnly: true },
                                { data: "soluongdat", type: 'numeric', format: '0,0', validator: Validater.quantity, allowInvalid: false, },
                                {
                                    data: "Price", type: 'numeric', format: '0,0', readOnly: true,
                                    renderer: function (instance, td, row, col, prop, value) {
                                        //▼ Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                                        if (col === 5 && row === dataSetting.length - 1) { // LuanNT44-19/09/2019-23-edit line
                                            td.style.fontWeight = 'bold';
                                            td.style.textAlign = 'right';
                                            td.style.color = 'green';
                                            value = 'Tổng tiền:';
                                        }
                                        Handsontable.NumericRenderer.apply(this, arguments);
                                    }, width: 90,
                                },
                                {
                                    readOnly: false, format: '0,0', type: 'numeric',
                                    renderer: function (instance, td, row, col, prop, value) {
                                        //▼ Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                                        if (col === 6 && row !== dataSetting.length - 1) { // LuanNT44-19/09/2019-23-edit line
                                            td.style.fontWeight = 'bold';
                                            var sum = 0;
                                            var soluongdat = instance.getDataAtCell(row, 4);
                                            var Price = instance.getDataAtCell(row, 5);
                                            if (soluongdat === undefined || soluongdat === null || soluongdat === '' || isNaN(soluongdat) === true ||
                                                Price === undefined || Price === null || Price === '' || isNaN(Price) === true) {
                                                value = '';
                                            } else {
                                                value = soluongdat * Price;
                                            }
                                        }
                                        else if (col === 6 && row === dataSetting.length - 1) { // LuanNT44-19/09/2019-23-edit line
                                            td.style.fontWeight = 'bold';
                                            td.style.color = 'green';
                                            var sum = 0;
                                            $.each(dataSetting, function (index, item) {  // LuanNT44-19/09/2019-23-edit line
                                                var soluongdat = item.soluongdat;
                                                var Price = item.Price;
                                                if (soluongdat === undefined || soluongdat === null || soluongdat === '' || isNaN(soluongdat) === true) {
                                                    soluongdat = 0; vaild = false;
                                                }
                                                if (Price === undefined || Price === null || Price === '' || isNaN(Price) === true) {
                                                    Price = 0; vaild = false;
                                                }
                                                sum += soluongdat * Price;
                                            });
                                            value = sum;
                                        }
                                        //▼ Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                                        Handsontable.NumericRenderer.apply(this, arguments);
                                    }
                                },
                                { data: "Unit", className: 'htLeft', readOnly: false },
                                { data: "ghichu", className: 'htLeft' },
                                { data: "NVTT", type: 'text', editor: false, renderer: actionRendererUpload_23,width: 150, className: 'htLeft', readOnly: true },
                                { data: "ShopDatAo", type: 'text', editor: false, renderer: actionRendererUpload_23_shop,width: 150, className: 'htLeft', readOnly: true },
                            ],
                            afterRemoveRow: function (index, amount) {
                                hot.updateSettings({
                                    cells: function (row, col, prop) {
                                        cellProperties = {};
                                        //▼ Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                                        if (col === 2 || col === 3 || col === 5 || col === 6 || col == 7 || row === dataHcHandsontable.length - 1) {
                                            cellProperties.readOnly = true;
                                        } else {
                                            cellProperties.readOnly = false;
                                        }

                                        return cellProperties;
                                    }
                                });
                            },
                            cells: function (row, col, prop) {
                                cellProperties = {};
                                //▼ Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                                if (col === 2 || col === 5 || col === 6 || col == 7 || row === dataHcHandsontable.length - 1) {
                                    cellProperties.readOnly = true;
                                } else {
                                    cellProperties.readOnly = false;
                                }
                                return cellProperties;
                            },
                            beforeChange: function (change, source) {
                                if (source === 'not') return;
                                for (i = 0, len = change.length; i < len; i++) {
                                    var row = change[i][0], col = change[i][1];
                                    if (col === 'ItemName') {
                                        var thietbiCu = change[i][2], thietbi = change[i][3];
                                        //▼ Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                                        var colls = hot.getDataAtCol(1);
                                        var trung = $.grep(colls, function (item, index) {
                                            return item == thietbi
                                                && item !== "" && item !== null && item !== undefined
                                                && thietbiCu != thietbi;
                                        });
                                        if (trung.length > 0) {

                                            XFunction.RenderMessage('error', 'Đã tồn tại sản phẩm này trên lưới..vui lòng chọn sản phẩm khác');
                                            return false;
                                        }
                                        else {
                                            if (thietbi !== undefined && thietbi !== "" && thietbi !== null) {
                                                var timthietbi;
                                                timthietbi = $.grep(dataDevices, function (item, index) { return item.ItemName === thietbi; });
                                                if (timthietbi !== undefined && timthietbi !== null && timthietbi !== "" && timthietbi.length > 0) {
                                                    //▼ Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                                                    hot.setDataAtCell(row, 1, timthietbi[0].ItemName, 'not');
                                                    hot.setDataAtCell(row, 2, timthietbi[0].GroupName, 'not');
                                                    hot.setDataAtCell(row, 4, 0, 'not');
                                                    hot.setDataAtCell(row, 5, timthietbi[0].Price, 'not');
                                                    hot.setDataAtCell(row, 6, 0, 'not'),
                                                        hot.setDataAtCell(row, 7, timthietbi[0].Unit, 'not'),
                                                        hot.updateSettings({
                                                            cells: function (row, col, prop) {
                                                                cellProperties = {};
                                                                //▼ Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                                                                if (col === 2 || col === 3 || col === 5 || col === 6 || col == 7 || row === dataHcHandsontable.length - 1) {
                                                                    cellProperties.readOnly = true;
                                                                } else {
                                                                    cellProperties.readOnly = false;
                                                                }

                                                                return cellProperties;
                                                            }
                                                        });
                                                    //▼ Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                                                    hot.selectCell(row, 4, row, 3);
                                                } else {
                                                    return false;
                                                }
                                            }
                                        }
                                    }
                                    if (col === 'soluongdat') {
                                        //▼ Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                                        var col0 = hot.getDataAtCell(row, 1);
                                        if (col0 === '' || col0 === undefined || col0 === null) {
                                            hot.selectCell(row, 1, row, 0);
                                            return false;
                                        } else {
                                            hot.selectCell(row + 1, 0, row + 1, 0);
                                        }
                                        //▼ Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                                    }
                                    if (col === 'ghichu') {
                                        var col0 = hot.getDataAtCell(row, 0);
                                        var colAo = hot.getDataAtCell(row, 2); // LuanNT44-17/09/2019
                                        if ((col0 === "" || col0 === undefined || col0 === null) && colAo !== 'Áo đồng phục') { // LuanNT44-17/09/2019
                                            return false;
                                        }
                                        hot.selectCell(row, 0, row, 0);
                                    }
                                }
                            },
                            afterChange: function (changes, source) {
                                if (!changes) {
                                    return;
                                }
                                var instance = this;
                                changes.forEach(function (change) {
                                    var row = change[0];
                                    var col = change[1];
                                    var newValue = change[3];
                                    var cellProperties, options;
                                    //▼ Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                                    if (col == "GroupProduct") {
                                        if (newValue != '' && newValue != null && newValue != undefined) {
                                            var ItemArr = $.grep(arrDevices, function (item, index) {
                                                return (item.MaNhomSP + '--' + item.TenNhomSP) == newValue;
                                            });

                                            if (ItemArr.length > 0) {
                                                var ItemArrName = [];
                                                $.each(ItemArr, function (index, item) {
                                                    ItemArrName.push(item.ItemName);
                                                });
                                                if (ItemArrName.length > 0) {
                                                    cellProperties = instance.getCellMeta(row, 1);
                                                    cellProperties.source = ItemArrName;
                                                }
                                                else {
                                                    cellProperties = instance.getCellMeta(row, 1);
                                                    cellProperties.source = [];
                                                    instance.setDataAtRowProp(row, 'ItemName', '', 'not');
                                                    instance.setDataAtRowProp(row, 'GroupName', '', 'not');
                                                    instance.setDataAtRowProp(row, 'soluongtonkho', '', 'not');
                                                    instance.setDataAtRowProp(row, 'soluongdat', '', 'not');
                                                    instance.setDataAtRowProp(row, 'Price', '', 'not');
                                                    instance.setDataAtRowProp(row, 'Unit', '', 'not');
                                                }
                                            }
                                            else {
                                                cellProperties = instance.getCellMeta(row, 1);
                                                cellProperties.source = [];
                                                instance.setDataAtRowProp(row, 'ItemName', '', 'not');
                                                instance.setDataAtRowProp(row, 'GroupName', '', 'not');
                                                instance.setDataAtRowProp(row, 'soluongtonkho', '', 'not');
                                                instance.setDataAtRowProp(row, 'soluongdat', '', 'not');
                                                instance.setDataAtRowProp(row, 'Price', '', 'not');
                                                instance.setDataAtRowProp(row, 'Unit', '', 'not');
                                            };
                                        };
                                    };
                                    //▼ Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                                    if (col == "ItemName") {
                                        var MaSP = '', MaShop = '';
                                        var dataItemChon_23 = $.grep(arrDevices, function (item, index) { return item.ItemName === newValue; });
                                        var dataShopChon_23 = $.grep(dataShopAll_B1, function (item, index) { return item.WarehouseCode == dataShop_B1[0].WarehouseCode; });
                                        if (dataShopChon_23.length > 0 && dataItemChon_23.length > 0) {
                                            MaShop = dataShopChon_23[0].WarehouseCodeB1;
                                            MaSP = dataItemChon_23[0].ItemCode;
                                            var dataInventoryAll = [], NhomSanPham = '';
                                            var group_Item = hot.getDataAtRowProp(row, 'GroupProduct');
                                            var dataNhomSanPham = $.grep(data_GroupProduct, function (item, index) {
                                                return dataItemChon_23[0].MaNhomSP == item.MaNhom;
                                            });
                                            if (dataNhomSanPham.length > 0 && (group_Item === null || group_Item === '' || group_Item === undefined)) {

                                                hot.setDataAtRowProp(row, 'GroupProduct', (dataNhomSanPham[0].MaNhom + '--' + dataNhomSanPham[0].TenNhom), 'not');
                                            }
                                            else {
                                                hot.setDataAtRowProp(row, 'GroupProduct', group_Item, 'not');
                                            };
                                            if (dataItemChon_23[0].Limited.toLowerCase() === "xuất từ kho hc") {
                                                $.get('/Requests/GetInventoryByItem_typeId_155', { itemCode: MaSP, warehouseCode: MaShop }, function (data) {
                                                    dataInventoryAll = data;
                                                    if (dataInventoryAll.length > 0) {
                                                        hot.setDataAtRowProp(row, 'soluongtonkho', dataInventoryAll[0].TonKho, 'not');
                                                    }
                                                });
                                            }
                                            else {
                                                hot.setDataAtRowProp(row, 'soluongtonkho', '', 'not');
                                            }
                                        };
                                    };
                                    if (col == "soluongdat") {
                                        if (newValue > 0) {
                                            console.log(hot.getData());
                                            if (JobTitleCode !== '00304') {
                                                var sl_ao = "";
                                                $.each(hot.getData(), function (index, item) {
                                                    if (index == row) {
                                                        sl_ao = item.SoluongAo;
                                                    }
                                                });
                                                if (sl_ao !== '' && sl_ao !== undefined && sl_ao !== null) {
                                                    var ao_SL = 0;
                                                    if (sl_ao.indexOf(',') > 0) {
                                                        var list_ao = sl_ao.split(',');
                                                        $.each(list_ao, function (index, item) {
                                                            ao_SL += Number(item);
                                                        })
                                                    }
                                                    else {
                                                        ao_SL = Number(sl_ao);
                                                    }
                                                    if (newValue != ao_SL) {
                                                        //hot.setDataAtCell(row, 4, 0, 'not');
                                                        XFunction.RenderMessage('error', 'Số lượng áo trên popup phải bằng số lượng shop nhập trên lưới Calllog !'); return;        
                                                    }
                                                }
                                            }
                                            else {
                                                // đội trưởng đội an ninh
                                                var sl_ao = "";
                                                $.each(hot.getData(), function (index, item) {
                                                    if (index == row) {
                                                        sl_ao = item.SLDat;
                                                    }
                                                });
                                                if (sl_ao !== '' && sl_ao !== undefined && sl_ao !== null) {
                                                    var ao_SL = 0;
                                                    if (sl_ao.indexOf(',') > 0) {
                                                        var list_ao = sl_ao.split(',');
                                                        $.each(list_ao, function (index, item) {
                                                            ao_SL += Number(item);
                                                        })
                                                    }
                                                    else {
                                                        ao_SL = Number(sl_ao);
                                                    }
                                                    if (newValue != ao_SL) {
                                                        //hot.setDataAtCell(row, 4, 0, 'not');
                                                        XFunction.RenderMessage('error', 'Tổng số lượng áo trên popup đặt áo phải bằng số lượng đã nhập trên lưới. !'); return;    
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    //▼ Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                                });
                            },
                            //▼ Edit - ThuongNM2 - 2018/12/26 - fix lỗi nhập số thập phân vào số lượng    
                            beforeKeyDown: function (e) {
                                var selection = hot.getSelected();
                                //8,46,13
                                if (selection[1] === 4) {
                                    if ((e.keyCode < 48 || e.keyCode > 57) && (e.keyCode < 96 || e.keyCode > 105) && e.keyCode !== 8 && e.keyCode !== 46 && e.keyCode !== 37 && e.keyCode !== 39) {
                                        if (e.keyCode === 110 || e.keyCode === 190) {
                                            confirm("Số lượng hàng hóa bạn đặt không hợp lệ, Số lượng đặt Phải là số Nguyên!");
                                            //XFunction.RenderMessage('error', "Số lượng hàng hóa bạn đặt không hợp lệ, Số lượng đặt Phải là số Nguyên!");
                                        }
                                        e.preventDefault();

                                    }

                                }

                            }
                            //▲ Edit - ThuongNM2 - 2018/12/26 - fix lỗi nhập số thập phân vào số lượng

                        };
                    };
                    hot = new Handsontable(container, setting());
                    hot.selectCell(0, 0, 0, 0);
                    $('#btncomfirm23').click(function(){
                        //console.log(hot.getData());
                        //console.log(hot_23.getData());
                        var idtemp = $(this).attr('data-id');
                        //console.log(idtemp);
                        var listNV = [], listStringNV = '';
                        //▼ LuanNT44-17/09/2019  //▼ LuanNT44-20/09/2019-23 //▼ LuanNT44-20/09/2019-23-edit 2
                        var dataCheckSLAO = $.grep(hot_23.getData(), function(item,index){
                            return (item.Employess !== '' && item.Employess !== null && item.Employess !== undefined)
                        })
                        if(dataCheckSLAO.length > 0)
                        {
                            var FlagcheckSLTT = 0;
                            var flagCheckSLDat = 0;
                            $.each(dataCheckSLAO, function(index,item){
                                FlagcheckSLTT += Number(item.SLAo)
                            })  
                            $.each(hot.getData(), function(index,item){
                                if(index == idtemp)
                                {
                                    flagCheckSLDat = item.soluongdat
                                }
                            
                            })
                            if(FlagcheckSLTT != flagCheckSLDat)
                            {
                                XFunction.RenderMessage('error', 'Số lượng áo trên popup phải bằng số lượng shop nhập trên lưới Calllog !'); return ;
                            }
                        }
                        //▲ LuanNT44-20/09/2019-23-edit 2
                        var listNVAll = [], listStringNVAll ='', ListEmail = [], ListStringEmail ='', Thang = '';
                        var listSoLuong = [], listStringSoLuong = ''; 
                        $.each(hot_23.getData(), function(index,item){
                            if(item.Employess !== '' && item.Employess !== null && item.Employess !== undefined)
                            {
                                listNV.push(item.Employess.split('-')[0]);
                                listNVAll.push(item.Employess);
                                //▼ LuanNT44-23/09/2019
                                var tmpemail = ' ';
                                if(item.Email !== '' && item.Email !== null && item.Email !== undefined)
                                {
                                    tmpemail = item.Email;
                                }
                                ListEmail.push(tmpemail);
                                //▲ LuanNT44-23/09/2019
                                listSoLuong.push(item.SLAo);
                                Thang = item.ThangTT;
                            }
                        })
                        if(listNV.length > 0)
                        {
                            listStringNV = listNV.join(',');
                            listStringNVAll = listNVAll.join(',');
                        }
                        if(ListEmail.length > 0)
                        {
                            ListStringEmail = ListEmail.join(',');
                        }
                        if(listSoLuong.length > 0)
                        {
                            listStringSoLuong = listSoLuong.join(',');
                        }
                        $.each(hot.getData(), function(index, item){
                            if(index == idtemp)
                            {
                                item.NhanVienTT = listStringNV;
                                item.NV = listStringNVAll;
                                item.Email = ListStringEmail;
                                item.SoluongAo = listStringSoLuong;
                                item.Month = Thang;
                            }
                        });
                        $('#modalNVTruyThu_23').modal('hide');
                        //▲ LuanNT44-17/09/2019 //▲ LuanNT44-20/09/2019-23
                    });
                    $('#btncancel23').click(function(){
                        $('#modalNVTruyThu_23').modal('hide');
                    });
                    $('#btncomfirm23_shop').click(function(){
                        //console.log(hot.getData());
                        //console.log(hot_23.getData());
                        var idtemp = $(this).attr('data-id');
                        //console.log(idtemp);
                        var listNV = [], listStringNV = '';
                        var dataCheckSLAO = $.grep(hot_23_shop.getData(), function(item,index){
                            return (item.shopDat !== '' && item.shopDat !== null && item.shopDat !== undefined)
                        })
                        if(dataCheckSLAO.length > 0)
                        {
                            var flagSLCheck = 0, flagGCCheck = 0;
                            $.each(dataCheckSLAO, function(index,item){
                                if(item.SLAoDat === '' || item.SLAoDat === null || item.SLAoDat === undefined)
                                {
                                    flagSLCheck ++ ;
                                }
                                if(item.Ghichu === '' || item.Ghichu === null || item.Ghichu === undefined)
                                {
                                    flagGCCheck ++;
                                }
                            });
                            if(flagSLCheck > 0)
                            {
                                XFunction.RenderMessage('error', 'Vui lòng nhập số lượng áo cần đặt cho shop. !'); return ;
                            }
                            if(flagGCCheck > 0)
                            {
                                XFunction.RenderMessage('error', 'Vui lòng nhập thông tin loại áo nam/nữ, size áo!'); return ;
                            }
                            var FlagcheckSLTT = 0;
                            var flagCheckSLDat = 0;
                            $.each(dataCheckSLAO, function(index,item){
                                FlagcheckSLTT += Number(item.SLAoDat)
                            })  
                            $.each(hot.getData(), function(index,item){
                                if(index == idtemp)
                                {
                                    flagCheckSLDat = item.soluongdat
                                }
                            
                            })
                            if(FlagcheckSLTT != flagCheckSLDat)
                            {
                                XFunction.RenderMessage('error', 'Tổng số lượng áo trên popup đặt áo phải bằng số lượng đã nhập trên lưới. !'); return ;
                            }
                        }
                        var listNVAll = [], listStringNVAll ='', ListGhiChu = [], ListStringGhiChu ='';
                        var listSoLuong = [], listStringSoLuong = ''; 
                        $.each(hot_23_shop.getData(), function(index,item){
                            if(item.shopDat !== '' && item.shopDat !== null && item.shopDat !== undefined)
                            {
                                listNV.push(item.shopDat.split('-')[0]);
                                listNVAll.push(item.shopDat);
                                ListGhiChu.push(item.Ghichu);
                                listSoLuong.push(item.SLAoDat);
                            }
                        })
                        if(listNV.length > 0)
                        {
                            listStringNV = listNV.join(',');
                            listStringNVAll = listNVAll.join(',');
                        }
                        if(ListGhiChu.length > 0)
                        {
                            ListStringGhiChu = ListGhiChu.join('/');
                        }
                        if(listSoLuong.length > 0)
                        {
                            listStringSoLuong = listSoLuong.join(',');
                        }
                        $.each(hot.getData(), function(index, item){
                            if(index == idtemp)
                            {
                                item.ShopDatAo = listStringNVAll;
                                item.SLDat = listStringSoLuong;
                                item.GhiChuDat = ListStringGhiChu;
                            }
                        });
                        //console.log(hot.getData());
                        $('#modalNVTruyThu_23_shop').modal('hide');
                    });
                    $('#btncancel23_shop').click(function(){
                        $('#modalNVTruyThu_23_shop').modal('hide');
                    });
                    $('#modalNVTruyThu_23').on('hide.bs.modal', function (e) {
                        hot_23.destroy();
                    });
                    $('#modalNVTruyThu_23_shop').on('hide.bs.modal', function (e) {
                        hot_23_shop.destroy();
                    });
                });
            });
        },               //#Hc 04/09/2015

        //▲ Edit - =======================================
        //▲ LuanNT44-13/11/2019-23
        //▲ LuanNT44-06/09/2019-23
        RenderGridDept: function () {
            $('.compose-message').hide();
            $('#detail').show();
            $('#sum-total').show();
            $('#handsontableEx').css('overflow', 'hidden');

            $.get('/Requests/GetShopByRegion', { regionId: 0 }, function (data) {
                dataDept = data;
                $.each(data, function (index, item) {
                    arrNameShopDept.push(item.WarehouseName);
                });
            });

            var now = new Date();
            var day = (now.getDate() < 10) ? '0' + now.getDate() : now.getDate();
            var month = ((now.getMonth() + 1) < 10) ? '0' + (now.getMonth() + 1) : (now.getMonth() + 1);
            var oneDay = day + "/" + month + "/" + (now.getYear() + 1900);

            var setting = function () {
                return {
                    //=================================Data=======
                    data: dataDeptHandsontable,
                    //================================Cols=======
                    maxCols: 9,
                    minCols: 9,
                    startCols: 9,
                    minSpareCols: 0,
                    allowInsertColumn: false,
                    allowRemoveColumn: false,
                    autoColumnSize: true,
                    autoWrapCol: true,
                    columnSorting: false,
                    colWidths: 'undefined',
                    copyColsLimit: 9,
                    currentColClassName: 'currentCol', //currentCol
                    fixedColumnsLeft: 0,
                    manualColumnMove: false,
                    manualColumnResize: true,
                    viewportColumnRenderingOffset: 9,
                    sortIndicator: true,
                    //================================Rows=======
                    allowInsertRow: true,
                    allowRemoveRow: true,
                    autoRowSize: true,
                    autoWrapRow: true,
                    copyRowsLimit: 1000,
                    currentRowClassName: 'currentRow',
                    fixedRowsTop: 0,
                    manualRowMove: false,
                    manualRowResize: true,
                    rowHeaders: true,
                    minSpareRows: 10,
                    startRows: 10,
                    //viewportRowRenderingOffset : 'auto',
                    //maxRows: 'Infinity',
                    //minRows: 'Infinity',
                    //================================Oder=======
                    allowInvalid: false,
                    stretchH: 'all',
                    commentedCellClassName: 'htCommentCell',
                    comments: true,
                    contextMenu: true,
                    copyable: true,
                    customBorders: false,
                    debug: false,
                    disableVisualSelection: true,
                    enterBeginsEditingBoolean: true,
                    fillHandle: true,
                    outsideClickDeselects: true,
                    fragmentSelection: false,
                    groups: false,
                    invalidCellClassName: 'htInvalid',
                    mergeCells: false,
                    multiSelect: true,
                    noWordWrapClassName: 'htNoWrap',
                    placeholder: false,
                    placeholderCellClassName: 'htPlaceholder',
                    readOnlyCellClassName: 'htDimmed',
                    search: false,
                    trimWhitespace: true,
                    undo: true,
                    formulas: true,
                    wordWrap: true,
                    //====================================Oder ==============================================
                    colHeaders: ["Shop", "Mã K/h", "Tên K/h", "Số hđ", "Ngày C/t", "Ngày đến hạn", "Diễn giải", "Tiền C/t", "Dư C/t"],
                    columns: [
                        { data: "shop", type: 'autocomplete', source: arrNameShopDept, strict: false, className: 'htLeft', width: 250 },
                        { data: "customerId", className: 'htLeft' },
                        { data: "customerName", className: 'htLeft' },
                        { data: "billNumber", className: 'htLeft' },
                        { data: "startDate", type: 'date', dateFormat: 'DD/MM/YYYY', correctFormat: true, defaultDate: oneDay, width: 100, },
                        { data: "endDate", type: 'date', dateFormat: 'DD/MM/YYYY', correctFormat: true, validator: Validater.dateGreaterNowDay, allowInvalid: true, defaultDate: oneDay, width: 100, allowInvalid: true },
                        { data: "note", className: 'htLeft' },
                        { data: "price", type: 'numeric', format: '0,0', validator: Validater.money, allowInvalid: false },
                        { data: "priceOut", type: 'numeric', format: '0,0', validator: Validater.money, allowInvalid: false },
                    ],
                    afterRemoveRow: function (index, amount) {
                        hot.setDataAtCell(index + 9, 1, undefined, 'not');
                    },
                    beforeChange: function (change, source) {

                        if (source == 'not') return;
                        for (i = 0; i < change.length; i++) {
                            var row = change[i][0], coll = change[i][1];
                            var newValue = change[i][3], oldValue = change[i][2];
                            if (coll === "shop") {
                                var timshop = $.grep(dataDept, function (item, index) {
                                    return item.WarehouseName == newValue &&
                                        newValue !== undefined && newValue !== null && newValue !== "";
                                });
                                if (timshop.length > 0 && timshop !== undefined && timshop !== "" && timshop !== null) {

                                    hot.selectCell(row, 1);
                                    return true;
                                } else {
                                    return false;
                                }

                            }
                            if (coll === "customerId" || coll === "customerName" ||
                                coll === "billNumber" || coll === "note" ||
                                coll === "price" || coll === "endDate") {
                                var shop = hot.getDataAtCell(row, 0);
                                if (shop === "" || shop === null || shop === undefined) {
                                    hot.selectCell(row, 0, row, 0);
                                    return false;
                                }
                            }
                            if (coll === "endDate") {
                                var shop = hot.getDataAtCell(row, 0);
                                if (shop === "" || shop === null || shop === undefined) {
                                    hot.selectCell(row, 0, row, 0);
                                    return false;
                                } else {
                                    var dataVaild = newValue.split("/");
                                    var test = parseInt(dataVaild[1]);
                                    if (test > 12) {
                                        hot.setDataAtCell(row, 5, "", 'not')
                                    }
                                }

                            }
                            if (coll === "startDate") {
                                var shop = hot.getDataAtCell(row, 0);
                                if (shop === "" || shop === null || shop === undefined) {
                                    hot.selectCell(row, 0, row, 0);
                                    return false;
                                } else {
                                    var dataVaild = newValue.split("/");
                                    var test = parseInt(dataVaild[1]);
                                    if (test > 12) {
                                        hot.setDataAtCell(row, 4, "", 'not')
                                    }
                                }
                            }
                            if (coll === "priceOut") {
                                var shop = hot.getDataAtCell(row, 0);
                                if (shop === "" || shop === null || shop === undefined) {
                                    hot.selectCell(row, 0, row, 0);
                                    return false;
                                } else {
                                    hot.selectCell(row + 1, 0, row + 1, 0);
                                    return true;
                                }
                            }

                        }
                    },
                };
            };
            hot = new Handsontable(container, setting());
            hot.selectCell(0, 0, 0, 0);

            XFunction.functionConfigImportExcel('dept');

        },             //#Dept 04/09/2015
        RenderGridNotDetails: function () {

        },       //#NotDetail  04/09/2015
        RenderGridApple: function () {
            $('.compose-message').hide();
            $('#detail').show();
            $('#sum-total').hide(); // not support dowload file

            dataAppleNames = [
                { group: 'Iphone', id: '00001003', name: "Apple ĐTDĐ iPhone 5s 16G Gold (A1530)_MF354VN/A", quantity: 0 },
                { group: 'Iphone', id: '00003276', name: "Apple ĐTDĐ iPhone 6 16GB Silver MG482VN/A", quantity: 0 },
                { group: 'Iphone', id: '00003277', name: "Apple ĐTDĐ iPhone 6 16GB Gold MG492VN/A", quantity: 0 },
                { group: 'Iphone', id: '00003278', name: "Apple ĐTDĐ iPhone 6 64GB Gray MG4F2VN/A", quantity: 0 },
                { group: 'Iphone', id: '00003279', name: "Apple ĐTDĐ iPhone 6 64GB Silver MG4H2VN/A", quantity: 0 },
                { group: 'Iphone', id: '00003280', name: "Apple ĐTDĐ iPhone 6 64GB Gold MG4J2VN/A", quantity: 0 },
                { group: 'Iphone', id: '00003284', name: "Apple ĐTDĐ iPhone 6 Plus 16GB Gray MGA82VN/A", quantity: 0 },
                { group: 'Iphone', id: '00003285', name: "Apple ĐTDĐ iPhone 6 Plus 16GB Silver MGA92VN/A", quantity: 0 },
                { group: 'Iphone', id: '00003286', name: "Apple ĐTDĐ iPhone 6 Plus 16GB Gold MGAA2VN/A", quantity: 0 },
                { group: 'Iphone', id: '00003287', name: "Apple ĐTDĐ iPhone 6 Plus 64GB Gray MGAH2VN/A", quantity: 0 },
                { group: 'Iphone', id: '00003288', name: "Apple ĐTDĐ iPhone 6 Plus 64GB Silver MGAJ2VN/A", quantity: 0 },
                { group: 'Iphone', id: '00003289', name: "Apple ĐTDĐ iPhone 6 Plus 64GB Gold MGAK2VN/A", quantity: 0 },
                { group: 'Ipad', id: '00003338', name: "Apple Máy tính bảng iPad Mini 3 Wi-Fi 16GB Gold MGYE2TH/A", quantity: 0 },
                { group: 'Ipad', id: '00003320', name: "Apple Máy tính bảng iPad Air 2 Wi-Fi 16GB Gold MH0W2TH/A", quantity: 0 },
                { group: 'Ipad', id: '00003347', name: "Apple Máy tính bảng iPad Mini 3 Wi-Fi 4G 16GB Gold MGYR2TH/A", quantity: 0 },
                { group: 'Ipad', id: '00003329', name: "Apple Máy tính bảng iPad Air 2 Wi-Fi 4G 16GB Gold MH1C2TH/A", quantity: 0 },
                { group: 'Ipad', id: '00003332', name: "Apple Máy tính bảng iPad Air 2 Wi-Fi 4G 64GB Gold MH172TH/A", quantity: 0 },
                { group: 'Mac', id: '00004308', name: "Apple MTXT Macbook Air 13 1.6Ghz Core i5/4GB/128GB SSD/HD6000 MJVE2ZP/A", quantity: 0 },
                { group: 'Mac', id: '00004306', name: "Apple MTXT Macbook Air 11 1.6Ghz Core i5/4GB/128GB SSD/HD6000 MJVM2ZP/A", quantity: 0 },
                { group: 'Mac', id: '00004311', name: "Apple MTXT Macbook Pro 13 2.7Ghz Core i5/8GB/256GB SSD/Intel Iris 6100/Retina MF840ZP/A", quantity: 0 },
                { group: 'Mac', id: '00004310', name: "Apple MTXT Macbook Pro 13 2.7Ghz Core i5/8GB/128GB SSD/Intel Iris 6100/Retina MF839ZP/A", quantity: 0 },
                { group: 'Mac', id: '00004959', name: "Apple MTXT Macbook Pro 15 2.2Ghz Core i7/16GB/256GB SSD/Intel Iris Pro/Retina MJLQ2ZP/A", quantity: 0 },
                { group: 'Mac', id: '00002562', name: "Apple PC iMac 21.5 1.4GHz Core i5/2x4GB/500GB/intel HD5000 MF883ZP/A", quantity: 0 },
            ];

            $.each(dataAppleNames, function (index, item) {
                if (item != "" && item != undefined && item != null) {
                    arrAppleNames.push(item.name);
                }
            });

            hot = new Handsontable(container, {
                data: dataAppleNames,
                outsideClickDeselects: true,
                minSpareRows: 0,
                allowInvalid: false,
                stretchH: 'none',
                maxRows: 23,
                minRows: 23,
                rowHeaders: true,
                persistentStateBoolean: true,
                fillHandle: false,
                startCols: 3,
                maxCols: 3,
                minCols: 3,
                currentRowClassName: 'currentRow',
                currentColClassName: 'currentCol',
                colHeaders: ["Sản phẩm", "Số lượng", "Ghi chú"],
                columns: [
                    { data: "name", readOnly: true, className: 'htLeft' },
                    { data: "quantity", type: 'numeric' },
                    { data: "group", className: 'htLeft' },
                ],
                afterRemoveRow: function (index, amount) {

                },
                beforeChange: function (change, source) {
                    if (source == 'not') return;

                    for (i = 0; i < change.length; i++) {
                        var row = change[i][0], coll = change[i][1];
                        var newValue = change[i][3], oldValue = change[i][2];
                        if (coll == "quantity") {
                            if (newValue < 0) {
                                toastr.options = { "newestOnTop": true, "showMethod": "show", "hideMethod": "hide", "positionClass": "toast-top-right" };
                                toastr["error"]("<trong>Số lương mua không được âm</strong>");
                                return false;
                            } else if (newValue == undefined) {
                                return false;
                            }
                            else {
                                var rowNameGroup = hot.getDataAtCell(row, 2);
                                var rowName = hot.getDataAtCell(row, 0);
                                var myData = hot.getData(0, 0, hot.getData().length, 2);
                                var sumquantity = 0;
                                $.each(myData, function (index, item) {
                                    if (item[2] == rowNameGroup && item[0] != rowName) {
                                        if (item[1] == "" || item[1] == null || item[1] == undefined) {
                                            sumquantity += 0;
                                        } else {
                                            sumquantity += item[1];
                                        }
                                    }
                                });


                                if (rowNameGroup == "Mac") {
                                    if (sumquantity >= 1) {
                                        toastr.options = { "newestOnTop": true, "showMethod": "show", "hideMethod": "hide", "positionClass": "toast-top-right" };
                                        toastr["error"]("<trong>Mac mua chỉ được 1 sản phẩm</strong>");
                                        return false;
                                    } else {
                                        if (newValue > 1) {
                                            toastr.options = { "newestOnTop": true, "showMethod": "show", "hideMethod": "hide", "positionClass": "toast-top-right" };
                                            toastr["error"]("<trong>Chỉ mua được 1 sản phẩm</strong>");
                                            hot.setDataAtCell(row, 1, 1, 'not')
                                            return false;
                                        }
                                    }

                                } else if (rowNameGroup == "Ipad") {
                                    if (sumquantity >= 2) {
                                        toastr.options = { "newestOnTop": true, "showMethod": "show", "hideMethod": "hide", "positionClass": "toast-top-right" };
                                        toastr["error"]("<trong>Ipad mua chỉ được 2 sản phẩm</strong>");
                                        return false;
                                    } else {
                                        if (newValue > (2 - sumquantity)) {
                                            toastr.options = { "newestOnTop": true, "showMethod": "show", "hideMethod": "hide", "positionClass": "toast-top-right" };
                                            toastr["error"]("<trong>Chỉ mua được 2 sản phẩm</strong>");
                                            return false;
                                        }

                                    }

                                } else if (rowNameGroup == "Iphone") {
                                    if (sumquantity >= 2) {
                                        toastr.options = { "newestOnTop": true, "showMethod": "show", "hideMethod": "hide", "positionClass": "toast-top-right" };
                                        toastr["error"]("<trong>Iphone mua chỉ được 2 sản phẩm</strong>");
                                        return false;
                                    } else {
                                        if (newValue > (2 - sumquantity)) {
                                            toastr.options = { "newestOnTop": true, "showMethod": "show", "hideMethod": "hide", "positionClass": "toast-top-right" };
                                            toastr["error"]("<trong>Chỉ mua được 2 sản phẩm</strong>");
                                            return false;
                                        }
                                    }

                                }




                            }
                        }
                    }
                },
            });
            hot.selectCell(0, 0, 0, 0);
        },            //#Apple 04/09/2015 
        RenderGridHr: function () {
            $('.compose-message').hide();
            $('#detail').show();
            $('#sum-total').hide();  // this kid not support dowload file
            $('#handsontableEx').css('overflow', 'hidden');

            $.get('/Requests/GetEmps', { ShopCode: '0' }, function (data) {
                dataHr = data;
                $.each(data, function (index, item) {
                    arrNameEmployHr.push(item.text);
                });
            });

            var now = new Date();
            var setting = function () {
                return {
                    //=================================Data=======
                    data: dataHrHandsontable,
                    //================================Cols=======
                    maxCols: 3,
                    minCols: 3,
                    startCols: 3,
                    minSpareCols: 0,
                    allowInsertColumn: false,
                    allowRemoveColumn: false,
                    autoColumnSize: true,
                    autoWrapCol: true,
                    columnSorting: false,
                    colWidths: 'undefined',
                    copyColsLimit: 3,
                    currentColClassName: 'currentCol', //currentCol
                    fixedColumnsLeft: 0,
                    manualColumnMove: false,
                    manualColumnResize: true,
                    viewportColumnRenderingOffset: 3,
                    sortIndicator: true,
                    //================================Rows=======
                    allowInsertRow: true,
                    allowRemoveRow: true,
                    autoRowSize: true,
                    autoWrapRow: true,
                    copyRowsLimit: 1000,
                    currentRowClassName: 'currentRow',
                    fixedRowsTop: 0,
                    manualRowMove: false,
                    manualRowResize: true,
                    rowHeaders: true,
                    minSpareRows: 10,
                    startRows: 10,
                    //viewportRowRenderingOffset : 'auto',
                    //maxRows: 'Infinity',
                    //minRows: 'Infinity',
                    //================================Oder=======
                    allowInvalid: false,
                    stretchH: 'last',
                    commentedCellClassName: 'htCommentCell',
                    comments: true,
                    contextMenu: true,
                    copyable: true,
                    customBorders: false,
                    debug: false,
                    disableVisualSelection: true,
                    enterBeginsEditingBoolean: true,
                    fillHandle: true,
                    outsideClickDeselects: true,
                    fragmentSelection: false,
                    groups: false,
                    invalidCellClassName: 'htInvalid',
                    mergeCells: false,
                    multiSelect: true,
                    noWordWrapClassName: 'htNoWrap',
                    placeholder: false,
                    placeholderCellClassName: 'htPlaceholder',
                    readOnlyCellClassName: 'htDimmed',
                    search: false,
                    trimWhitespace: true,
                    undo: true,
                    formulas: true,
                    wordWrap: true,
                    //====================================Oder ==============================================
                    colHeaders: ["Tên nhân viên", "Tiền truy", "Ghi chú"],
                    columns: [
                        { data: "name", type: 'autocomplete', source: arrNameEmployHr, strict: false, className: 'htLeft', width: 300, },
                        { data: "price", type: 'numeric', format: '0,0', width: 200, validator: Validater.money, allowInvalid: false, width: 100, },
                        { data: "ghichu", className: 'htLeft' }
                    ],
                    beforeChange: function (change, source) {
                        if (source === 'not') return;
                        for (i = 0; i < change.length; i++) {
                            var col = change[i][1], row = change[i][0];
                            if (col === 'name') {
                                var nameOld = change[i][2], nameNew = change[i][3];

                                if (nameNew !== null && nameNew !== undefined && nameNew !== "") {
                                    var timnhanvien;
                                    if (isNaN(nameNew)) {
                                        timnhanvien = $.grep(dataHr, function (item, index) {
                                            return item.text == nameNew;
                                        });
                                    } else {
                                        timnhanvien = $.grep(dataHr, function (item, index) {
                                            return item.value == nameNew;
                                        });
                                    }
                                    if (timnhanvien !== undefined && timnhanvien !== null && timnhanvien !== "" && timnhanvien.length > 0) {
                                        hot.setDataAtCell(row, 0, timnhanvien[0].text, 'not');
                                        hot.setDataAtCell(row, 1, 0, 'not');
                                        //hot.setDataAtCell(row, 2, ((now.getMonth()+1)>12 ? 12 : (now.getMonth()+1)) , 'not');
                                        //hot.setDataAtCell(row, 3, now.getFullYear(), 'not');
                                        return;
                                    } else {
                                        return false;
                                    }
                                } else {
                                    return false;
                                }
                            }
                            if (col === 'price'
                                //|| col === 'mounth' || col === 'year'
                            ) {
                                var nhanvien = hot.getDataAtCell(row, 0);
                                if (nhanvien !== "" && nhanvien !== undefined && nhanvien !== null) {
                                    return true;
                                } else {
                                    return false;
                                }
                            }
                            if (col === 'ghichu') {
                                var nhanvien = hot.getDataAtCell(row, 0);
                                if (nhanvien !== "" && nhanvien !== undefined && nhanvien !== null) {
                                    return true;
                                } else {
                                    return false;
                                }
                            }
                        }
                    },
                };
            };
            hot = new Handsontable(container, setting());
            hot.selectCell(0, 0, 0, 0);
        },               //#Hr 04/09/2015
        //▼ Add - TrungNC3 - 20/11/2017 - Up thực yêu cầu Mkts thay đổi
        RenderGridMko: function () {//====================================================ok
            $('.compose-message').hide();
            $('#detail').show();
            $('#sum-total').hide();  // not support dowload file
            $('#handsontableEx').css('overflow', 'hidden');

            var DataFormsProcessing = ['Cấp mới', 'Bảo hành'];

            $.get('/Requests/GetDevices', { type: 22 }, function (data) {
                dataProduct = data;
                $.get('/Requests/FRT_SP_Get_Data_HanMuc_Mar', { warehouseCode: '' }, function (data_Mar) { //ChuongNT3 - 24/05/2018 - Sửa check HM
                    dataLimitMkts = data_Mar; //ChuongNT3 - 24/05/2018 - Sửa check HM
                    var duplicate1 = [], duplicate2 = [], duplicate3 = [];
                    $.each(data_Mar, function (index, item) { //ChuongNT3 - 24/05/2018 - Sửa check HM
                        if (item.MaLoaiShop.toString() == "1") {
                            duplicate1.push(item.MaSP);
                            duplicate1Shop.push(item.MaShop);
                        };
                        if (item.MaLoaiShop.toString() == "2") {
                            duplicate2.push(item.MaSP);
                            duplicate2Shop.push(item.MaShop);
                        };
                        if (item.MaLoaiShop.toString() == "3") {
                            duplicate3.push(item.MaSP);
                            duplicate3Shop.push(item.MaShop);
                        };
                    });
                    duplicate1 = $.unique(duplicate1);
                    duplicate2 = $.unique(duplicate2);
                    duplicate3 = $.unique(duplicate3);
                    if (!!warehouseCodeB1_Sender) {
                        $.get('/Requests/GetShopByRegion', { regionId: 0 }, function (response) {
                            if (!!response) {
                                arrNameProduct = [];
                                dataShopByASM = $.grep(response, function (item, index) {
                                    return item.WarehouseCodeB1 === warehouseCodeB1_Sender;
                                });
                                $.each(dataShopByASM, function (index, item) {
                                    dataShopByASMName.push(item.WarehouseName);
                                    dataMkoHandsontable = [{ ShopCode: item.WarehouseName }];
                                    //▼ Add - TrungNC3 - 10/11/2017 - Load san pham theo shop


                                    var dataProductNotConfig = $.grep(dataProduct, function (item, index) {
                                        return $.inArray(item.ItemId.toString(), duplicate1) === -1
                                            && $.inArray(item.ItemId.toString(), duplicate2) === -1
                                            && $.inArray(item.ItemId.toString(), duplicate3) === -1;
                                    });
                                    $.each(dataProductNotConfig, function (index, item) {
                                        arrNameProduct.push(item.ItemName);
                                    });
                                    if (!!response && response.length > 0) {
                                        var dataLoaiShop = $.grep(dataLimitMkts, function (item, index) {
                                            return item.MaShop == warehouseCodeB1_Sender;
                                        });
                                        if (!!dataLoaiShop && dataLoaiShop.length > 0) {
                                            var dataProductConfig = [];
                                            if (dataLoaiShop[0].MaLoaiShop === "1") {
                                                dataProductConfig = $.grep(dataProduct, function (item, index) {
                                                    return $.inArray(item.ItemId.toString(), duplicate1) !== -1;
                                                });
                                            };
                                            if (dataLoaiShop[0].MaLoaiShop === "2") {
                                                dataProductConfig = $.grep(dataProduct, function (item, index) {
                                                    return $.inArray(item.ItemId.toString(), duplicate2) !== -1;
                                                });
                                            };
                                            if (dataLoaiShop[0].MaLoaiShop === "3") {
                                                dataProductConfig = $.grep(dataProduct, function (item, index) {
                                                    return $.inArray(item.ItemId.toString(), duplicate3) !== -1;
                                                });
                                            };
                                            $.each(dataProductConfig, function (index, item) {
                                                arrNameProduct.push(item.ItemName);
                                            });
                                        };
                                    };
                                    //▲ Add - TrungNC3 - 10/11/2017 - Load san pham theo shop
                                    var setting = function () {
                                        return {
                                            //=================================Data=======
                                            data: dataMkoHandsontable,
                                            //================================Cols=======
                                            maxCols: 9,
                                            minCols: 9,
                                            startCols: 9,
                                            minSpareCols: 0,
                                            allowInsertColumn: false,
                                            allowRemoveColumn: false,
                                            autoColumnSize: true,
                                            autoWrapCol: true,
                                            columnSorting: false,
                                            colWidths: 'undefined',
                                            copyColsLimit: 8,
                                            currentColClassName: 'currentCol', //currentCol
                                            fixedColumnsLeft: 0,
                                            manualColumnMove: false,
                                            manualColumnResize: true,
                                            viewportColumnRenderingOffset: 8,
                                            sortIndicator: true,
                                            //================================Rows=======
                                            allowInsertRow: true,
                                            allowRemoveRow: true,
                                            autoRowSize: true,
                                            autoWrapRow: true,
                                            copyRowsLimit: 1000,
                                            currentRowClassName: 'currentRow',
                                            fixedRowsTop: 0,
                                            manualRowMove: false,
                                            manualRowResize: true,
                                            rowHeaders: true,
                                            minSpareRows: 10,
                                            startRows: 10,
                                            //viewportRowRenderingOffset : 'auto',
                                            //maxRows: 'Infinity',
                                            //minRows: 'Infinity',
                                            //================================Oder=======
                                            allowInvalid: false,
                                            stretchH: 'all',
                                            commentedCellClassName: 'htCommentCell',
                                            comments: true,
                                            contextMenu: true,
                                            copyable: true,
                                            customBorders: false,
                                            debug: false,
                                            disableVisualSelection: true,
                                            enterBeginsEditingBoolean: true,
                                            fillHandle: true,
                                            outsideClickDeselects: true,
                                            fragmentSelection: false,
                                            groups: false,
                                            invalidCellClassName: 'htInvalid',
                                            mergeCells: false,
                                            multiSelect: true,
                                            noWordWrapClassName: 'htNoWrap',
                                            placeholder: false,
                                            placeholderCellClassName: 'htPlaceholder',
                                            readOnlyCellClassName: 'htDimmed',
                                            search: false,
                                            trimWhitespace: true,
                                            undo: true,
                                            formulas: true,
                                            wordWrap: true,
                                            //====================================Oder ==============================================
                                            colHeaders: ["Shop", "Tên mặt hàng", "Nhóm hàng", "Số lượng", "Đơn giá", "Thành tiền", "Đ.V tính", "Hình thức xử lý", "Ghi chú"],
                                            columns: [
                                                { data: "ShopCode", type: 'autocomplete', source: dataShopByASMName, strict: false, className: 'htLeft', width: 250 },
                                                { data: "ItemName", type: 'autocomplete', source: arrNameProduct, strict: false, className: 'htLeft', width: 250 },
                                                { data: "GroupName", readOnly: true, className: 'htLeft' },
                                                { data: "soluongdat", type: 'numeric', format: '0,0', validator: Validater.quantity, allowInvalid: false, },
                                                {
                                                    data: "Price", type: 'numeric', format: '0,0', readOnly: true,
                                                    renderer: function (instance, td, row, col, prop, value) {
                                                        if (col === 4 && row === dataMkoHandsontable.length - 1) {
                                                            td.style.fontWeight = 'bold';
                                                            td.style.textAlign = 'right';
                                                            td.style.color = 'green';
                                                            value = 'Tổng tiền:';
                                                        }
                                                        Handsontable.NumericRenderer.apply(this, arguments);
                                                    }, width: 90,
                                                },
                                                {
                                                    data: "thanhtien", type: 'numeric', format: '0,0', readOnly: true,
                                                    renderer: function (instance, td, row, col, prop, value) {
                                                        if (col === 5 && row === dataMkoHandsontable.length - 1) {
                                                            td.style.fontWeight = 'bold';
                                                            td.style.color = 'green';
                                                            sum = 0;
                                                            $.each(dataMkoHandsontable, function (index, item) {
                                                                if (item.thanhtien !== "" && item.thanhtien !== undefined && item.thanhtien !== null && !isNaN(item.thanhtien)) {
                                                                    sum += item.thanhtien;
                                                                } else {
                                                                    sum += 0;
                                                                }
                                                            });
                                                            value = sum;
                                                        }
                                                        Handsontable.NumericRenderer.apply(this, arguments);
                                                    }
                                                },
                                                { data: "Unit", className: 'htLeft', readOnly: true },
                                                { data: "FormsProcessing", type: 'dropdown', source: DataFormsProcessing, className: 'htLeft' },
                                                { data: "ghichu", className: 'htLeft' }
                                            ],
                                            afterRemoveRow: function (index, amount) {
                                                hot.updateSettings({
                                                    cells: function (row, col, prop) {
                                                        var cellProperties = {};

                                                        if (row === dataMkoHandsontable.length - 1) {
                                                            cellProperties.readOnly = false;
                                                        }

                                                        return cellProperties;

                                                    }
                                                });
                                            },
                                            cells: function (row, col, prop) {
                                                var cellProperties = {};

                                                if (row === dataMkoHandsontable.length - 1) {
                                                    cellProperties.readOnly = false;
                                                }

                                                return cellProperties;

                                            },
                                            beforeChange: function (change, source) {
                                                if (source === 'not') return;
                                                for (i = 0, len = change.length; i < len; i++) {
                                                    var row = change[i][0], col = change[i][1];
                                                    if (col === 'ItemName') {
                                                        var thietbiCu = change[i][2], thietbi = change[i][3];
                                                        var shopcode = hot.getDataAtRowProp(row, 'ShopCode')
                                                        if (shopcode === undefined || shopcode === "" || shopcode === null) {
                                                            XFunction.RenderMessage('error', 'Vui lòng chọn shop trước khi chọn sản phẩm');
                                                            return false;
                                                        }
                                                        var colls = hot.getDataAtCol(1);
                                                        var trung = $.grep(colls, function (item, index) {
                                                            return item == thietbi
                                                                && item !== "" && item !== null && item !== undefined
                                                                && thietbiCu != thietbi;
                                                        });
                                                        if (trung.length > 0) {
                                                            XFunction.RenderMessage('error', 'Đã tồn tại sản phẩm này trên lưới..vui lòng chọn sản phẩm khác');
                                                            return false;
                                                        }
                                                        else {
                                                            if (thietbi !== undefined && thietbi !== "" && thietbi !== null) {
                                                                var timthietbi = $.grep(dataProduct, function (item, index) { return item.ItemName === thietbi; });

                                                                if (timthietbi !== undefined && timthietbi !== null && timthietbi !== "" && timthietbi.length > 0) {
                                                                    hot.setDataAtCell(row, 2, timthietbi[0].GroupName, 'not');
                                                                    hot.setDataAtCell(row, 3, 0, 'not');
                                                                    hot.setDataAtCell(row, 4, timthietbi[0].Price, 'not');
                                                                    hot.setDataAtCell(row, 5, 0, 'not'),
                                                                        hot.setDataAtCell(row, 6, timthietbi[0].Unit, 'not'),
                                                                        hot.setDataAtCell(row, 7, DataFormsProcessing[0], 'not'),//Add - TrungNC3 - 01/12/2017 - điều chỉnh mặc định là Cấp mới trong calllog mkts
                                                                        hot.setDataAtCell(row, 8, "", 'not');

                                                                    hot.selectCell(row, 3, row, 3);

                                                                    hot.updateSettings({
                                                                        cells: function (row, col, prop) {
                                                                            var cellProperties = {};

                                                                            if (row === dataMkoHandsontable.length - 1) {
                                                                                cellProperties.readOnly = false;
                                                                            }

                                                                            return cellProperties;

                                                                        }
                                                                    });

                                                                    return true;
                                                                } else {
                                                                    return false;
                                                                }
                                                            }
                                                        }
                                                    }
                                                    if (col === 'soluongdat') {
                                                        var thietbi = hot.getDataAtCell(row, 1);
                                                        if (thietbi !== "" && thietbi !== undefined && thietbi !== null) {
                                                            var a = change[i][3], b = hot.getDataAtCell(row, 4);
                                                            if (a === "" || a === undefined || isNaN(a) || a === null) {
                                                                a = 0;
                                                                hot.setDataAtCell(row, 3, 0, 'not');
                                                            }
                                                            if (b === "" || b === undefined || isNaN(b) || b === null) {
                                                                b = 0;
                                                                hot.setDataAtCell(row, 4, 0, 'not');
                                                            }
                                                            var rs = Math.ceil(a * b);
                                                            if (!isNaN(rs) && rs !== undefined && rs !== null && rs !== "")
                                                                hot.setDataAtCell(row, 5, rs, 'not');
                                                            else
                                                                hot.setDataAtCell(row, 5, 0, 'not');

                                                            //hot.selectCell(row + 1, 0, row + 1, 0);
                                                            return true;
                                                        } else {
                                                            // hot.selectCell(row, 0, row, 0);
                                                            return false;
                                                        }

                                                    }
                                                    if (col === 'FormsProcessing') {
                                                        var item = hot.getDataAtRowProp(row, 'ItemName');
                                                        if (item !== "" && item !== undefined && item !== null) {
                                                            return true;
                                                        } else {
                                                            hot.selectCell(row, 1, row, 1);
                                                            return false;
                                                        }
                                                    }
                                                    if (col === 'ghichu') {
                                                        var thietbi = hot.getDataAtCell(row, 1);
                                                        if (thietbi !== "" && thietbi !== undefined && thietbi !== null) {
                                                            //hot.selectCell(row, 0, row, 0);
                                                            return true;
                                                        } else {
                                                            hot.selectCell(row, 1, row, 1);
                                                            //return false;
                                                        }
                                                    }
                                                }
                                            },
                                            afterChange: function (changes, source) {
                                                if (!changes) {
                                                    return;
                                                }
                                                var instance = this;
                                                changes.forEach(function (change) {
                                                    var row = change[0];
                                                    var col = change[1];
                                                    var newValue = change[3];
                                                    var oldValue = change[2]; // ChuongNT3 - 11/10/2017 - bắt vượt hạn mức
                                                    var cellProperties, options;
                                                    //▼ Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                                                    if (col == "soluongdat") {
                                                        if (!!newValue && newValue > 0) {
                                                            var shopcode = hot.getDataAtRowProp(row, 'ShopCode');
                                                            hot.setDataAtCell(row + 1, 0, shopcode, 'not');
                                                        }
                                                        //▼ ChuongNT3 - 23/05/2018 - bắt vượt hạn mức
                                                        var dateNow = new Date(); //ChuongNT3 - 23/05/2018 - Sửa ngày
                                                        var ngay = dateNow.getDate();
                                                        var thang = ngay < 16 ? dateNow.getMonth() : (dateNow.getMonth() + 1);
                                                        var sp = hot.getDataAtRowProp(row, 'ItemName');
                                                        var sp_1 = sp.split('-')[0].trim();
                                                        var sp_HM = $.grep(dataLimitMkts, function (item, index) {
                                                            return item.MaSP == sp_1 && item.MaShop == warehouseCodeB1_Sender
                                                        });
                                                        if (sp_HM != null && sp_HM != '' && sp_HM != undefined) {
                                                            var e = sp_HM[0].GiaTri;
                                                            if (e < newValue) {
                                                                XFunction.RenderMessage('error', 'Số lượng đặt mặt hàng ' + sp.split('-')[1].trim() + ' không được phép lớn hơn hạn mức sản phẩm tháng của shop</br>Hạn mức tháng ' + thang + '  của sản phẩm này là ' + e);
                                                                hot.setDataAtRowProp(row, 'soluongdat', oldValue)
                                                                return;
                                                            }
                                                        }
                                                        //▲ ChuongNT3 - 23/05/2018 - bắt vượt hạn mức
                                                    }
                                                    //▼ Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                                                });
                                            },
                                        };
                                    };
                                    hot = new Handsontable(container, setting());
                                    hot.selectCell(0, 0, 0, 0);
                                });
                            };
                        });
                    }
                    else {
                        $.get('/Requests/Inside_LayDSShopTheoASM', { EmployeeCode: '' }, function (response) {
                            if (!!response) {
                                dataShopByASM = response;
                                var ShopCode = ''; //ChuongNT3 - 24/05/2018 - Sửa check HM
                                $.each(dataShopByASM, function (index, item) {
                                    dataShopByASMName.push(item.WarehouseName);
                                });
                                var setting1 = function () {
                                    return {
                                        //=================================Data=======
                                        data: dataMkoHandsontable,
                                        //================================Cols=======
                                        maxCols: 9,
                                        minCols: 9,
                                        startCols: 9,
                                        minSpareCols: 0,
                                        allowInsertColumn: false,
                                        allowRemoveColumn: false,
                                        autoColumnSize: true,
                                        autoWrapCol: true,
                                        columnSorting: false,
                                        colWidths: 'undefined',
                                        copyColsLimit: 8,
                                        currentColClassName: 'currentCol', //currentCol
                                        fixedColumnsLeft: 0,
                                        manualColumnMove: false,
                                        manualColumnResize: true,
                                        viewportColumnRenderingOffset: 8,
                                        sortIndicator: true,
                                        //================================Rows=======
                                        allowInsertRow: true,
                                        allowRemoveRow: true,
                                        autoRowSize: true,
                                        autoWrapRow: true,
                                        copyRowsLimit: 1000,
                                        currentRowClassName: 'currentRow',
                                        fixedRowsTop: 0,
                                        manualRowMove: false,
                                        manualRowResize: true,
                                        rowHeaders: true,
                                        minSpareRows: 10,
                                        startRows: 10,
                                        //viewportRowRenderingOffset : 'auto',
                                        //maxRows: 'Infinity',
                                        //minRows: 'Infinity',
                                        //================================Oder=======
                                        allowInvalid: false,
                                        stretchH: 'all',
                                        commentedCellClassName: 'htCommentCell',
                                        comments: true,
                                        contextMenu: true,
                                        copyable: true,
                                        customBorders: false,
                                        debug: false,
                                        disableVisualSelection: true,
                                        enterBeginsEditingBoolean: true,
                                        fillHandle: true,
                                        outsideClickDeselects: true,
                                        fragmentSelection: false,
                                        groups: false,
                                        invalidCellClassName: 'htInvalid',
                                        mergeCells: false,
                                        multiSelect: true,
                                        noWordWrapClassName: 'htNoWrap',
                                        placeholder: false,
                                        placeholderCellClassName: 'htPlaceholder',
                                        readOnlyCellClassName: 'htDimmed',
                                        search: false,
                                        trimWhitespace: true,
                                        undo: true,
                                        formulas: true,
                                        wordWrap: true,
                                        //====================================Oder ==============================================
                                        colHeaders: ["Shop", "Tên mặt hàng", "Nhóm hàng", "Số lượng", "Đơn giá", "Thành tiền", "Đ.V tính", "Hình thức xử lý", "Ghi chú"],
                                        columns: [
                                            { data: "ShopCode", type: 'autocomplete', source: dataShopByASMName, strict: false, className: 'htLeft', width: 250 },
                                            { data: "ItemName", type: 'autocomplete', source: [], className: 'htLeft', width: 250 },
                                            { data: "GroupName", readOnly: true, className: 'htLeft' },
                                            { data: "soluongdat", type: 'numeric', format: '0,0', validator: Validater.quantity, allowInvalid: false, },
                                            {
                                                data: "Price", type: 'numeric', format: '0,0', readOnly: true,
                                                renderer: function (instance, td, row, col, prop, value) {
                                                    if (col === 4 && row === dataMkoHandsontable.length - 1) {
                                                        td.style.fontWeight = 'bold';
                                                        td.style.textAlign = 'right';
                                                        td.style.color = 'green';
                                                        value = 'Tổng tiền:';
                                                    }
                                                    Handsontable.NumericRenderer.apply(this, arguments);
                                                }, width: 90,
                                            },
                                            {
                                                data: "thanhtien", type: 'numeric', format: '0,0', readOnly: true,
                                                renderer: function (instance, td, row, col, prop, value) {
                                                    if (col === 5 && row === dataMkoHandsontable.length - 1) {
                                                        td.style.fontWeight = 'bold';
                                                        td.style.color = 'green';
                                                        sum = 0;
                                                        $.each(dataMkoHandsontable, function (index, item) {
                                                            if (item.thanhtien !== "" && item.thanhtien !== undefined && item.thanhtien !== null && !isNaN(item.thanhtien)) {
                                                                sum += item.thanhtien;
                                                            } else {
                                                                sum += 0;
                                                            }
                                                        });
                                                        value = sum;
                                                    }
                                                    Handsontable.NumericRenderer.apply(this, arguments);
                                                }
                                            },
                                            { data: "Unit", className: 'htLeft', readOnly: true },
                                            { data: "FormsProcessing", type: 'dropdown', source: DataFormsProcessing, className: 'htLeft' },
                                            { data: "ghichu", className: 'htLeft' }
                                        ],
                                        afterRemoveRow: function (index, amount) {
                                            hot.updateSettings({
                                                cells: function (row, col, prop) {
                                                    var cellProperties = {};

                                                    if (row === dataMkoHandsontable.length - 1) {
                                                        cellProperties.readOnly = false;
                                                    }

                                                    return cellProperties;

                                                }
                                            });
                                        },
                                        cells: function (row, col, prop) {
                                            var cellProperties = {};

                                            if (row === dataMkoHandsontable.length - 1) {
                                                cellProperties.readOnly = false;
                                            }

                                            return cellProperties;

                                        },
                                        beforeChange: function (change, source) {
                                            if (source === 'not') return;
                                            for (i = 0, len = change.length; i < len; i++) {
                                                var row = change[i][0], col = change[i][1];
                                                if (col === 'ItemName') {
                                                    var thietbiCu = change[i][2], thietbi = change[i][3];
                                                    var shopcode = hot.getDataAtRowProp(row, 'ShopCode');
                                                    if (shopcode === undefined || shopcode === "" || shopcode === null) {
                                                        XFunction.RenderMessage('error', 'Vui lòng chọn shop trước khi chọn sản phẩm');
                                                        return false;
                                                    }
                                                    var colls = hot.getDataAtCol(1);
                                                    var trung = $.grep(colls, function (item, index) {
                                                        return item == thietbi
                                                            && item !== "" && item !== null && item !== undefined
                                                            && thietbiCu != thietbi;
                                                    });
                                                    if (trung.length > 0) {
                                                        XFunction.RenderMessage('error', 'Đã tồn tại sản phẩm này trên lưới..vui lòng chọn sản phẩm khác');
                                                        return false;
                                                    }
                                                    else {
                                                        if (thietbi !== undefined && thietbi !== "" && thietbi !== null) {
                                                            var timthietbi = $.grep(dataProduct, function (item, index) { return item.ItemName === thietbi; });

                                                            if (timthietbi !== undefined && timthietbi !== null && timthietbi !== "" && timthietbi.length > 0) {
                                                                hot.setDataAtCell(row, 2, timthietbi[0].GroupName, 'not');
                                                                hot.setDataAtCell(row, 3, 0, 'not');
                                                                hot.setDataAtCell(row, 4, timthietbi[0].Price, 'not');
                                                                hot.setDataAtCell(row, 5, 0, 'not'),
                                                                    hot.setDataAtCell(row, 6, timthietbi[0].Unit, 'not'),
                                                                    hot.setDataAtCell(row, 7, DataFormsProcessing[0], 'not'),//Add - TrungNC3 - 01/12/2017 - điều chỉnh mặc định là Cấp mới trong calllog mkts
                                                                    hot.setDataAtCell(row, 8, "", 'not');

                                                                hot.selectCell(row, 3, row, 3);

                                                                hot.updateSettings({
                                                                    cells: function (row, col, prop) {
                                                                        var cellProperties = {};

                                                                        if (row === dataMkoHandsontable.length - 1) {
                                                                            cellProperties.readOnly = false;
                                                                        }

                                                                        return cellProperties;

                                                                    }
                                                                });

                                                                return true;
                                                            } else {
                                                                return false;
                                                            }
                                                        }
                                                    }
                                                }
                                                if (col === 'soluongdat') {
                                                    var thietbi = hot.getDataAtCell(row, 1);
                                                    if (thietbi !== "" && thietbi !== undefined && thietbi !== null) {
                                                        var a = change[i][3], b = hot.getDataAtCell(row, 4);
                                                        if (a === "" || a === undefined || isNaN(a) || a === null) {
                                                            a = 0;
                                                            hot.setDataAtCell(row, 3, 0, 'not');
                                                        }
                                                        if (b === "" || b === undefined || isNaN(b) || b === null) {
                                                            b = 0;
                                                            hot.setDataAtCell(row, 4, 0, 'not');
                                                        }
                                                        var rs = Math.ceil(a * b);
                                                        if (!isNaN(rs) && rs !== undefined && rs !== null && rs !== "")
                                                            hot.setDataAtCell(row, 5, rs, 'not');
                                                        else
                                                            hot.setDataAtCell(row, 5, 0, 'not');

                                                        //hot.selectCell(row + 1, 0, row + 1, 0);
                                                        return true;
                                                    } else {
                                                        // hot.selectCell(row, 0, row, 0);
                                                        return false;
                                                    }

                                                }
                                                if (col === 'FormsProcessing') {
                                                    var item = hot.getDataAtRowProp(row, 'ItemName');
                                                    if (item !== "" && item !== undefined && item !== null) {
                                                        return true;
                                                    } else {
                                                        hot.selectCell(row, 1, row, 1);
                                                        return false;
                                                    }
                                                }
                                                if (col === 'ghichu') {
                                                    var thietbi = hot.getDataAtCell(row, 1);
                                                    if (thietbi !== "" && thietbi !== undefined && thietbi !== null) {
                                                        //hot.selectCell(row, 0, row, 0);
                                                        return true;
                                                    } else {
                                                        hot.selectCell(row, 1, row, 1);
                                                        //return false;
                                                    }
                                                }
                                            }
                                        },
                                        afterChange: function (changes, source) {
                                            if (!changes) {
                                                return;
                                            }
                                            var instance = this;
                                            changes.forEach(function (change) {
                                                var row = change[0];
                                                var col = change[1];
                                                var newValue = change[3];
                                                var oldValue = change[2]; //ChuongNT3 - 24/05/2018 - Sửa check HM
                                                var cellProperties, options;
                                                //▼ Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                                                if (col == "ShopCode") {
                                                    if (!!newValue) {
                                                        arrNameProduct = [];
                                                        var dataProductNotConfig = $.grep(dataProduct, function (item, index) {
                                                            return $.inArray(item.ItemId.toString(), duplicate1) === -1
                                                                && $.inArray(item.ItemId.toString(), duplicate2) === -1
                                                                && $.inArray(item.ItemId.toString(), duplicate3) === -1;
                                                        });
                                                        $.each(dataProductNotConfig, function (index, item) {
                                                            arrNameProduct.push(item.ItemName);
                                                        });
                                                        var dataShopChon = $.grep(response, function (item, index) {
                                                            return item.WarehouseName === newValue;
                                                        });
                                                        ////ChuongNT3 - 24/05/2018 - Sửa check HM
                                                        ShopCode = dataShopChon[0].WarehouseCode
                                                        $.get('/Requests/FRT_SP_Get_Data_HanMuc_Mar', { warehouseCode: ShopCode }, function (data_Mar1) {
                                                            dataLimitMkts = data_Mar1;
                                                            $.each(data_Mar1, function (index, item) {
                                                                if (item.MaLoaiShop.toString() == "1") {
                                                                    duplicate1.push(item.MaSP);
                                                                    duplicate1Shop.push(item.MaShop);
                                                                };
                                                                if (item.MaLoaiShop.toString() == "2") {
                                                                    duplicate2.push(item.MaSP);
                                                                    duplicate2Shop.push(item.MaShop);
                                                                };
                                                                if (item.MaLoaiShop.toString() == "3") {
                                                                    duplicate3.push(item.MaSP);
                                                                    duplicate3Shop.push(item.MaShop);
                                                                };
                                                            });
                                                        });
                                                        ////ChuongNT3 - 24/05/2018 - Sửa check HM
                                                        if (!!dataShopChon && dataShopChon.length > 0) {
                                                            var dataLoaiShop = $.grep(dataLimitMkts, function (item, index) {
                                                                return item.MaShop == dataShopChon[0].WarehouseCodeB1;
                                                            });
                                                            if (!!dataLoaiShop && dataLoaiShop.length > 0) {
                                                                var dataProductConfig = [];
                                                                if (dataLoaiShop[0].MaLoaiShop === "1") {
                                                                    dataProductConfig = $.grep(dataProduct, function (item, index) {
                                                                        return $.inArray(item.ItemId.toString(), duplicate1) !== -1;
                                                                    });
                                                                };
                                                                if (dataLoaiShop[0].MaLoaiShop === "2") {
                                                                    dataProductConfig = $.grep(dataProduct, function (item, index) {
                                                                        return $.inArray(item.ItemId.toString(), duplicate2) !== -1;
                                                                    });
                                                                };
                                                                if (dataLoaiShop[0].MaLoaiShop === "3") {
                                                                    dataProductConfig = $.grep(dataProduct, function (item, index) {
                                                                        return $.inArray(item.ItemId.toString(), duplicate3) !== -1;
                                                                    });
                                                                };
                                                                $.each(dataProductConfig, function (index, item) {
                                                                    arrNameProduct.push(item.ItemName);
                                                                });
                                                                if (!!arrNameProduct && arrNameProduct.length > 0) {
                                                                    cellProperties = instance.getCellMeta(row, 1);
                                                                    cellProperties.source = arrNameProduct;
                                                                }
                                                            }////ChuongNT3 - 24/05/2018 - Sửa check HM
                                                            else {
                                                                cellProperties = instance.getCellMeta(row, 1);
                                                                cellProperties.source = arrNameProduct;
                                                                ////ChuongNT3 - 24/05/2018 - Sửa check HM
                                                            };
                                                        };
                                                    };
                                                };
                                                if (col == "soluongdat") {
                                                    if (!!newValue && newValue > 0) {
                                                        var shopcode = hot.getDataAtRowProp(row, 'ShopCode');
                                                        hot.setDataAtCell(row + 1, 0, shopcode, 'not');
                                                    }
                                                    //▼ //ChuongNT3 - 24/05/2018 - Sửa check HM
                                                    var dateNow = new Date(); //ChuongNT3 - 23/05/2018 - Sửa ngày
                                                    var ngay = dateNow.getDate();
                                                    var thang = ngay < 16 ? dateNow.getMonth() : (dateNow.getMonth() + 1);
                                                    var sp = hot.getDataAtRowProp(row, 'ItemName');
                                                    var sp_1 = sp.split('-')[0].trim();
                                                    var sp_HM = $.grep(dataLimitMkts, function (item, index) {
                                                        return item.MaSP == sp_1 && item.MaShop == ShopCode
                                                    });
                                                    if (sp_HM != null && sp_HM != '' && sp_HM != undefined) {
                                                        var e = sp_HM[0].GiaTri;
                                                        if (e < newValue) {
                                                            XFunction.RenderMessage('error', 'Số lượng đặt mặt hàng ' + sp.split('-')[1].trim() + ' không được phép lớn hơn hạn mức sản phẩm tháng của shop</br>Hạn mức tháng ' + thang + '  của sản phẩm này là ' + e);
                                                            hot.setDataAtRowProp(row, 'soluongdat', oldValue)
                                                            return;
                                                        }
                                                    }
                                                    //▲ //ChuongNT3 - 24/05/2018 - Sửa check HM
                                                }
                                                //▼ Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                                            });
                                        },
                                    };
                                };
                                hot = new Handsontable(container, setting1());
                                hot.selectCell(0, 0, 0, 0);
                            };
                        });
                    };
                });
            });
        },
        //▲ Add - TrungNC3 - 20/11/2017 - Up thực yêu cầu Mkts thay đổi
        //______________HienDT23 Mkt - Mkt tạo 20/01/2015
        RenderGridMkoMko: function () {//====================================================ok
            $('.compose-message').hide();
            $('#detail').show();
            $('#sum-total').hide();  // not support dowload file
            $('#handsontableEx').css('overflow', 'hidden');
            $areaDowloadAndImport.show();
            $.get('/Requests/GetDevices', { type: 22 }, function (data) {
                dataProduct_115 = data;
                $.each(data, function (index, item) {
                    arrNameProduct_115.push(item.ItemName);
                });
            });
            $.get('/Requests/GetShopByRegion', { regionId: 0 }, function (data) {
                dataDept_115 = data;
                $.each(data, function (index, item) {
                    arrNameShopDept.push(item.WarehouseCode + '--' + item.WarehouseCodeB1 + '--' + item.WarehouseName);
                });
            });
            $.get('/Requests/GetLimitedValue', { type: 22 }, function (data) {
                dataLimitedMkoMko = data;
            });

            var DataFormsProcessing = ['Cấp mới', 'Bảo hành'];
            var setting = function () {
                return {
                    //=================================Data=======
                    data: dataMkoMkoHandsontable,
                    //================================Cols=======
                    maxCols: 9,
                    minCols: 9,
                    startCols: 9,
                    minSpareCols: 0,
                    allowInsertColumn: false,
                    allowRemoveColumn: false,
                    autoColumnSize: true,
                    autoWrapCol: true,
                    columnSorting: false,
                    colWidths: 'undefined',
                    copyColsLimit: 9,
                    currentColClassName: 'currentCol', //currentCol
                    fixedColumnsLeft: 0,
                    manualColumnMove: false,
                    manualColumnResize: true,
                    viewportColumnRenderingOffset: 9,
                    sortIndicator: true,
                    //================================Rows=======
                    allowInsertRow: true,
                    allowRemoveRow: true,
                    autoRowSize: true,
                    autoWrapRow: true,
                    copyRowsLimit: 1000,
                    currentRowClassName: 'currentRow',
                    fixedRowsTop: 0,
                    manualRowMove: false,
                    manualRowResize: true,
                    rowHeaders: true,
                    minSpareRows: 5,
                    startRows: 10,
                    //viewportRowRenderingOffset : 'auto',
                    //maxRows: dataMkoMkoHandsontable+1,
                    //minRows: dataMkoMkoHandsontable+1,
                    //================================Oder=======
                    allowInvalid: false,
                    stretchH: 'all',
                    commentedCellClassName: 'htCommentCell',
                    comments: true,
                    contextMenu: true,
                    copyable: true,
                    customBorders: false,
                    debug: false,
                    disableVisualSelection: true,
                    enterBeginsEditingBoolean: true,
                    fillHandle: true,
                    outsideClickDeselects: true,
                    fragmentSelection: false,
                    groups: false,
                    invalidCellClassName: 'htInvalid',
                    mergeCells: false,
                    multiSelect: true,
                    noWordWrapClassName: 'htNoWrap',
                    placeholder: false,
                    placeholderCellClassName: 'htPlaceholder',
                    readOnlyCellClassName: 'htDimmed',
                    search: false,
                    trimWhitespace: true,
                    undo: true,
                    formulas: true,
                    wordWrap: true,
                    //====================================Oder ==============================================
                    colHeaders: ["Shop", "Tên mặt hàng", "Nhóm hàng", "Số lượng", "Đơn giá", "Thành tiền", "Đ.V tính", "Hình thức xử lý", "Ghi chú"],
                    columns: [
                        { data: "ShopCode", type: 'autocomplete', source: arrNameShopDept, strict: false, className: 'htLeft', width: 300 },
                        { data: "ItemName", type: 'autocomplete', source: arrNameProduct_115, strict: false, className: 'htLeft', width: 300 },
                        { data: "GroupName", readOnly: true, className: 'htLeft' },
                        { data: "Quantity", type: 'numeric', format: '0,0', validator: Validater.quantity, allowInvalid: false, },
                        {
                            data: "Price", type: 'numeric', format: '0,0', readOnly: true,
                            renderer: function (instance, td, row, col, prop, value) {
                                if (col === 4 && row === dataMkoMkoHandsontable.length - 1) {
                                    td.style.fontWeight = 'bold';
                                    td.style.textAlign = 'right';
                                    td.style.color = 'green';
                                    value = 'Tổng tiền:';
                                }
                                Handsontable.NumericRenderer.apply(this, arguments);
                            }, width: 90,
                        },
                        {
                            data: "Sum", type: 'text',
                            format: '0,0', readOnly: true,
                            renderer: function (instance, td, row, col, prop, value) {
                                if (col === 5 && row === dataMkoMkoHandsontable.length - 1) {
                                    td.style.fontWeight = 'bold';
                                    td.style.color = 'green';
                                    sum = 0;
                                    $.each(dataMkoMkoHandsontable, function (index, item) {
                                        if (item.Sum !== "" && item.Sum !== undefined && item.Sum !== null && !isNaN(item.Sum)) {
                                            sum += parseInt(item.Sum);
                                        } else {
                                            sum += 0;
                                        }
                                    });
                                    value = sum;
                                }
                                Handsontable.NumericRenderer.apply(this, arguments);
                            }
                        },
                        { data: "Unit", className: 'htLeft', readOnly: true },
                        { data: "FormsProcessing", type: 'dropdown', source: DataFormsProcessing, className: 'htLeft' },
                        { data: "Note", className: 'htLeft' }
                    ],
                    afterRemoveRow: function (index, amount) {
                        hot.updateSettings({
                            cells: function (row, col, prop) {
                                var cellProperties = {};

                                if (row === dataMkoMkoHandsontable.length - 1) {
                                    cellProperties.readOnly = false;
                                }

                                return cellProperties;

                            }
                        });
                    },
                    cells: function (row, col, prop) {
                        var cellProperties = {};

                        if (row === dataMkoMkoHandsontable.length - 1) {
                            cellProperties.readOnly = false;
                        }

                        return cellProperties;

                    },
                    beforeChange: function (change, source) {
                        if (source === 'not') return;
                        for (i = 0, len = change.length; i < len; i++) {
                            var row = change[i][0], col = change[i][1];
                            var newValue = change[3];
                            if (col === 'ShopCode') {
                                var Shop = change[i][3];

                                var rows = hot.getDataAtRow(row);

                                var ShopOl = hot.getDataAtRowProp(row, 'ShopCode');
                                var Item = hot.getDataAtRowProp(row, 'ItemName');
                                var colls = $.grep(hot.getData(), function (item, index) {
                                    return item.ItemName !== null && item.ItemName !== undefined
                                        && item.ItemName !== '' && item.ItemName == Item;
                                });
                                if (colls.length > 1) {
                                    hot.setDataAtRowProp(row, 'ShopCode', ShopOl, 'not');
                                    hot.setDataAtRowProp(row, 'ItemName', '', 'not');
                                    hot.setDataAtRowProp(row, 'GroupName', '', 'not');
                                    hot.setDataAtRowProp(row, 'Quantity', '', 'not');
                                    hot.setDataAtRowProp(row, 'Price', '', 'not');
                                    hot.setDataAtRowProp(row, 'Sum', '', 'not');
                                    hot.setDataAtRowProp(row, 'Unit', '', 'not');
                                    hot.setDataAtRowProp(row, 'FormsProcessing', '', 'not');
                                    hot.setDataAtRowProp(row, 'Note', '', 'not');
                                    return false;
                                }

                                if (Shop !== undefined && Shop !== "" && Shop !== null) {
                                    var timShop = $.grep(dataDept_115, function (item, index) { return (item.WarehouseCode + '--' + item.WarehouseCodeB1 + '--' + item.WarehouseName) === Shop; });

                                    if (timShop !== undefined && timShop !== null && timShop !== "" && timShop.length > 0) {

                                        hot.updateSettings({
                                            cells: function (row, col, prop) {
                                                var cellProperties = {};

                                                if (row === dataMkoMkoHandsontable.length - 1) {
                                                    cellProperties.readOnly = false;
                                                }

                                                return cellProperties;

                                            }
                                        });

                                        return true;
                                    } else {
                                        return false;
                                    }
                                }
                                else {
                                    hot.setDataAtRowProp(row, 'ItemName', '', 'not');
                                    hot.setDataAtRowProp(row, 'GroupName', '', 'not');
                                    hot.setDataAtRowProp(row, 'Quantity', '', 'not');
                                    hot.setDataAtRowProp(row, 'Price', '', 'not');
                                    hot.setDataAtRowProp(row, 'Sum', '', 'not');
                                    hot.setDataAtRowProp(row, 'Unit', '', 'not');
                                    hot.setDataAtRowProp(row, 'FormsProcessing', '', 'not');
                                    hot.setDataAtRowProp(row, 'Note', '', 'not');
                                }
                            }
                            if (col === 'ItemName') {
                                var Item = change[i][3];
                                if (Item !== undefined && Item !== "" && Item !== null) {
                                    var timItem = $.grep(dataProduct_115, function (item, index) { return item.ItemName === Item; });

                                    if (timItem !== undefined && timItem !== null && timItem !== "" && timItem.length > 0) {

                                        hot.updateSettings({
                                            cells: function (row, col, prop) {
                                                var cellProperties = {};

                                                if (row === dataMkoMkoHandsontable.length - 1) {
                                                    cellProperties.readOnly = false;
                                                }

                                                return cellProperties;

                                            }
                                        });

                                        return true;
                                    } else {
                                        return false;
                                    }
                                }
                                else {
                                    hot.setDataAtRowProp(row, 'ItemName', '', 'not');
                                    hot.setDataAtRowProp(row, 'GroupName', '', 'not');
                                    hot.setDataAtRowProp(row, 'Quantity', '', 'not');
                                    hot.setDataAtRowProp(row, 'Price', '', 'not');
                                    hot.setDataAtRowProp(row, 'Sum', '', 'not');
                                    hot.setDataAtRowProp(row, 'Unit', '', 'not');
                                    hot.setDataAtRowProp(row, 'FormsProcessing', '', 'not');
                                    hot.setDataAtRowProp(row, 'Note', '', 'not');
                                }
                            }
                            if (col === 'Quantity') {
                                var thietbi = hot.getDataAtCell(row, 1);
                                if (thietbi !== "" && thietbi !== undefined && thietbi !== null) {
                                    var a = change[i][3], b = hot.getDataAtCell(row, 4);
                                    if (a === "" || a === undefined || isNaN(a) || a === null) {
                                        a = 0;
                                        hot.setDataAtCell(row, 3, 0, 'not');
                                    }
                                    if (b === "" || b === undefined || isNaN(b) || b === null) {
                                        b = 0;
                                        hot.setDataAtCell(row, 4, 0, 'not');
                                    }
                                    var rs = Math.ceil(a * b);
                                    if (!isNaN(rs) && rs !== undefined && rs !== null && rs !== "")
                                        hot.setDataAtCell(row, 5, rs, 'not');
                                    else
                                        hot.setDataAtCell(row, 5, 0, 'not');
                                    return true;
                                } else {
                                    return false;
                                }

                            }
                            if (col === 'FormsProcessing') {
                                var item = hot.getDataAtRowProp(row, 'ItemName');
                                if (item !== "" && item !== undefined && item !== null) {
                                    return true;
                                } else {
                                    return false;
                                }
                            }
                            if (col === 'ghichu') {
                                var thietbi = hot.getDataAtCell(row, 1);
                                if (thietbi !== "" && thietbi !== undefined && thietbi !== null) {
                                    return true;
                                } else {
                                    hot.selectCell(row, 0, row, 0);
                                    return false;
                                }
                            }
                        }
                    },
                    afterChange: function (changes, source) {
                        if (!changes) {
                            return;
                        }
                        var instance = this;
                        changes.forEach(function (change) {
                            var row = change[0];
                            var col = change[1];
                            var newValue = change[3];
                            var cellProperties, options;


                            if (col == 'ItemName' && newValue !== '' && newValue !== null && newValue !== '') {
                                var shop = hot.getDataAtRowProp(row, 'ShopCode');
                                if (shop === '' || shop === undefined || shop === null) {
                                    XFunction.RenderMessage('error', 'Chọn shop trước khi chọn sản phẩm!');
                                    hot.setDataAtRowProp(row, 'ItemName', '', 'not');
                                    return false;
                                }
                                var rows = hot.getDataAtRow(row);
                                var colls = $.grep(hot.getData(), function (item, index) {
                                    return item.ShopCode !== null && item.ShopCode !== undefined
                                        && item.ShopCode !== '' && item.ShopCode == shop && item.ItemName == newValue;
                                });
                                if (colls.length > 1) {
                                    XFunction.RenderMessage('error', 'Mặt hàng [' + newValue + '] shop [' + shop + '] đã đặt trên lưới trước đó. Vui lòng chọn mặt hàng khác!');
                                    hot.setDataAtRowProp(row, 'ItemName', '', 'not');
                                    hot.setDataAtRowProp(row, 'GroupName', '', 'not');
                                    hot.setDataAtRowProp(row, 'Quantity', '', 'not');
                                    hot.setDataAtRowProp(row, 'Price', '', 'not');
                                    hot.setDataAtRowProp(row, 'Sum', '', 'not');
                                    hot.setDataAtRowProp(row, 'Unit', '', 'not');
                                    hot.setDataAtRowProp(row, 'FormsProcessing', '', 'not');
                                    hot.setDataAtRowProp(row, 'Note', '', 'not');
                                    return false;
                                }
                                else {
                                    if (newValue !== undefined && newValue !== "" && newValue !== null) {
                                        var timthietbi = $.grep(dataProduct_115, function (item, index) { return item.ItemName === newValue; });

                                        if (timthietbi !== undefined && timthietbi !== null && timthietbi !== "" && timthietbi.length > 0) {
                                            hot.setDataAtCell(row, 2, timthietbi[0].GroupName, 'not');
                                            hot.setDataAtCell(row, 3, 0, 'not');
                                            hot.setDataAtCell(row, 4, timthietbi[0].Price, 'not');
                                            hot.setDataAtCell(row, 5, 0, 'not'),
                                                hot.setDataAtCell(row, 6, timthietbi[0].Unit, 'not'),
                                                hot.setDataAtCell(row, 7, DataFormsProcessing[0], 'not'),
                                                hot.setDataAtCell(row, 8, "", 'not');

                                            hot.selectCell(row, 4, row, 4);

                                            hot.updateSettings({
                                                cells: function (row, col, prop) {
                                                    var cellProperties = {};

                                                    if (row === dataMkoMkoHandsontable.length - 1) {
                                                        cellProperties.readOnly = false;
                                                    }

                                                    return cellProperties;

                                                }
                                            });

                                            return true;
                                        } else {
                                            return false;
                                        }
                                    }
                                }
                            }
                        });
                    },

                };
            };
            hot = new Handsontable(container, setting());
            function contructExecl115() {
                var X = XLSX;
                function fixdata(data) {
                    var o = "", l = 0, w = 10240;
                    for (; l < data.byteLength / w; ++l) o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w, l * w + w)));
                    o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w)));
                    return o;
                }
                function to_json(workbook) {
                    var result = {};
                    workbook.SheetNames.forEach(function (sheetName) {
                        var roa = X.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);
                        if (roa.length > 0) {
                            result[sheetName] = roa;
                        }
                    });
                    return result;
                }
                $('#FileSupport').change(function (event) {
                    //$('#WaitDialog').modal('show');
                    var fileValid = false;
                    fileValid = Validater.endFile($('#FileSupport').val());
                    if (fileValid) {
                        var files = event.target.files;
                        var f = files[0];
                        {
                            var reader = new FileReader();
                            var name = f.name;
                            reader.onload = function (e) {
                                var data = e.target.result;
                                var arr = fixdata(data);
                                wb = X.read(btoa(arr), { type: 'base64' });
                                var wb;
                                var output = to_json(wb);
                                var dataH = [];
                                if (output.Sheet1 !== null && output.Sheet1 !== '' && output.Sheet1 !== undefined) {
                                    var dataMtk115 = [];
                                    // tao du lieu day du
                                    $.each(output.Sheet1, function (index, item) {
                                        dataMtk115.push({
                                            'ShopCode': item["Shop"],
                                            'ItemID': item["Mã mặt hàng"],
                                            'Quantity': $.isNumeric(item['Số lượng']) == true ? Math.ceil(item['Số lượng']) : item['Số lượng'],
                                            'FormsProcessing': item["Hình thức xử lý"],
                                            'Note': item['Ghi chú'],
                                        });
                                    });

                                    //kiem tra nhap day du thong tin
                                    var colnameRe = ["ShopCode", "ItemID", "Quantity", "FormsProcessing"];
                                    var dataInvalidRe = [];
                                    var dataInvalidShopCode = [];
                                    var dataShopAndItemInvalid = [];
                                    var dataProductInvalid = [];
                                    var dataQuantityInvalid = [];
                                    var dataProcessInvalid = [];
                                    $.each(dataMtk115, function (index, item) {
                                        // kiem tra day du du lieu
                                        var check = true;
                                        $.each(colnameRe, function (count, element) {
                                            if (item[element] === null || item[element] === '' || item[element] === undefined) {
                                                check = false;
                                            }
                                        });
                                        if (check == false) {
                                            dataInvalidRe.push((index + 2));
                                            XFunction.RenderMessage('error', 'Lỗi Import!!! Phải nhập đầy đủ thông tin trên lưới');
                                            return;
                                        }
                                        // kiem tra sai shop
                                        var dataShop = $.grep(dataDept_115, function (itemShop, indexShop) {
                                            return itemShop.WarehouseCodeB1 === item.ShopCode;
                                        });
                                        if (dataShop.length == 0) {
                                            dataInvalidShopCode.push((index + 2))
                                        }
                                        // kiem tra sai ma mat hang
                                        var dataProduct = $.grep(dataProduct_115, function (itemProduct, indexProduct) {
                                            return itemProduct.ItemId == item.ItemID;
                                        });
                                        if (dataProduct.length == 0) {
                                            dataProductInvalid.push((index + 2))
                                        }
                                        // kiem tra số lượng 
                                        if ($.isNumeric(item.Quantity) === false || item.Quantity <= 0) {
                                            dataQuantityInvalid.push((index + 2));
                                        }
                                        // kiem tra hinh thuc xu ly
                                        if (item.FormsProcessing != 0 && item.FormsProcessing != 1) {
                                            dataProcessInvalid.push((index + 2));
                                        }
                                        //kiem tra trung shop va san pham
                                        var dataShopItem = $.grep(dataMtk115, function (itemShop, indexShop) {
                                            return itemShop.ShopCode == item.ShopCode && itemShop.ItemID == item.ItemID;
                                        });
                                        if (dataShopItem.length > 1) {
                                            dataShopAndItemInvalid.push((index + 2));
                                        }
                                    });
                                    // bao loi ra man hinh tao
                                    if (dataInvalidRe.length > 0) {
                                        XFunction.RenderMessage('error', 'Lỗi Import!!! Dữ liệu nhập chưa đầy đủ! Vui lòng xem lại dòng ' + dataInvalidRe.join(',') + ' !'); return;
                                    }
                                    if (dataInvalidShopCode.length > 0) {
                                        XFunction.RenderMessage('error', 'Lỗi Import!!! Mã shop B1 không tồn tại! Vui lòng xem lại dòng ' + dataInvalidShopCode.join(',') + ' !'); return;
                                    }
                                    if (dataProductInvalid.length > 0) {
                                        XFunction.RenderMessage('error', 'Lỗi Import!!! Mặt hàng không tồn tại! Vui lòng xem lại dòng ' + dataProductInvalid.join(',') + ' !'); return;
                                    }
                                    if (dataQuantityInvalid.length > 0) {
                                        XFunction.RenderMessage('error', 'Lỗi Import!!! Số lượng phải là kiểu số và lớn hơn 0! Vui lòng xem lại dòng ' + dataQuantityInvalid.join(',') + ' !'); return;
                                    }
                                    if (dataProcessInvalid.length > 0) {
                                        XFunction.RenderMessage('error', 'Lỗi Import!!! Hình thức nhập không đúng! Vui lòng xem lại dòng ' + dataProcessInvalid.join(',') + ' !'); return;
                                    }
                                    if (dataShopAndItemInvalid.length > 0) {
                                        XFunction.RenderMessage('error', 'Lỗi Import!!! Tồn tại shop trùng mặt hàng! Vui lòng xem lại dòng ' + dataShopAndItemInvalid.join(',') + ' !'); return;
                                    }

                                    //gan du lieu cho luoi
                                    $.each(dataMtk115, function (index, item) {
                                        var shopInfo = $.grep(dataDept_115, function (itemShopInfo, indexShopInfo) {
                                            return itemShopInfo.WarehouseCodeB1 == item.ShopCode;
                                        });
                                        var productInfo = $.grep(dataProduct_115, function (itemPropInfo, indexProInfo) {
                                            return itemPropInfo.ItemId == item.ItemID;
                                        });
                                        dataH.push(
                                            {
                                                'ShopIdIns': item.ShopCode,
                                                'ShopCode': shopInfo[0].WarehouseCode + '--' + shopInfo[0].WarehouseCodeB1 + '--' + shopInfo[0].WarehouseName,
                                                'ItemId': item.ItemID,
                                                'ItemName': productInfo[0].ItemName,
                                                'GroupId': productInfo[0].GroupId,
                                                'GroupName': productInfo[0].GroupName,
                                                'Quantity': item.Quantity,
                                                'Price': productInfo[0].Price,
                                                'Sum': item.Quantity * productInfo[0].Price,
                                                'Unit': productInfo[0].Unit,
                                                'FormsProcessingCode': item.FormsProcessing,
                                                'FormsProcessing': item.FormsProcessing == 0 ? 'Cấp mới' : 'Bảo hành',
                                                'Note': item.Note,
                                            });
                                    });
                                }
                                dataMkoMkoHandsontable = [];
                                dataMkoMkoHandsontable = dataH;
                                hot.loadData(dataMkoMkoHandsontable);
                                hot.render();
                            };
                            reader.readAsArrayBuffer(f);
                        }
                    }
                    $('#FileSupport').val('');
                    //$('#WaitDialog').modal('hide');
                });
            }
            contructExecl115();
            hot.selectCell(0, 0, 0, 0);
        },
        //____________________
        RenderSCCSVC: function () {
            $('#detail').hide();
            $('.compose-message').show();
            $('.note-editable').focus();

            $.get('/Requests/GetCatagoryTree', { type: 24 }, function (data) {
                var tree = [];
                $.each(data, function (index, item) {
                    var newdata = {
                        id: item.Id,
                        parent: item.ParentId,
                        text: item.Name,
                        type: 'Fa'
                    };
                    tree.push(newdata);
                });

                $('#green-tree').jstree({
                    "core": { data: tree },
                    "plugins": ["wholerow", "search", "types"],
                    "types": {
                        "Fa": { "icon": "/assets/images/Maps-Pin-Place-icon.png" },
                        "Chid": { "icon": "/assets/images/blue-home-icon.png" },
                    },
                }).on('changed.jstree', function (e, data) {
                    var i, j, r = [];
                    for (i = 0, j = data.selected.length; i < j; i++) {
                        r.push(data.instance.get_node(data.selected[i]).text);
                        $('#Green_Tree_View').val(data.instance.get_node(data.selected[i]).text);

                        var dt = new Date();
                        $('#Title').val(catagoryInfo.Description + " - " + data.instance.get_node(data.selected[i]).text + shop + ' - ' + (dt.getMonth() + 1) + '/' + dt.getFullYear());
                        $('#GroupId').val(data.instance.get_node(data.selected[i]).id);
                    }
                    $('#green-tree-g').hide();
                });

                var to = false;
                $('#searchGreenTree').keyup(function () {
                    if (to) { clearTimeout(to); }
                    to = setTimeout(function () {
                        var v = $('#searchGreenTree').val();
                        $('#green-tree').jstree(true).search(v);
                    }, 250);
                });

                $('#green-tree-g').hide();
                $('#Green_Tree_View').click(function () {
                    $('#green-tree-g').toggle();
                    $('#searchGreenTree').focus();
                });

                $(document).mouseup(function (e) {
                    var region = $("#green-tree-g"), txtRegion = $('#Green_Tree_View');

                    if (!region.is(e.target)
                        && region.has(e.target).length === 0 && !txtRegion.is(e.target)) {
                        region.hide();
                    }


                });

                $('.greenTree').show();
            });

        },              //#Suachuacosovatchat  04/09/2015  
        RenderIT: function () {
            $('#detail').hide();
            $('.compose-message').show();
            $('.note-editable').focus();

            $.get('/Requests/GetCatagoryTree', { type: 44 }, function (data) {
                var tree = [];
                $.each(data, function (index, item) {
                    var newdata = {
                        id: item.Id,
                        parent: item.ParentId,
                        text: item.Name,
                        type: 'Fa'
                    };
                    tree.push(newdata);
                });

                $('#green-tree').jstree({
                    "core": { data: tree },
                    "plugins": ["wholerow", "search", "types"],
                    "types": {
                        "Fa": { "icon": "/assets/images/Maps-Pin-Place-icon.png" },
                        "Chid": { "icon": "/assets/images/blue-home-icon.png" },
                    },
                }).on('changed.jstree', function (e, data) {
                    var i, j, r = [];
                    for (i = 0, j = data.selected.length; i < j; i++) {
                        r.push(data.instance.get_node(data.selected[i]).text);
                        $('#Green_Tree_View').val(data.instance.get_node(data.selected[i]).text);

                        var dt = new Date();
                        $('#Title').val(catagoryInfo.Description + " - " + data.instance.get_node(data.selected[i]).text + shop + ' - ' + (dt.getMonth() + 1) + '/' + dt.getFullYear());
                        $('#GroupId').val(data.instance.get_node(data.selected[i]).id);
                    }
                    $('#green-tree-g').hide();
                });

                var to = false;
                $('#searchGreenTree').keyup(function () {
                    if (to) { clearTimeout(to); }
                    to = setTimeout(function () {
                        var v = $('#searchGreenTree').val();
                        $('#green-tree').jstree(true).search(v);
                    }, 250);
                });

                $('#green-tree-g').hide();
                $('#Green_Tree_View').click(function () {
                    $('#green-tree-g').toggle();
                    $('#searchGreenTree').focus();
                });

                $(document).mouseup(function (e) {
                    var region = $("#green-tree-g"), txtRegion = $('#Green_Tree_View');

                    if (!region.is(e.target)
                        && region.has(e.target).length === 0 && !txtRegion.is(e.target)) {
                        region.hide();
                    }


                });
                $('.greenTree').show();
            });

        },                  //#It 04/09/2015   dainlp
        RenderHTHT: function () {
            $('#detail').hide();
            $('.compose-message').show();
            $('.note-editable').focus();
            $('.sender').show();

            $.get('/Requests/GetCatagoryTree', { type: 9 }, function (data) {
                var tree = [];
                $.each(data, function (index, item) {
                    var newdata = {
                        id: item.Id,
                        parent: item.ParentId,
                        text: item.Name,
                        type: 'Fa'
                    };
                    tree.push(newdata);
                });

                $('#green-tree').jstree({
                    "core": { data: tree },
                    "plugins": ["wholerow", "search", "types"],
                    "types": {
                        "Fa": { "icon": "/assets/images/Maps-Pin-Place-icon.png" },
                        "Chid": { "icon": "/assets/images/blue-home-icon.png" },
                    },
                }).on('changed.jstree', function (e, data) {
                    var i, j, r = [];
                    for (i = 0, j = data.selected.length; i < j; i++) {
                        r.push(data.instance.get_node(data.selected[i]).text);
                        $('#Green_Tree_View').val(data.instance.get_node(data.selected[i]).text);

                        var dt = new Date();
                        $('#Title').val(catagoryInfo.Description + " - " + data.instance.get_node(data.selected[i]).text + shop + ' - ' + (dt.getMonth() + 1) + '/' + dt.getFullYear());
                        $('#GroupId').val(data.instance.get_node(data.selected[i]).id);
                    }
                    $('#green-tree-g').hide();
                });

                var to = false;
                $('#searchGreenTree').keyup(function () {
                    if (to) { clearTimeout(to); }
                    to = setTimeout(function () {
                        var v = $('#searchGreenTree').val();
                        $('#green-tree').jstree(true).search(v);
                    }, 250);
                });

                $('#green-tree-g').hide();
                $('#Green_Tree_View').click(function () {
                    $('#green-tree-g').toggle();
                    $('#searchGreenTree').focus();
                });

                $(document).mouseup(function (e) {
                    var region = $("#green-tree-g"), txtRegion = $('#Green_Tree_View');

                    if (!region.is(e.target)
                        && region.has(e.target).length === 0 && !txtRegion.is(e.target)) {
                        region.hide();
                    }


                });
                $('.greenTree').show();
            });

        },                //#Hotrohethong 04/09/2015
        RenderGridFund: function () {
            $('.compose-message').hide();
            $('#detail').show();
            $('#sum-total').show();   // have support file dowload excel
            $('#handsontableEx').css('overflow', 'hidden');

            arrNameTypeFund =
                ['Tiền bán hàng',
                    'Tiền thu hộ ACS',
                    'Tiền thu hộ Ftel',
                    'Tiền thu hộ VASS',
                    'Tiền thu hộ phí miễn thường',
                    'Tiền thu hộ đặt cọc bảo hành',
                    'Tiền thu hộ Payoo'
                ];
            dataFund = arrNameTypeFund;

            var now = new Date();
            var day = (now.getDate() < 10) ? '0' + now.getDate() : now.getDate();
            var month = ((now.getMonth() + 1) < 10) ? '0' + (now.getMonth() + 1) : (now.getMonth() + 1);
            var oneDay = day + "/" + month + "/" + (now.getYear() + 1900);

            var setting = function () {
                return {
                    //=================================Data=======
                    data: dataFundHandsontable,
                    //================================Cols=======
                    maxCols: 6,
                    minCols: 6,
                    startCols: 6,
                    minSpareCols: 0,
                    allowInsertColumn: false,
                    allowRemoveColumn: false,
                    autoColumnSize: true,
                    autoWrapCol: true,
                    columnSorting: false,
                    colWidths: 'undefined',
                    copyColsLimit: 6,
                    currentColClassName: 'currentCol', //currentCol
                    fixedColumnsLeft: 0,
                    manualColumnMove: false,
                    manualColumnResize: true,
                    viewportColumnRenderingOffset: 6,
                    sortIndicator: true,
                    //================================Rows=======
                    allowInsertRow: true,
                    allowRemoveRow: true,
                    autoRowSize: true,
                    autoWrapRow: true,
                    copyRowsLimit: 1000,
                    currentRowClassName: 'currentRow',
                    fixedRowsTop: 0,
                    manualRowMove: false,
                    manualRowResize: true,
                    rowHeaders: true,
                    minSpareRows: 10,
                    startRows: 10,
                    //viewportRowRenderingOffset : 'auto',
                    //maxRows: 'Infinity',
                    //minRows: 'Infinity',
                    //================================Oder=======
                    allowInvalid: false,
                    stretchH: 'all',
                    commentedCellClassName: 'htCommentCell',
                    comments: true,
                    contextMenu: true,
                    copyable: true,
                    customBorders: false,
                    debug: false,
                    disableVisualSelection: true,
                    enterBeginsEditingBoolean: true,
                    fillHandle: true,
                    outsideClickDeselects: true,
                    fragmentSelection: false,
                    groups: false,
                    invalidCellClassName: 'htInvalid',
                    mergeCells: false,
                    multiSelect: true,
                    noWordWrapClassName: 'htNoWrap',
                    placeholder: false,
                    placeholderCellClassName: 'htPlaceholder',
                    readOnlyCellClassName: 'htDimmed',
                    search: false,
                    trimWhitespace: true,
                    undo: true,
                    formulas: true,
                    wordWrap: true,
                    //====================================Oder ==============================================
                    colHeaders: ["Loại thu tiền", "Ngày nộp tiền", "S/t nộp thực tế", "Số trên B1/CRM", "Số trên CA0202", "Ghi chú"],
                    columns: [
                        { data: "FundType", type: 'autocomplete', source: arrNameTypeFund, strict: false, className: 'htLeft', width: 250 },
                        {
                            data: "TimeImport", type: 'date', dateFormat: 'DD/MM/YYYY', correctFormat: true, allowInvalid: true, defaultDate: oneDay, width: 100,
                            renderer: function (instance, td, row, col, prop, value) {
                                if (col === 1 && row === dataFundHandsontable.length - 1) {
                                    td.style.fontWeight = 'bold';
                                    td.style.textAlign = 'right';
                                    value = 'Tổng tiền:';
                                }
                                Handsontable.NumericRenderer.apply(this, arguments);
                            }, width: 90,
                        },
                        {
                            data: "MoneyReal", type: 'numeric', format: '0,0', validator: Validater.money, allowInvalid: false,
                            renderer: function (instance, td, row, col, prop, value) {
                                if (col === 2 && row === dataFundHandsontable.length - 1) {
                                    td.style.fontWeight = 'bold';
                                    sum = 0;
                                    $.each(dataFundHandsontable, function (index, item) {
                                        if (item.MoneyReal !== "" && item.MoneyReal !== undefined && item.MoneyReal !== null && isNaN(item.MoneyReal) === false)
                                            sum += parseInt(item.MoneyReal);
                                        else
                                            sum += 0;
                                    });
                                    value = sum;
                                }
                                Handsontable.NumericRenderer.apply(this, arguments);
                            }
                        },
                        {
                            data: "MoneyB1CRM", type: 'numeric', format: '0,0', validator: Validater.money, allowInvalid: false,
                            renderer: function (instance, td, row, col, prop, value) {
                                if (col === 3 && row === dataFundHandsontable.length - 1) {
                                    td.style.fontWeight = 'bold';
                                    sum = 0;
                                    $.each(dataFundHandsontable, function (index, item) {
                                        if (item.MoneyB1CRM !== "" && item.MoneyB1CRM !== undefined && item.MoneyB1CRM !== null && !isNaN(item.MoneyB1CRM)) {
                                            sum += parseInt(item.MoneyB1CRM);
                                        } else {
                                            sum += 0;
                                        }
                                    });
                                    value = sum;
                                }
                                Handsontable.NumericRenderer.apply(this, arguments);
                            }
                        },
                        {
                            data: "MoneyCA0202", type: 'numeric', format: '0,0', validator: Validater.money, allowInvalid: false,
                            renderer: function (instance, td, row, col, prop, value) {
                                if (col === 4 && row === dataFundHandsontable.length - 1) {
                                    td.style.fontWeight = 'bold';
                                    sum = 0;
                                    $.each(dataFundHandsontable, function (index, item) {
                                        if (item.MoneyCA0202 !== "" && item.MoneyCA0202 !== undefined && item.MoneyCA0202 !== null && !isNaN(item.MoneyCA0202)) {
                                            sum += parseInt(item.MoneyCA0202);
                                        } else {
                                            sum += 0;
                                        }
                                    });
                                    value = sum;
                                }
                                Handsontable.NumericRenderer.apply(this, arguments);
                            }
                        },
                        { data: "Note", className: 'htLeft' },
                    ],
                    afterRemoveRow: function (index, amount) {
                        hot.updateSettings({
                            cells: function (row, col, prop) {
                                cellProperties = {};
                                if (row === dataFundHandsontable.length - 1) {
                                    cellProperties.readOnly = true;
                                } else {
                                    cellProperties.readOnly = false;
                                }

                                return cellProperties;
                            }
                        });
                    },
                    cells: function (row, col, prop) {
                        cellProperties = {};
                        if (row === dataFundHandsontable.length - 1) {
                            cellProperties.readOnly = true;
                        } else {
                            cellProperties.readOnly = false;
                        }
                        return cellProperties;
                    },
                    beforeChange: function (change, source) {
                        if (source === 'not') return;
                        for (i = 0, len = change.length; i < len; i++) {
                            var row = change[i][0], col = change[i][1];
                            if (col === 'FundType') {
                                var value = change[i][3];
                                if (value === '' || value === undefined || value === null) {
                                    return false;
                                } else {
                                    hot.selectCell(row, 1);
                                    hot.updateSettings({
                                        cells: function (row, col, prop) {
                                            cellProperties = {};
                                            if (row === dataFundHandsontable.length - 1) {
                                                cellProperties.readOnly = true;
                                            } else {
                                                cellProperties.readOnly = false;
                                            }

                                            return cellProperties;
                                        }
                                    });
                                    return true;
                                }
                            }
                            if (col === 'TimeImport') {
                                var type = hot.getDataAtCell(row, 0);
                                if (type === '' || type === undefined || type === null) {
                                    hot.selectCell(row, 0);
                                    return false;
                                } else {
                                    hot.selectCell(row, 2);
                                }
                            }
                            if (col === 'MoneyReal') {
                                var type = hot.getDataAtCell(row, 0);
                                if (type === '' || type === undefined || type === null) {
                                    hot.selectCell(row, 0);
                                    return false;
                                } else {
                                    hot.selectCell(row, 3);
                                }
                            }
                            if (col === 'MoneyB1CRM') {
                                var type = hot.getDataAtCell(row, 0);
                                if (type === '' || type === undefined || type === null) {
                                    hot.selectCell(row, 0);
                                    return false;
                                } else {
                                    hot.selectCell(row, 4);
                                }
                            }
                            if (col === 'MoneyCA0202') {
                                var type = hot.getDataAtCell(row, 0);
                                if (type === '' || type === undefined || type === null) {
                                    hot.selectCell(row, 0);
                                    return false;
                                } else {
                                    hot.selectCell(row, 7);
                                }
                            }
                            if (col === 'Note') {
                                var type = hot.getDataAtCell(row, 0);
                                if (type === '' || type === undefined || type === null) {
                                    hot.selectCell(row, 0);
                                    return false;
                                } else {
                                    hot.selectCell(row, 0);
                                }
                            }
                        }
                    },

                };
            };
            hot = new Handsontable(container, setting());
            hot.selectCell(0, 0, 0, 0);
            XFunction.functionConfigImportExcel('fund');
        },            //#Fund  04/09/2015
        RenderGridMoneyAdvance: function () {
            $('.compose-message').hide();
            $('#detail').show();
            $('#sum-total').hide();  // this type not support dowload file support
            $('#handsontableEx').css('overflow', 'hidden');

            $.get('/Requests/GetEmps', { ShopCode: '0' }, function (data) {
                dataMoneyAdvance = data;
                $.each(data, function (index, item) {
                    arrNameEmployMoneyAdvance.push(item.text);
                });
            });
            var now = new Date();
            var day = (now.getDate() < 10) ? '0' + now.getDate() : now.getDate();
            var month = ((now.getMonth() + 1) < 10) ? '0' + (now.getMonth() + 1) : (now.getMonth() + 1);
            var oneDay = day + "/" + month + "/" + (now.getYear() + 1900);

            var setting = function () {
                return {
                    //=================================Data=======
                    data: dataMoneyAdvanceHandsontable,
                    //================================Cols=======
                    maxCols: 7,
                    minCols: 7,
                    startCols: 7,
                    minSpareCols: 0,
                    allowInsertColumn: false,
                    allowRemoveColumn: false,
                    autoColumnSize: true,
                    autoWrapCol: true,
                    columnSorting: false,
                    colWidths: 'undefined',
                    copyColsLimit: 7,
                    currentColClassName: 'currentCol', //currentCol
                    fixedColumnsLeft: 0,
                    manualColumnMove: false,
                    manualColumnResize: true,
                    viewportColumnRenderingOffset: 7,
                    sortIndicator: true,
                    //================================Rows=======
                    allowInsertRow: true,
                    allowRemoveRow: true,
                    autoRowSize: true,
                    autoWrapRow: true,
                    copyRowsLimit: 1000,
                    currentRowClassName: 'currentRow',
                    fixedRowsTop: 0,
                    manualRowMove: false,
                    manualRowResize: true,
                    rowHeaders: true,
                    minSpareRows: 10,
                    startRows: 10,
                    //viewportRowRenderingOffset : 'auto',
                    //maxRows: 'Infinity',
                    //minRows: 'Infinity',
                    //================================Oder=======
                    allowInvalid: false,
                    stretchH: 'all',
                    commentedCellClassName: 'htCommentCell',
                    comments: true,
                    contextMenu: true,
                    copyable: true,
                    customBorders: false,
                    debug: false,
                    disableVisualSelection: true,
                    enterBeginsEditingBoolean: true,
                    fillHandle: true,
                    outsideClickDeselects: true,
                    fragmentSelection: false,
                    groups: false,
                    invalidCellClassName: 'htInvalid',
                    mergeCells: false,
                    multiSelect: true,
                    noWordWrapClassName: 'htNoWrap',
                    placeholder: false,
                    placeholderCellClassName: 'htPlaceholder',
                    readOnlyCellClassName: 'htDimmed',
                    search: false,
                    trimWhitespace: true,
                    undo: true,
                    formulas: true,
                    wordWrap: true,
                    //====================================Oder ==============================================
                    colHeaders: ["Người xin tạm ứng", "Số tiền", "Hình thức tạm ứng", "Số tài khoản", "Tên ngân hàng-chi nhánh", "Ngày hoàn ứng", "Lý do"],
                    columns: [
                        { data: "Name", type: 'autocomplete', source: arrNameEmployMoneyAdvance, strict: false, className: 'htLeft', width: 250, },
                        { data: "Money", type: 'numeric', format: '0,0', width: 100, validator: Validater.money, allowInvalid: false, },
                        { data: "Type", type: 'dropdown', source: ['Chuyển khoản', 'Tiền mặt'], className: 'htLeft', width: 120 },
                        { data: "BankNumber", className: 'htLeft' },
                        { data: "BankName", className: 'htLeft' },
                        { data: "DateReturn", type: 'date', dateFormat: 'DD/MM/YYYY', correctFormat: true, validator: Validater.dateGreaterNowDay, allowInvalid: true, defaultDate: oneDay, width: 100 },
                        { data: "Reason", className: 'htLeft', width: 300 },
                    ],
                    beforeChange: function (change, source) {
                        if (source === 'not') return;
                        for (i = 0, len = change.length; i < len; i++) {
                            var row = change[i][0], col = change[i][1];
                            if (col === 'Name') {
                                var nameOld = change[i][2], nameNew = change[i][3];
                                var colls = hot.getDataAtCol(0);
                                var repeat = $.grep(colls, function (item, index) {
                                    return item == nameNew
                                        && item !== "" && item !== null && item !== undefined
                                        && nameOld != nameNew;
                                });
                                if (repeat.length > 0) {
                                    XFunction.RenderMessage('error', 'Đã tồn tại nhân viên này trên lưới..vui lòng chọn nhân viên khác');
                                    return false;
                                }
                                else {
                                    if (nameNew !== undefined && nameNew !== "" && nameNew !== null) {
                                        var findEmployByName = $.grep(dataMoneyAdvance, function (item, index) { return item.text === nameNew; });
                                        if (findEmployByName === undefined || findEmployByName === null || findEmployByName === "" || findEmployByName.length == 0) {
                                            return false;
                                        } else {
                                            hot.selectCell(row, 1);
                                        }
                                    } else {
                                        return false;
                                    }
                                }
                            }
                            if (col === 'Money') {
                                var col0 = hot.getDataAtCell(row, 0);
                                if (col0 === null || col0 === undefined || col0 === '') {
                                    hot.selectCell(row, 0, row, 0);
                                    return false;
                                } else {
                                    hot.selectCell(row, 2);
                                }
                            }
                            if (col === 'Type') {
                                var col0 = hot.getDataAtCell(row, 0);
                                if (col0 === null || col0 === undefined || col0 === '') {
                                    hot.selectCell(row, 0, row, 0);
                                    return false;
                                } else {
                                    hot.selectCell(row, 3);
                                }
                            }
                            if (col === 'BankNumber') {
                                var col0 = hot.getDataAtCell(row, 0);
                                if (col0 === null || col0 === undefined || col0 === '') {
                                    hot.selectCell(row, 0, row, 0);
                                    return false;
                                }
                            }

                            if (col === 'BankName') {
                                var col0 = hot.getDataAtCell(row, 0);
                                if (col0 === null || col0 === undefined || col0 === '') {
                                    hot.selectCell(row, 0, row, 0);
                                    return false;
                                }
                            }
                            if (col === 'DateReturn') {
                                var col0 = hot.getDataAtCell(row, 0);
                                if (col0 === null || col0 === undefined || col0 === '') {
                                    hot.selectCell(row, 0, row, 0);
                                    return false;
                                } else {
                                    hot.selectCell(row, 6);
                                }
                            }
                            if (col === 'Reason') {
                                var col0 = hot.getDataAtCell(row, 0);
                                if (col0 === null || col0 === undefined || col0 === '') {
                                    hot.selectCell(row, 0, row, 0);
                                    return false;
                                }
                                hot.selectCell(row, 0, row, 0);
                            }
                        }
                    },
                };
            };
            hot = new Handsontable(container, setting());
            hot.selectCell(0, 0, 0, 0);
        },    //#MoneyAdvance 04/09/2015
        RenderGridInventoryCash: function () {
            $('.compose-message').hide();
            $('#detail').show();
            $('#sum-total').hide();  // this type not support dowload file support
            $('#handsontableEx').css('overflow', 'hidden');

            dataInventoryCash = [
                { Denomination: 500000, Quantity: 0, Money: 0, Note: '' },
                { Denomination: 200000, Quantity: 0, Money: 0, Note: '' },
                { Denomination: 100000, Quantity: 0, Money: 0, Note: '' },
                { Denomination: 50000, Quantity: 0, Money: 0, Note: '' },
                { Denomination: 20000, Quantity: 0, Money: 0, Note: '' },
                { Denomination: 10000, Quantity: 0, Money: 0, Note: '' },
                { Denomination: 5000, Quantity: 0, Money: 0, Note: '' },
                { Denomination: 2000, Quantity: 0, Money: 0, Note: '' },
                { Denomination: 1000, Quantity: 0, Money: 0, Note: '' },
                { Denomination: 500, Quantity: 0, Money: 0, Note: '' },
                { Denomination: '', Quantity: 'Tổng tiền :', Money: '', Note: '' },
                { Denomination: '', Quantity: '', Money: '', Note: '' },
                { Denomination: '', Quantity: 'Tổng tiền hàng tồn quỹ :', Money: 0, Note: '' },
                { Denomination: '', Quantity: 'Tổng tiền thu hộ tồn quỹ :', Money: 0, Note: '' },
                { Denomination: '', Quantity: 'Tổng tiền :', Money: '', Note: '' },
            ];
            dataInventoryCashHandsontable = dataInventoryCash;
            var setting = function () {
                return {
                    //=================================Data=======
                    data: dataInventoryCashHandsontable,
                    //================================Cols=======
                    maxCols: 4,
                    minCols: 4,
                    startCols: 4,
                    minSpareCols: 0,
                    allowInsertColumn: false,
                    allowRemoveColumn: false,
                    autoColumnSize: true,
                    autoWrapCol: true,
                    columnSorting: false,
                    colWidths: 'undefined',
                    copyColsLimit: 4,
                    currentColClassName: 'currentCol', //currentCol
                    fixedColumnsLeft: 0,
                    manualColumnMove: false,
                    manualColumnResize: true,
                    viewportColumnRenderingOffset: 4,
                    sortIndicator: true,
                    //================================Rows=======
                    allowInsertRow: true,
                    allowRemoveRow: true,
                    autoRowSize: true,
                    autoWrapRow: true,
                    copyRowsLimit: 1000,
                    currentRowClassName: 'currentRow',
                    fixedRowsTop: 0,
                    manualRowMove: false,
                    manualRowResize: true,
                    rowHeaders: true,
                    minSpareRows: 0,
                    startRows: 15,
                    //viewportRowRenderingOffset : 'auto',
                    maxRows: 15,
                    minRows: 15,
                    //================================Oder=======
                    allowInvalid: false,
                    stretchH: 'all',
                    commentedCellClassName: 'htCommentCell',
                    comments: true,
                    contextMenu: false,
                    copyable: true,
                    customBorders: false,
                    debug: false,
                    disableVisualSelection: false,
                    enterBeginsEditingBoolean: true,
                    fillHandle: true,
                    outsideClickDeselects: true,
                    fragmentSelection: true,
                    groups: false,
                    invalidCellClassName: 'htInvalid',
                    mergeCells: false,
                    multiSelect: true,
                    noWordWrapClassName: 'htNoWrap',
                    placeholder: false,
                    placeholderCellClassName: 'htPlaceholder',
                    readOnlyCellClassName: 'htDimmed',
                    search: false,
                    trimWhitespace: true,
                    undo: false,
                    formulas: true,
                    wordWrap: true,
                    //====================================Oder ==============================================
                    colHeaders: ["Mệnh giá", "Số tờ", "Thành tiền", "Ghi chú"],
                    columns: [
                        { data: "Denomination", readOnly: true, type: 'numeric', format: '0,0', width: 100, validator: Validater.money, allowInvalid: false, },
                        { data: "Quantity", type: 'numeric', format: '0,0', width: 100, validator: Validater.money, allowInvalid: false, width: 250, className: 'htRight' },
                        {
                            data: "Money", type: 'numeric', format: '0,0', width: 150, validator: Validater.money, allowInvalid: false,
                            renderer: function (instance, td, row, col, prop, value) {
                                if (col === 2 && row < 10) {
                                    td.style.fontWeight = 'bold';
                                    var sum = 0;
                                    var Denomination = instance.getDataAtCell(row, 0);
                                    var Quantity = instance.getDataAtCell(row, 1);
                                    if (isNaN(Denomination * Quantity)) {
                                        value = 0;
                                    } else {
                                        value = Denomination * Quantity;
                                    }
                                } else if (col === 2 && row === 10) {
                                    td.style.fontWeight = 'bold';
                                    var sum = 0;
                                    $.each(dataInventoryCashHandsontable, function (index, item) {
                                        if (index === 10) return false;
                                        var Denomination = item.Denomination;
                                        var Quantity = item.Quantity;
                                        if (isNaN(Denomination * Quantity)) {
                                            sum += 0;
                                        } else {
                                            sum += Denomination * Quantity;
                                        }
                                    });
                                    value = sum;
                                } else if (col === 2 && row === 14) {
                                    td.style.fontWeight = 'bold';
                                    var sum = 0;
                                    $.each(dataInventoryCashHandsontable, function (index, item) {
                                        if (index === 13 || index === 12) {
                                            var money = item.Money;
                                            if (isNaN(money)) {
                                                sum += 0;
                                            } else {
                                                sum += money;
                                            }
                                        }
                                    });
                                    value = sum;
                                }

                                Handsontable.NumericRenderer.apply(this, arguments);
                            }
                        },
                        { data: "Note", className: 'htLeft', width: 300 },
                    ],
                    cells: function (row, col, prop) {
                        cellProperties = {};
                        if (col === 0 || (col === 1 && row >= 10) || (col === 2 && row <= 10) || row === 10 || row === 11 || row === 14 || (col === 3 && row >= 10)) {
                            cellProperties.readOnly = true;
                        }
                        return cellProperties;
                    }
                };
            };
            hot = new Handsontable(container, setting());
            hot.selectCell(0, 0, 0, 0);
        },    //#InventoryCash 09/09/2015
        //===============================================================================
        functionConfigImportExcel: function (type) {
            var X = XLSX;
            function fixdata(data) {
                var o = "", l = 0, w = 10240;
                for (; l < data.byteLength / w; ++l) o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w, l * w + w)));
                o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w)));
                return o;
            }
            function to_json(workbook) {
                var result = {};
                workbook.SheetNames.forEach(function (sheetName) {
                    var roa = X.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);
                    if (roa.length > 0) {
                        result[sheetName] = roa;
                    }
                });
                return result;
            }

            $('#FileSupport').change(function (event) {
                var fileValid = false;
                fileValid = Validater.endFile($('#FileSupport').val());

                if (fileValid) {

                    var files = event.target.files;
                    var f = files[0];
                    {
                        var reader = new FileReader();
                        var name = f.name;
                        reader.onload = function (e) {
                            var data = e.target.result;
                            var arr = fixdata(data);
                            wb = X.read(btoa(arr), { type: 'base64' });
                            var wb;
                            var output = to_json(wb);
                            XFunction.functionConfigSetDataFromExcel(type, output.Sheet1);
                        };
                        reader.readAsArrayBuffer(f);
                    }

                }
            });

        },
        functionConfigSetDataFromExcel: function (type, jsondata) {
            if (jsondata === undefined || jsondata === null || jsondata === '') {
                XFunction.RenderMessage('error', 'Không có dữ liệu trong file')
            } else {
                if (type == 'dept') {
                    try {
                        var dataInvalid = [], datas = [], countLine = 0;
                        $.each(jsondata, function (index, item) {
                            if (
                                item['Tên shop'] === null || item['Tên shop'] === "" || item['Tên shop'] === undefined ||
                                item['Mã khách hàng'] === null || item['Mã khách hàng'] === "" || item['Mã khách hàng'] === undefined ||
                                item['Tên khách hàng'] === null || item['Tên khách hàng'] === "" || item['Tên khách hàng'] === undefined ||
                                item['Số HĐ'] === null || item['Số HĐ'] === "" || item['Số HĐ'] === undefined ||
                                item['Ngày chứng từ'] === null || item['Ngày chứng từ'] === "" || item['Ngày chứng từ'] === undefined || Validater.dateCheck(item['Ngày chứng từ']) === false ||
                                item['Ngày đến hạn'] === null || item['Ngày đến hạn'] === "" || item['Ngày đến hạn'] === undefined || Validater.dateCheck(item['Ngày đến hạn']) === false ||
                                item['Tiền chứng từ'] === null || item['Tiền chứng từ'] === "" || item['Tiền chứng từ'] === undefined || Validater.moneyString(item['Tiền chứng từ']) === false ||
                                item['Dư chứng từ'] === null || item['Dư chứng từ'] === "" || item['Dư chứng từ'] === undefined || Validater.moneyString(item['Dư chứng từ']) === false
                            ) {
                                dataInvalid.push(index + 2);
                            } else {
                                datas.push({
                                    shop: item['Tên shop'],
                                    customerId: item['Mã khách hàng'],
                                    customerName: item['Tên khách hàng'],
                                    billNumber: item['Số HĐ'],
                                    startDate: item['Ngày chứng từ'],
                                    endDate: item['Ngày đến hạn'],
                                    note: item['Diễn giải'],
                                    price: parseInt(item['Tiền chứng từ'].replace(/\,/g, '')),
                                    priceOut: parseInt(item['Dư chứng từ'].replace(/\,/g, '')),
                                });
                            }
                        });

                        if (dataInvalid.length > 0) {
                            XFunction.RenderMessage('error', "Kiểm tra các dòng : " + dataInvalid.toString());
                        } else {
                            countLine = datas.length;
                            dataDeptHandsontable = datas;
                            hot.loadData(dataDeptHandsontable);
                            XFunction.RenderMessage('success', 'Import thành công ' + countLine + ' dòng');
                        }

                        $('#FileSupport').val('');
                    } catch (e) {
                        XFunction.RenderMessage('error', 'Import file không thành công');
                        dataDeptHandsontable = []
                        hot.loadData(dataDeptHandsontable);
                        $('#FileSupport').val('');
                    }

                } else if (type == 'fund') {
                    try {
                        var dataInvalid = [], datas = [], countLine = 0;
                        $.each(jsondata, function (index, item) {
                            if (item['Loại thu tiền'] === undefined || item['Loại thu tiền'] === null || item['Loại thu tiền'] === '' || (item['Loại thu tiền'] !== 'Kho hàng bán' && item['Loại thu tiền'] !== 'Kho hàng trưng bày' && item['Loại thu tiền'] !== 'Kho bảo hành' && item['Loại thu tiền'] !== 'Kho hàng ký gởi' && item['Loại thu tiền'] !== 'Sổ tài sản BI' && item['Loại thu tiền'] !== 'Kho máy cũ')
                                || item['Ngày nộp tiền'] === undefined || item['Ngày nộp tiền'] === null || item['Ngày nộp tiền'] === '' || Validater.dateCheck(item['Ngày nộp tiền']) === false
                                || item['Số tiền nộp thực tế'] === undefined || item['Số tiền nộp thực tế'] === null || item['Số tiền nộp thực tế'] === '' || isNaN(item['Số tiền nộp thực tế'].replace(/\,/g, ''))
                                || item['Số tiền trên B1/CRM'] === undefined || item['Số tiền trên B1/CRM'] === null || item['Số tiền trên B1/CRM'] === '' || isNaN(item['Số tiền trên B1/CRM'].replace(/\,/g, ''))
                                || item['Số tiền trên CA0202'] === undefined || item['Số tiền trên CA0202'] === null || item['Số tiền trên CA0202'] === '' || isNaN(item['Số tiền trên CA0202'].replace(/\,/g, ''))
                            ) {
                                dataInvalid.push(index + 2);
                            } else {
                                //var arr = item['Ngày nộp tiền'].split("/");
                                //var dateT = (arr[0].length == 1 ? "0" + arr[0] : arr[0]) + "/" + (arr[1].length == 1 ? "0" + arr[1] : arr[1]) + "/" + arr[2];
                                datas.push({
                                    FundType: item['Loại thu tiền'],
                                    TimeImport: item['Ngày nộp tiền'],
                                    MoneyReal: item['Số tiền nộp thực tế'].replace(/\,/g, ''),
                                    MoneyB1CRM: item['Số tiền trên B1/CRM'].replace(/\,/g, ''),
                                    MoneyCA0202: item['Số tiền trên CA0202'].replace(/\,/g, ''),
                                    Note: item['Giải trình'],
                                });
                            }
                        });
                        if (dataInvalid.length > 0) {
                            XFunction.RenderMessage('error', "Kiểm tra lại các dòng : " + dataInvalid.toString());
                        } else {
                            countLine = datas.length;
                            dataFundHandsontable = datas
                            hot.loadData(dataFundHandsontable);
                            XFunction.RenderMessage('success', 'Import thành công ' + countLine + ' dòng');
                        }

                        $('#FileSupport').val('');
                    } catch (e) {
                        XFunction.RenderMessage('error', 'Import file không thành công');
                        dataFundHandsontable = [];
                        hot.loadData(dataFundHandsontable);
                        $('#FileSupport').val('');
                    }

                }
            }

        },

    };
    var render = function () {
        var renderSummernote = function () {
            $txtNoiDung.summernote({
                height: 100,
                codemirror: { theme: 'monokai' },
                toolbar:
                    [
                        ['style', ['style']],
                        ['font', ['bold', 'italic', 'underline', 'clear']],
                        ['fontname', ['fontname']],
                        ['color', ['color']],
                        ['para', ['ul', 'ol', 'paragraph']],
                        ['height', ['height']],
                        ['table', ['table']],
                        ['view', ['fullscreen', 'codeview']],
                        ['help', ['help']]
                    ]
            });
        }
        //renderSummernote();

        var renderScheduTime = function () {
            var now = new Date();
            var firstDay = new Date(now.getFullYear(), now.getMonth(), now.getDate());
            var lastDay = new Date(now.getFullYear(), now.getMonth(), now.getDate());

            $dateBatDauDatLich.val(firstDay.toDateInputValue());
            $dateNgayKetThucDatLich.val(lastDay.toDateInputValue());

            var housr = (now.getHours() < 10) ? "0" + now.getHours() : now.getHours();
            var minutes = (now.getMinutes() < 10) ? "0" + now.getMinutes() : now.getMinutes();
            var time = housr + ":" + minutes + ":00";
            $timeGui.val(time);

            $dateBatDauDatLich.change(function () {
                var dateF = $(this).val();
                var dataT = $dateNgayKetThucDatLich.val();
                if ((new Date(dateF) >= new Date(dataT))) {
                    toastr["error"]("<trong>Ngày bắt đầu không được lớn hơn hoặc bằng ngày kết thúc</strong>");
                    $('#dateFrom').val(firstDay.toDateInputValue());
                } else if (new Date(dateF) < now) {
                    toastr["error"]("<trong>Ngày bắt đầu không được nhỏ hơn ngày hiện tại</strong>");
                    $('#dateFrom').val(firstDay.toDateInputValue());
                }
            });
            $dateNgayKetThucDatLich.change(function () {
                var dateF = $dateBatDauDatLich.val();
                var dataT = $(this).val();
                if ((new Date(dataT) <= new Date(dateF))) {
                    toastr["error"]("<trong>Ngày kết thúc không được nhỏ hơn hoặc bằng ngày bắt đầu</strong>");
                    $('#dateTo').val(lastDay.toDateInputValue());
                } else if (new Date(dataT) < now) {
                    toastr["error"]("<trong>Ngày kết thúc không được nhỏ hơn ngày hiện tại</strong>");
                    $('#dateTo').val(lastDay.toDateInputValue());
                }
            });

            $dataNgayThu.multiselect({
                maxHeight: 200,
                buttonWidth: '100%',
                buttonText: function (options, select) {
                    if (options.length === 0) {
                        return 'Chưa chọn';
                    }
                    else if (options.length > 5) {
                        return "Đã chọn (" + options.length + ")";
                    }
                    else {
                        var labels = [];
                        options.each(function () {
                            if ($(this).attr('label') !== undefined) {
                                labels.push($(this).attr('label'));
                            }
                            else {
                                labels.push($(this).html());
                            }
                        });
                        return labels.join(', ') + '';
                    }
                },
                onChange: function (option, checked, select) {
                    if ($dataNgayThu.val() === '' || $dataNgayThu.val() === null || $dataNgayThu.val() === undefined)
                        $hiidenDatLich.val("");
                    else
                        $hiidenDatLich.val($dataNgayThu.val());
                }
            });
            var dayOfMonth = [];
            for (i = 0; i < 31; i++) {
                var newdata = { label: (i + 1), value: i + 1 };
                dayOfMonth.push(newdata);
            }
            $dataNgayThu.multiselect('dataprovider', dayOfMonth);

            $chkTheoNgayThu.change(function () {
                var stage = $(this).is(':checked');
                if (stage) {
                    var dayOfWeek = [];
                    for (i = 0; i < 6; i++) {
                        dayOfWeek.push({ label: 'Thứ ' + (i + 2), value: i + 2 });
                    }
                    dayOfWeek.push({ label: 'Chủ Nhật', value: 1 });
                    $dataNgayThu.multiselect('dataprovider', dayOfWeek);
                }
                else {
                    var dayOfMonth = [];
                    for (i = 0; i < 31; i++) {
                        dayOfMonth.push({ label: (i + 1), value: i + 1 });
                    }
                    $dataNgayThu.multiselect('dataprovider', dayOfMonth);
                }
            });

        };
        //renderScheduTime();

        var renderMenuIconClick = function () {
            $btnCc.on('click', function () {
                $areaCc.toggle('slow');
            })
            $btnDatlich.on('click', function () {
                $areaDatLich.toggle('slow');
            })
            $btnFileDinhKem.on('click', function () {
                $areaFileDinhkem.toggle('slow');
            })
            $btnNoiDung.on('click', function () {
                $areaNoiDung.toggle('slow');
            });
        };
        //renderMenuIconClick();


        var renderTaginputCcandSender = function () {
            $.get('/Requests/GetEmps', null, function (data) {
                $txtCc.tagsinput({
                    itemValue: 'value', itemText: 'text',
                    typeahead: { source: data },
                });
                $txtNguoiThayThe.tagsinput({
                    itemValue: 'value', itemText: 'text',
                    typeahead: { source: data },
                    maxTags: 1,
                });

            });
        };
        //renderTaginputCcandSender();

        var renderClockCountTimeoutSesstion = function () {
            var time = timeOut * 60;
            function adown() {
                time = time - 1;
                $('#messageTimeOut').html('Còn lại ' + (time) + ' giây.');
                if (time == 60) {
                    toastr.options = { "newestOnTop": true, "showMethod": "show", "hideMethod": "hide", "positionClass": "toast-top-right", "timeOut": "100000", "extendedTimeOut": "100000", };
                    toastr['info']('<button type="button" id="SetNewTimeOut" class="btn btn-info">Đồng ý</button><span id="messageTimeOut">Còn lại ' + time + ' giây.</span>', 'Hết thời gian làm việc trên màn hình này bạn có muốn tiếp tục');
                    $('#SetNewTimeOut').click(function () {
                        $.get('/Requests/Keep_Session_Live', null, function (data) {
                            if (data == 1) {
                                time = timeOut * 60;
                            }
                        });
                    });
                }
                if (time == 0) {
                    $.get('/Users/Logout', null, function (data) {
                        var form = $("form#form-create");
                        form.attr("action", "/Users/Logout");
                        form.submit();
                    });
                }
                setTimeout(function () {
                    adown();
                }, 1000);
            }
            setTimeout(function () { adown(); }, 1000);
        };
        //renderClockCountTimeoutSesstion();

        var renderTreeLoaiHeThong = function () {
            $.get('/Requests/GetCatagoryTree', { type: 44 }, function (data) {
                var tree = [];

                $.each(data, function (index, item) {
                    var newdata = {
                        id: item.Id,
                        parent: item.ParentId,
                        text: item.Name,
                        type: 'Fa'
                    };
                    tree.push(newdata);
                });

                $treeLoaiHeThong.jstree({
                    "core": { data: tree },
                    "plugins": ["wholerow", "search", "types"],
                    "types": {
                        "Fa": { "icon": "/assets/images/Maps-Pin-Place-icon.png" },
                        "Chid": { "icon": "/assets/images/blue-home-icon.png" },
                    },
                }).on('changed.jstree', function (e, data) {
                    var i, j, name, id;
                    for (i = 0, j = data.selected.length; i < j; i++) {
                        name = data.instance.get_node(data.selected[i]).text;
                        id = data.instance.get_node(data.selected[i]).id;
                    }
                    $txtLoaiHeThong.val(name);
                    var dt = new Date();
                    $txtTieuDe.val(catagoryInfo.Description + " - " + name + shop + ' - ' + (dt.getMonth() + 1) + '/' + dt.getFullYear());
                    $hiddenGroupId.val(id);
                    $areaTreeLoaiHethong.hide();
                });

                var to = false;
                $txtSearchLoaiHeThong.keyup(function () {
                    if (to) { clearTimeout(to); }
                    to = setTimeout(function () {
                        var v = $txtSearchLoaiHeThong.val();
                        $treeLoaiHeThong.jstree(true).search(v);
                    }, 250);
                });


                $txtLoaiHeThong.click(function () {
                    $areaTreeLoaiHethong.toggle();
                    $txtSearchLoaiHeThong.focus();
                });

                $(document).mouseup(function (e) {
                    var region = $areaTreeLoaiHethong, txtRegion = $txtLoaiHeThong;

                    if (!region.is(e.target)
                        && region.has(e.target).length === 0 && !txtRegion.is(e.target)) {
                        region.hide();
                    }


                });
            });
        };
        //renderTreeLoaiHeThong();
    };
    render();
    var xFunction = {
        RenderMessage: function (type, message) {
            toastr.options = { "newestOnTop": true, "showMethod": "show", "hideMethod": "hide", "positionClass": "toast-top-right", "timeOut": "5000", "extendedTimeOut": "5000" };
            toastr[type]("<strong>" + message + "</strong>");
        },
        Render: function (info) {
            if (info.HasDetail == true) {
                $.get('/Requests/GetConfig', { id: info.Id, type: 'create' }, function (respone) {
                    if (respone !== null && respone !== '' && respone !== undefined && respone.length > 0) {
                        $areaChiTiet.show(); $areaDowloadAndImport.hide();
                        var responeHaveData = function () {
                            var now = new Date();
                            var oneDay = (now.getDate() < 10) ? '0' + now.getDate() : now.getDate() + "/" + ((now.getMonth() + 1) < 10) ? '0' + (now.getMonth() + 1) : (now.getMonth() + 1) + "/" + (now.getYear() + 1900);
                            dataFull = respone;
                            var colHeaders = []; columns = [];
                            var arrNameShops = [], shops;
                            var arrNameHc = [], devices;
                            var arrNameEmployees = [], employs;
                            var arrNameOriginal = [], originals;
                            $.get('/Requests/GetShopByRegion', { regionId: 0 }, function (respone) {
                                shops = respone;
                                $.each(respone, function (index, element) {
                                    arrNameShops.push(element.WarehouseCode + "--" + element.WarehouseCodeB1 + "--" + element.WarehouseName);
                                });
                            }).done(function () { });
                            $.get('/Requests/GetDevices', { type: 23 }, function (respone) {
                                devices = respone;
                                $.each(respone, function (index, item) {
                                    arrNameHc.push(item.ItemId + '--' + item.ItemName);
                                });
                            }).done(function () { });
                            $.get('/Requests/GetEmps', { ShopCode: '' }, function (respone) {
                                employs = respone;
                                $.each(respone, function (index, item) {
                                    arrNameEmployees.push(item.text);
                                });
                            }).done(function () { });
                            $.get('/Assignments/getOrganization', null, function (response) {
                                originals = response;
                                $.each(response, function (index, item) {
                                    arrNameOriginal.push(item.text);
                                });
                            }).done(function () { });
                            var Cog = function () {
                                dataHandsontable = [
                                    {
                                        ItemId: null,
                                        Quantity: null,
                                        Note: null,
                                        Status: null,
                                        Sum: null,
                                        QuantityAvaiable: null,
                                        EmpCode: null,
                                        Price: null,
                                        NoticeAlertId: null,
                                        ShopCode: null,
                                        OfficeCode: null,
                                        CustomerCode: null,
                                        CustomerName: null,
                                        SaleCode: null,
                                        Time1: null,
                                        Time2: null,
                                        Money1: null,
                                        Money2: null,
                                        ProductCode: null,
                                        ProductName: null,
                                        Imei: null,
                                        Time3: null,
                                        Money3: null,
                                        Money4: null,
                                        Approved: null,
                                        EmpCode1: null,
                                        EmpCode2: null,
                                        Quantity1: null,
                                        Quantity2: null,
                                        Quantity3: null,
                                        Quantity4: null,
                                        Property1: null,
                                        Property2: null,
                                        Property3: null,
                                        Property4: null,
                                    }];

                            };
                            Cog();
                            $.each(dataFull, function (index, item) {
                                if (item.DataType == 'text') {
                                    colHeaders.push(item.HeaderText);
                                    if (item.ColumnSave !== null && item.ColumnSave !== '' && item.ColumnSave !== undefined) {
                                        var options = item.ColumnSave.split(",");
                                        columns.push({ data: '' + item.Text + '', readOnly: !item.HasEditCreate, className: 'htLeft', type: 'dropdown', width: item.Weight, source: options });
                                    } else {
                                        columns.push({ data: '' + item.Text + '', readOnly: !item.HasEditCreate, className: 'htLeft', type: 'text', width: item.Weight });
                                    }

                                } else if (item.DataType == 'autocomplete') {
                                    if (item.Text == 'ItemId') {
                                        colHeaders.push(item.HeaderText);
                                        columns.push({ data: '' + item.Text + '', allowInvalid: false, readOnly: !item.HasEditCreate, type: 'autocomplete', source: arrNameHc, strict: false, width: item.Weight });
                                    } else if (item.Text == 'ShopCode') {
                                        colHeaders.push(item.HeaderText);
                                        columns.push({ data: '' + item.Text + '', allowInvalid: false, readOnly: !item.HasEditCreate, type: 'autocomplete', source: arrNameShops, strict: false, width: item.Weight });
                                    } else if ($.inArray(item.Text, ['EmpCode', 'EmpCode1', 'EmpCode2']) !== -1) {
                                        colHeaders.push(item.HeaderText);
                                        columns.push({ data: '' + item.Text + '', allowInvalid: false, readOnly: !item.HasEditCreate, type: 'autocomplete', source: arrNameEmployees, strict: false, width: item.Weight });
                                    } else if (item.Text == 'OfficeCode') {
                                        colHeaders.push(item.HeaderText);
                                        columns.push({ data: '' + item.Text + '', allowInvalid: false, readOnly: !item.HasEditCreate, type: 'autocomplete', source: arrNameOriginal, strict: false, width: item.Weight });
                                    }
                                } else if (item.DataType == 'numeric') {
                                    colHeaders.push(item.HeaderText);
                                    columns.push({ data: '' + item.Text + '', readOnly: !item.HasEditCreate, className: 'htRight', type: 'numeric', format: '0,0', width: item.Weight });
                                } else if (item.DataType == 'date') {
                                    colHeaders.push(item.HeaderText);
                                    columns.push({ data: '' + item.Text + '', readOnly: !item.HasEditCreate, type: 'date', dateFormat: 'MM/DD/YYYY', correctFormat: true, allowInvalid: true, defaultDate: oneDay, width: item.Weight });
                                } else if (item.DataType == 'checkbox') {
                                    colHeaders.push(item.HeaderText);
                                    columns.push({ data: '' + item.Text + '', readOnly: !item.HasEditCreate, className: 'htLeft', type: 'checkbox', width: item.Weight, checkedTemplate: true, uncheckedTemplate: false });
                                }
                            });
                            var setting = function () {
                                return {
                                    //=================================Data=======
                                    data: dataHandsontable,
                                    //================================Cols=======
                                    maxCols: dataFull.length,
                                    minCols: dataFull.length,
                                    startCols: dataFull.length,
                                    minSpareCols: 0,
                                    allowInsertColumn: false,
                                    allowRemoveColumn: false,
                                    autoColumnSize: true,
                                    autoWrapCol: true,
                                    columnSorting: false,
                                    colWidths: 'undefined',
                                    copyColsLimit: dataFull.length,
                                    currentColClassName: 'currentCol', //currentCol
                                    fixedColumnsLeft: 0,
                                    manualColumnMove: false,
                                    manualColumnResize: true,
                                    viewportColumnRenderingOffset: dataFull.length,
                                    sortIndicator: true,
                                    //================================Rows=======
                                    allowInsertRow: true,
                                    allowRemoveRow: true,
                                    autoRowSize: true,
                                    autoWrapRow: true,
                                    copyRowsLimit: 1000,
                                    currentRowClassName: 'currentRow',
                                    fixedRowsTop: 0,
                                    manualRowMove: false,
                                    manualRowResize: true,
                                    rowHeaders: true,
                                    minSpareRows: 10,
                                    //startRows: 10,
                                    //viewportRowRenderingOffset : 'auto',
                                    //maxRows: 'Infinity',
                                    //minRows: 'Infinity',
                                    //================================Oder=======
                                    allowInvalid: false,
                                    stretchH: 'all',
                                    commentedCellClassName: 'htCommentCell',
                                    comments: true,
                                    contextMenu: true,
                                    copyable: true,
                                    customBorders: false,
                                    debug: false,
                                    disableVisualSelection: true,
                                    enterBeginsEditingBoolean: true,
                                    fillHandle: true,
                                    outsideClickDeselects: true,
                                    fragmentSelection: false,
                                    groups: false,
                                    invalidCellClassName: 'htInvalid',
                                    mergeCells: false,
                                    multiSelect: true,
                                    noWordWrapClassName: 'htNoWrap',
                                    placeholder: false,
                                    placeholderCellClassName: 'htPlaceholder',
                                    readOnlyCellClassName: 'htDimmed',
                                    search: false,
                                    trimWhitespace: true,
                                    undo: true,
                                    formulas: true,
                                    wordWrap: true,
                                    copyPaste: false,
                                    //====================================Oder ==============================================
                                    colHeaders: colHeaders,
                                    columns: columns,
                                };
                            };
                            hot = new Handsontable(container, setting());
                            hot.selectCell(0, 0, 0, 0);
                            var updateSettingForValidate = function (id) {
                                if ($.inArray(id, [72, 83, 84, 71, 88, 89, 30]) !== -1) {
                                    hot.updateSettings({
                                        beforeChange: function (changes, source) {
                                            if (source == 'edit') {
                                                $.each(changes, function (index, item) {
                                                    if (item[1] == 'ProductCode' && item[3] !== null && item[3] !== undefined) {
                                                        $.get('/Requests/GetProduct', { productCode: item[3] }, function (respone) {
                                                            if (respone !== '') {
                                                                hot.setDataAtRowProp(item[0], 'ProductCode', respone[0].ProductCode, 'not');
                                                                hot.setDataAtRowProp(item[0], 'ProductName', respone[0].ProductName, 'not');
                                                            } else {
                                                                hot.setDataAtRowProp(item[0], 'ProductCode', null, 'not');
                                                                hot.setDataAtRowProp(item[0], 'ProductName', null, 'not');
                                                                XFunction.RenderMessage('error', 'Sản phẩm không tồn tại');
                                                            }
                                                        });
                                                    }
                                                });
                                            }
                                        }
                                    });
                                }
                            };
                            updateSettingForValidate(info.Id);

                            if (info.Id === 89) {
                                $areaDowloadAndImport.show();
                                hot.updateSettings({
                                    minSpareRows: 0,
                                    fixedColumnsLeft: 1,
                                    columns: [
                                        { allowInvalid: false, data: "ShopCode", readOnly: true, source: arrNameShops, strict: false, type: "autocomplete" },
                                        { className: "htLeft", data: "ProductCode", readOnly: true, type: "text" },
                                        { className: "htLeft", data: "ProductName", readOnly: true, type: "text" },
                                        { className: "htLeft", data: "Imei", readOnly: true, type: "text", width: 250 },
                                        { className: "htRight", data: "Quantity", readOnly: true, type: "numeric", format: "0,0" },
                                        { className: "htRight", data: "Quantity1", readOnly: true, type: "numeric", format: "0,0" },
                                    ]
                                });
                                function contructExecl89() {
                                    //$('#WaitDialog').modal('show');
                                    //$.get('/Requests/GetProducts', {}, function (respone) {
                                    //    if (respone !== null && respone !== '' && respone !== undefined) {
                                    //        dataItemCode = respone;
                                    //    }
                                    //    $('#WaitDialog').modal('hide');
                                    //});
                                    var X = XLSX;
                                    function fixdata(data) {
                                        var o = "", l = 0, w = 10240;
                                        for (; l < data.byteLength / w; ++l) o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w, l * w + w)));
                                        o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w)));
                                        return o;
                                    }
                                    function to_json(workbook) {
                                        var result = {};
                                        workbook.SheetNames.forEach(function (sheetName) {
                                            var roa = X.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);
                                            if (roa.length > 0) {
                                                result[sheetName] = roa;
                                            }
                                        });
                                        return result;
                                    }
                                    $('#FileSupport').change(function (event) {
                                        $('#WaitDialog').modal('show');
                                        var fileValid = false;
                                        fileValid = Validater.endFile($('#FileSupport').val());

                                        if (fileValid) {
                                            var files = event.target.files;
                                            var f = files[0];
                                            {
                                                var reader = new FileReader();
                                                var name = f.name;
                                                reader.onload = function (e) {
                                                    var data = e.target.result;
                                                    var arr = fixdata(data);
                                                    wb = X.read(btoa(arr), { type: 'base64' });
                                                    var wb;
                                                    var output = to_json(wb);
                                                    var dataH = [];
                                                    if (output.Sheet1 !== null && output.Sheet1 !== '' && output.Sheet1 !== undefined) {
                                                        dataPages = output.Sheet1;
                                                        var dataInvalid = [];
                                                        $.each(dataPages, function (index, item) {
                                                            var shop = $.grep(shops, function (elemnet, indexZ) {
                                                                return elemnet.WarehouseCodeB1 === item.MaShop;
                                                            });
                                                            //var sp = $.grep(dataItemCode, function (elemnetX, indexZ) {
                                                            //    return elemnetX.ProductCode === item.MaTaiSan;
                                                            //});
                                                            item.SoImei = item.SoImei === undefined ? '' : item.SoImei;
                                                            item.TonHeThong = item.TonHeThong === undefined ? 0 : item.TonHeThong;
                                                            item.TonThucTe = item.TonThucTe === undefined ? item.TonHeThong : item.TonThucTe;
                                                            if (shop !== null && shop !== undefined && shop !== '' && shop.length > 0) {
                                                                item.MaShop = shop[0].WarehouseCode + '--' + shop[0].WarehouseCodeB1 + '--' + shop[0].WarehouseName;
                                                            } else {
                                                                item.MaShop = '';
                                                            }
                                                            //if (sp !== null && sp !== undefined && sp !== '' && sp.length > 0) {
                                                            //    item.TenTaiSan = sp[0].ProductName;
                                                            //} else {
                                                            //    item.TenTaiSan = '';
                                                            //}
                                                        });
                                                        $.each(dataPages, function (index, item) {
                                                            if (index < pageSize) {
                                                                dataH.push(
                                                                    {
                                                                        'ProductCode': item.MaTaiSan === undefined ? '' : item.MaTaiSan,
                                                                        'ProductName': item.TenTaiSan === undefined ? '' : item.TenTaiSan,
                                                                        'Imei': item.SoImei === undefined ? '' : item.SoImei,
                                                                        'Quantity': item.TonHeThong === undefined ? '' : item.TonHeThong,
                                                                        'Quantity1': item.TonThucTe === undefined ? '' : item.TonThucTe,
                                                                        'ShopCode': item.MaShop === undefined ? '' : item.MaShop
                                                                    });
                                                            }

                                                        });
                                                        var page = Math.ceil(parseInt(output.Sheet1.length) / pageSize);
                                                        $('#captionHot1').html('');
                                                        for (i = 0; i < page; i++) {
                                                            $('#captionHot1').append('<a id="PageM' + (i + 1) + '" style="cursor:pointer" data-value="' + (i) + '">' + (i + 1) + '</a> ' + ' || ');
                                                            $('#PageM' + (i + 1)).on('click', function () {
                                                                var page = $(this).attr('data-value');
                                                                var start = page * pageSize;
                                                                var data = [];
                                                                $.each(dataPages, function (index, item) {
                                                                    if (index >= start && index < (start + pageSize)) {
                                                                        data.push(
                                                                            {
                                                                                'ProductCode': item.MaTaiSan === undefined ? '' : item.MaTaiSan,
                                                                                'ProductName': item.TenTaiSan === undefined ? '' : item.TenTaiSan,
                                                                                'Imei': item.SoImei === undefined ? '' : item.SoImei,
                                                                                'Quantity': item.TonHeThong === undefined ? '' : item.TonHeThong,
                                                                                'Quantity1': item.TonThucTe === undefined ? '' : item.TonThucTe,
                                                                                'ShopCode': item.MaShop === undefined ? '' : item.MaShop
                                                                            });
                                                                    }

                                                                });
                                                                hot.loadData(data);
                                                            });
                                                        };
                                                    }
                                                    hot.loadData(dataH);
                                                };
                                                reader.readAsArrayBuffer(f);
                                            }
                                        }
                                        $('#FileSupport').val('');
                                        $('#WaitDialog').modal('hide');
                                    });
                                }
                                contructExecl89();
                                $btnSend.on('click', function () {
                                    var myData = dataPages;
                                    var datainvalid = [];
                                    var arrName = ['MaShop', 'MaTaiSan', 'TenTaiSan', 'TonHeThong'];
                                    $.each(myData, function (index, item) {
                                        var check = true;
                                        $.each(arrName, function (indexZ, element) {
                                            if (item[element] === '' || item[element] === null || item[element] === undefined) {
                                                check = false;
                                            }
                                        });
                                        if (check === false) {
                                            datainvalid.push(item);
                                        }
                                    });
                                    if (myData.length == 0) {
                                        xFunction.RenderMessage('error', 'Chi tiết điền chưa đầy đủ'); return false;
                                    }
                                    if (datainvalid.length > 0) {
                                        xFunction.RenderMessage('error', 'Chi tiết điền chưa đầy đủ'); return false;
                                    }
                                    var tableReturn = [];
                                    $.each(myData, function (index, item) {
                                        tableReturn.push({
                                            'ShopCode': item.MaShop.split("--")[0],
                                            'ProductCode': item.MaTaiSan,
                                            'ProductName': item.TenTaiSan,
                                            'Imei': item.SoImei,
                                            'Quantity': item.TonHeThong,
                                            'Quantity1': item.TonThucTe
                                        });
                                    });

                                    $('#Details').val(JSON.stringify(tableReturn));
                                    $('#DetailsLimited').val(JSON.stringify(''));

                                    $('#Description').val(catagoryInfo.Description);
                                    $('#TitleRequest').val($('#Title').val());
                                    $('#typeId').val(catagoryInfo.Id);

                                    var form = $("form#form-create");
                                    form.attr("action", "/Requests/Create");
                                    form.submit();
                                    $('#WaitDialog').modal('show');
                                });
                            } else {
                                $btnSend.on('click', function () {
                                    var table = [];
                                    var tableReturn = [];
                                    var tableInvalid = [];
                                    var colRequired = [];
                                    $.each(hot.getData(), function (index, item) {
                                        var check = false;
                                        $.each(item, function (index, item) {
                                            if (item !== null && item !== "") {
                                                check = true;
                                            }
                                        });
                                        check == true ? table.push(item) : '';
                                    })
                                    $.each(dataFull, function (index, item) {
                                        if (item.HasRequire) {
                                            colRequired.push(item.Text);
                                        }
                                    });
                                    $.each(table, function (index, item) {
                                        var chek = true;
                                        $.each(colRequired, function (index, element) {
                                            if (item[element] === '' || item[element] === null || item[element] === undefined) {
                                                chek = false;
                                            }
                                        });
                                        if (chek == true) {
                                            tableReturn.push(item);
                                        } else {
                                            tableInvalid.push(item);
                                        }
                                    });
                                    if (tableReturn.length === 0) {
                                        xFunction.RenderMessage('error', 'Chi tiết chưa hợp lệ'); return false;
                                    }
                                    if (tableInvalid.length > 0) {
                                        xFunction.RenderMessage('error', 'Chi tiết điền chưa đầy đủ'); return false;
                                    }
                                    //===========================validate
                                    var dataInvalid = [];
                                    if ($.inArray(info.Id, [72, 83, 84]) !== -1) {
                                        $.each(tableReturn, function (index, item) {
                                            if (item.Property1 === 'Cùng shop') {
                                                item.ShopCode = null;
                                            } else if (item.Property1 === 'Khác Shop' && (item.ShopCode === null || item.ShopCode === undefined || item.ShopCode === '')) {
                                                dataInvalid.push(item);
                                            }
                                        });
                                        if (dataInvalid.length > 0) XFunction.RenderMessage('error', 'Khác shop phải chọn Shop');
                                    }
                                    if (dataInvalid.length > 0) { return false; }
                                    //===========================validate
                                    $.each(tableReturn, function (index, item) {
                                        if (item.ShopCode !== null && item.ShopCode !== '' && item.ShopCode !== undefined) {
                                            var shop = $.grep(shops, function (element, index) {
                                                return (element.WarehouseCode + '--' + element.WarehouseCodeB1 + '--' + element.WarehouseName) == item.ShopCode;
                                            });
                                            item.ShopCode = shop[0].WarehouseCode;
                                        }
                                        if (item.ItemId !== null && item.ItemId !== '' && item.ItemId !== undefined) {
                                            var device = $.grep(devices, function (element, index) {
                                                return (element.ItemId + '--' + element.ItemName) == item.ItemId;
                                            });
                                            item.ItemId = device[0].ItemId;
                                        }
                                        if (item.EmpCode !== null && item.EmpCode !== '' && item.EmpCode !== undefined) {
                                            var employ = $.grep(employs, function (element, index) {
                                                return (element.text) == item.EmpCode;
                                            });
                                            item.EmpCode = employ[0].value;
                                        }
                                        if (item.OfficeCode !== null && item.OfficeCode !== '' && item.OfficeCode !== undefined) {
                                            var office = $.grep(originals, function (element, index) {
                                                return (element.text) == item.OfficeCode;
                                            });
                                            item.OfficeCode = office[0].id;
                                        }
                                    });

                                    $('#Details').val(JSON.stringify(tableReturn));
                                    $('#DetailsLimited').val(JSON.stringify(''));

                                    $('#Description').val(catagoryInfo.Description);
                                    $('#TitleRequest').val($('#Title').val());
                                    $('#typeId').val(catagoryInfo.Id);

                                    var form = $("form#form-create");
                                    form.attr("action", "/Requests/Create");
                                    form.submit();
                                    $('#WaitDialog').modal('show');
                                });
                            }
                        };
                        responeHaveData();
                    } else {
                        xFunction.RenderMessage('error', 'Chưa cấu hình cho loại này');
                        return false;
                    }
                });
            } else {
                var renderNotDetail = function () {
                    $areaNoiDung.show();
                    $btnSend.on('click', function () {
                        $('#Details').val(JSON.stringify(''));
                        $('#DetailsLimited').val(JSON.stringify(''));

                        $('#Description').val(catagoryInfo.Description);
                        $('#TitleRequest').val($('#Title').val());
                        $('#typeId').val(catagoryInfo.Id);

                        var form = $("form#form-create");
                        form.attr("action", "/Requests/Create");
                        form.submit();
                        $('#WaitDialog').modal('show');
                    });
                };
                renderNotDetail();
            }
        },
    };


    // bao và gia han timeOut
    var time = timeOut * 60;
    function adown() {
        time = time - 1;
        $('#messageTimeOut').html('Còn lại ' + (time) + ' giây.');
        if (time == 60) {
            toastr.options = { "newestOnTop": true, "showMethod": "show", "hideMethod": "hide", "positionClass": "toast-top-right", "timeOut": "100000", "extendedTimeOut": "100000", };
            toastr['info']('<button type="button" id="SetNewTimeOut" class="btn btn-info">Đồng ý</button><span id="messageTimeOut">Còn lại ' + time + ' giây.</span>', 'Hết thời gian làm việc trên màn hình này bạn có muốn tiếp tục');
            $('#SetNewTimeOut').click(function () {
                $.get('/Requests/Keep_Session_Live', null, function (data) {
                    if (data == 1) {
                        time = timeOut * 60;
                    }
                });
            });
        }
        if (time == 0) {
            $.get('/Users/Logout', null, function (data) {
                var form = $("form#form-create");
                form.attr("action", "/Users/Logout");
                form.submit();
            });
        }
        setTimeout(function () {
            adown();
        }, 1000);
    }
    setTimeout(function () { adown(); }, 1000);
    //===============================================================================
    XFunction.RenderDataDayOfWeek();
    XFunction.RenderDataDayOfMought();

    XFunction.RenderSchedu();
    XFunction.RenderScheduData();

    XFunction.RenderOtherEvent();

    XFunction.RenderTreeChooseCatagories();
    XFunction.RenderTagInputCc();
    //===============================================================================
    /*__contructer__for */
    //▼  Add - LuanNT44 - 11/04/2020 - 24 - edit
    function contruct_24() {
        $('#CSVC_24').removeAttr('hidden');
        $.get('/Requests/CallApiCSVC_24_Hangmuc_1', { param: '?_limit=-1' }, function (respone_hangmuc) {
            $.each(respone_hangmuc, function (index, item) {
                item.name = item.name.trim();
            })
            console.log(respone_hangmuc);
            var respone_hangmuc_2 = [];
            $.ajax({
                type: "GET",
                url: "/Requests/CallApiCSVC_24_Hangmuc_2",
                data: { param: '?_limit=-1' },
                async: false,
                success: function (data) {
                    respone_hangmuc_2 = data;
                    $.each(respone_hangmuc_2, function (index, item) {
                        item.name = item.name.trim();
                    })
                    console.log(respone_hangmuc_2);
                },
                error: function () {
                    XFunction.RenderMessage('error', 'Load api error !');
                    return;
                }
            });
            respone_hangmuc_2 = $.grep(respone_hangmuc_2, function (item) { return item.category_1 !== null && item.category_1 !== undefined && item.category_1 !== '' });
            var responseChitiethangmuc = [];
            $.ajax({
                type: "GET",
                url: "/Requests/CallApiCSVC_24_ChitietHangmuc",
                data: { param: '?_limit=-1' },
                async: false,
                success: function (data) {
                    responseChitiethangmuc = data;
                    $.each(responseChitiethangmuc, function (index, item) {
                        item.name = item.name.trim();
                        if (item.min_price == null || item.min_price == undefined || item.min_price == '') {
                            item.min_price = item.std_price;
                        }
                        if (item.max_price == null || item.max_price == undefined || item.max_price == '') {
                            item.max_price = item.std_price;
                        }
                    })
                    console.log(responseChitiethangmuc);
                },
                error: function () {
                    XFunction.RenderMessage('error', 'Load api error !');
                    return;
                }
            });
            responseChitiethangmuc = $.grep(responseChitiethangmuc, function (item) { return item.category_2 !== null && item.category_2 !== undefined && item.category_2 !== '' });
            var responseTinhThanh = [];
            $.ajax({
                type: "GET",
                url: "/Requests/CallApiCSVC_24_TinhThanh",
                data: { param: '?_limit=-1' },
                async: false,
                success: function (data) {
                    console.log(data);
                    responseTinhThanh = data;
                },
                error: function () {
                    XFunction.RenderMessage('error', 'Load api error !');
                    return;
                }
            });

            var responseTinhThanhByUser = '';
            $.ajax({
                type: "GET",
                url: "/Requests/Calllog_GetProvincesByEmp_24",
                data: null,
                async: false,
                success: function (data) {
                    console.log(data);
                    responseTinhThanhByUser = data[0].ProvinceCode;
                },
                error: function () {
                    XFunction.RenderMessage('error', 'Load Provinces by user error !');
                    return;
                }
            });
            //console.log(responseTinhThanhByUser);
            if (respone_hangmuc == '' || respone_hangmuc == null || respone_hangmuc == undefined) {
                XFunction.RenderMessage('error', 'Load api hạng mục 1 error !');
                return false;
            }
            if (respone_hangmuc_2 == '' || respone_hangmuc_2 == null || respone_hangmuc_2 == undefined) {
                XFunction.RenderMessage('error', 'Load api hạng mục 2 error !');
                return false;
            }
            if (responseChitiethangmuc == '' || responseChitiethangmuc == null || responseChitiethangmuc == undefined) {
                XFunction.RenderMessage('error', 'Load api chi tiết hạng mục error !');
                return false;
            }
            if (responseTinhThanh == '' || responseTinhThanh == null || responseTinhThanh == undefined) {
                XFunction.RenderMessage('error', 'Load api tỉnh thành error !');
                return false;
            }
            if (responseTinhThanhByUser == '' || responseTinhThanhByUser == null || responseTinhThanhByUser == undefined) {
                XFunction.RenderMessage('error', 'Chưa có thông tin tỉnh thành của sender !');
                return false;
            }
            $('.compose-message').hide();
            $('#detail').show();

            $('#sum-total').hide();   // not support dowload file
            $('#handsontableEx').css('overflow', 'hidden');
            $areaDowloadAndImport.show();
            $('#FileSupport').hide();
            var ImageDelete = [];
            var dates = {
                convert: function (d) {
                    // Converts the date in d to a date-object. The input can be:
                    //   a date object: returned without modification
                    //  an array      : Interpreted as [year,month,day]. NOTE: month is 0-11.
                    //   a number     : Interpreted as number of milliseconds
                    //                  since 1 Jan 1970 (a timestamp) 
                    //   a string     : Any format supported by the javascript engine, like
                    //                  "YYYY/MM/DD", "MM/DD/YYYY", "Jan 31 2009" etc.
                    //  an object     : Interpreted as an object with year, month and date
                    //                  attributes.  **NOTE** month is 0-11.
                    return (
                        d.constructor === Date ? d :
                            d.constructor === Array ? new Date(d[0], d[1], d[2]) :
                                d.constructor === Number ? new Date(d) :
                                    d.constructor === String ? new Date(d) :
                                        typeof d === "object" ? new Date(d.year, d.month, d.date) :
                                            NaN
                    );
                },
                compare: function (a, b) {
                    // Compare two dates (could be of any type supported by the convert
                    // function above) and returns:
                    //  -1 : if a < b
                    //   0 : if a = b
                    //   1 : if a > b
                    // NaN : if a or b is an illegal date
                    // NOTE: The code inside isFinite does an assignment (=).
                    return (
                        isFinite(a = this.convert(a).valueOf()) &&
                            isFinite(b = this.convert(b).valueOf()) ?
                            (a > b) - (a < b) :
                            NaN
                    );
                },
                inRange: function (d, start, end) {
                    // Checks if date in d is between dates in start and end.
                    // Returns a boolean or NaN:
                    //    true  : if d is between start and end (inclusive)
                    //    false : if d is before start or after end
                    //    NaN   : if one or more of the dates is illegal.
                    // NOTE: The code inside isFinite does an assignment (=).
                    return (
                        isFinite(d = this.convert(d).valueOf()) &&
                            isFinite(start = this.convert(start).valueOf()) &&
                            isFinite(end = this.convert(end).valueOf()) ?
                            start <= d && d <= end :
                            NaN
                    );
                }
            }
            var arrayHangmuc = [], arrayHangmuc2 = [];
            if (respone_hangmuc != null && respone_hangmuc != undefined && respone_hangmuc != '') {
                $.each(respone_hangmuc, function (index, item) {
                    arrayHangmuc.push(item.code + '-' + item.name)
                })
            }
            arrayHangmuc = Array.from(new Set(arrayHangmuc.map(JSON.stringify))).map(JSON.parse); console.log(arrayHangmuc)
            function endFile(name) {
                var extension = name.split('.').pop().toLowerCase();
                if ($.inArray(extension, ['jpg', 'png', 'gif', 'jpeg']) == -1) {
                    return false;
                }
                else {
                    return true;
                }
            }

            function strip_tags(input, allowed) {
                var tags = /<\/?([a-z][a-z0-9]*)\b[^>]*>/gi,
                    commentsAndPhpTags = /<!--[\s\S]*?-->|<\?(?:php)?[\s\S]*?\?>/gi;

                // making sure the allowed arg is a string containing only tags in lowercase (<a><b><c>)
                allowed = (((allowed || "") + "").toLowerCase().match(/<[a-z][a-z0-9]*>/g) || []).join('');

                return input.replace(commentsAndPhpTags, '').replace(tags, function ($0, $1) {
                    return allowed.indexOf('<' + $1.toLowerCase() + '>') > -1 ? $0 : '';
                });
            }
            function safeHtmlRenderer(instance, td, row, col, prop, value, cellProperties) {
                var escaped = Handsontable.helper.stringify(value);
                escaped = strip_tags(escaped, '<em><b><strong><a><big><i><br><img><button><div>');
                td.innerHTML = escaped;
                td.style.textAlign = 'left';
                return td;
            }
            var dataGet = [{
                Nhomhangmuc: "",
                Nhomhangmuc2: "",
                Chitiethangmuc: "",
                Ngaydukien: "",
                Donvi: "",
                Soluong: "",
                Dongia: "",
                DongiaThuc: "",
                Thanhtien: "",
                Ghichu: "",
                isCSVC: "",
                idNhomHangmuc: "",
                idNhomHangmuc2: "",
                idChiTietHangmuc: "",
                FollowCSVC: "",
                NCC: "",
                SDT_NCC: "",
                Ghichu_BD: "",
                Ghichu_ThiCong: "",
                Ghichu_NghiemThu: "",
                Dongia_Min: "",
                Dongia_Max: "",
                DataFiles1: "",
                ColHtml_BD: "",
                ColHtmlArray1: "",
                ListNameFile1: "",
                ListNameFileArray1:"",
                DataFiles2: "",
                ColHtml_ThiCong: "",
                ListNameFile2: "",
                DataFiles3: "",
                ColHtml_NghiemThu: "",
                ListNameFile3: ""
            }];
            var actionRendererUpload_24 = function (instance, td, row, col, prop, value, cellProperties) {
                var valid = instance.getDataAtRowProp(row, 'Nhomhangmuc');
                if (prop == 'Hinh_BD') {   // nút up load hình ảnh ban đầu
                    var $button = '';
                    if (valid === null || valid === '' || valid === undefined) {
                        $button = '';
                    }
                    else {
                        $button = $('<i id="r' + row + '" data-value="' + row + '" class="fa fa-cloud-upload" aria-hidden="true" style="color:green"></i>');
                        $button.click(function () {
                            var row = $(this).attr('data-value');
                            $('#uploadDetails').attr('data-value', row).attr('data-id', 'Hinh_BD');
                            $('#uploadDetails').val('');
                            $('#uploadDetails').trigger('click');
                        });
                    }
                    $button != '' ?
                        $(td).empty().append($button) :
                        $(td).empty().append('');
                }
                else if (prop == 'Hinh_ThiCong') {   // nút up load hình ảnh thi công
                    var $button = '';
                    if (valid === null || valid === '' || valid === undefined) {
                        $button = '';
                    }
                    else {
                        $button = $('<i id="r' + row + '" data-value="' + row + '" class="fa fa-cloud-upload" aria-hidden="true" style="color:green"></i>');
                        $button.click(function () {
                            XFunction.RenderMessage('error', 'Không được up hình bước tạo !'); return;
                            //var row = $(this).attr('data-value');
                            //$('#uploadDetails').attr('data-value', row).attr('data-id', 'Hinh_ThiCong');
                            //$('#uploadDetails').val('');
                            //$('#uploadDetails').trigger('click');
                        });
                    }
                    $button != '' ?
                        $(td).empty().append($button) :
                        $(td).empty().append('');
                }
                else if (prop == 'Hinh_NghiemThu') {   // nút up load hình ảnh nghiệm thu
                    var $button = '';
                    if (valid === null || valid === '' || valid === undefined) {
                        $button = '';
                    }
                    else {
                        $button = $('<i id="r' + row + '" data-value="' + row + '" class="fa fa-cloud-upload" aria-hidden="true" style="color:green"></i>');
                        $button.click(function () {
                            XFunction.RenderMessage('error', 'Không được up hình bước tạo !'); return;
                            //var row = $(this).attr('data-value');
                            //$('#uploadDetails').attr('data-value', row).attr('data-id', 'Hinh_NghiemThu');
                            //$('#uploadDetails').val('');
                            //$('#uploadDetails').trigger('click');
                        });
                    }
                    $button != '' ?
                        $(td).empty().append($button) :
                        $(td).empty().append('');
                }
                else {
                    $(td).empty().append('');
                }
            };
            $('#uploadDetails').on('change', function () {
                var colline = $(this).attr('data-id'); //console.log(colline)
                if (colline == 'Hinh_BD') {

                    var rowline = $(this).attr('data-value');
                    var selectedFiles = $(this)[0].files;
                    //console.log(selectedFiles)
                    $.each(dataGet, function (index, item) {
                        if (rowline == index) {
                            var dataFiles = [];

                            if (item.DataFiles1 !== null && item.DataFiles1 !== undefined && item.DataFiles1 !== '' && item.DataFiles1.length > 0) {
                                dataFiles = item.DataFiles1;
                            }
                            var listHtml = [];
                            var lisDataFilesName = [];

                            $.each(selectedFiles, function (index, item) {

                                var d = new Date();
                                var n = d.getTime();
                                selectedFiles[index].nameNew = n.toString() + '_' + selectedFiles[index].name;

                                dataFiles.push(selectedFiles[index]);
                                lisDataFilesName.push('/Uploads/FileAttachs/' + selectedFiles[index].nameNew);
                                var tmppath = URL.createObjectURL(selectedFiles[index]);
                                if (endFile(selectedFiles[index].nameNew)) {
                                    listHtml.push('<div class="ULH"><a href="' + tmppath + '" target="_blank" class="renderlink" data-id="' + rowline + '" data-value="' + selectedFiles[index].nameNew + '" ><img class="IMG" src="' + tmppath + '"height="42" width="42" data-id="' + rowline + '" data-value="' + selectedFiles[index].nameNew + '" ></a><button class="BTN" type="button" class="btn btn-success" data-id="' + rowline + '" data-lisDataFilesName="' + selectedFiles[index].nameNew + '" onclick="DeleteIMGDB(this)">X</button></div>');
                                }
                            });

                            if (item.ColHtmlArray1 != '' && item.ColHtmlArray1 != undefined && item.ColHtmlArray1 != null && item.ColHtmlArray1 != 'null') {
                                
                                item.ColHtmlArray1 = item.ColHtmlArray1.concat(listHtml);
                            }
                            else {
                                item.ColHtmlArray1 = listHtml;
                            }
                            
                            if (item.ListNameFileArray1 != '' && item.ListNameFileArray1 != undefined && item.ListNameFileArray1 != null && item.ListNameFileArray1 != 'null') {
                                item.ListNameFileArray1 = item.ListNameFileArray1.concat(lisDataFilesName);
                            }
                            else {
                                item.ListNameFileArray1 = lisDataFilesName;
                            }
                            item.DataFiles1 = dataFiles;
                            if (item.ColHtml_BD == null || item.ColHtml_BD == undefined) {
                                item.ColHtml_BD = '';
                            }
                            item.ColHtml_BD += listHtml.join(' ');
                            if (item.ListNameFile1 == null || item.ListNameFile1 == undefined) {
                                item.ListNameFile1 = '';
                            }
                            item.ListNameFile1 += ',' + lisDataFilesName.join(',');
                        }
                    });
                    hot.render();
                    $(this).val('');
                    //console.log(dataGet);
                }
                if (colline == 'Hinh_ThiCong') {
                    var rowline = $(this).attr('data-value');
                    var selectedFiles = $(this)[0].files;
                    //console.log(selectedFiles)
                    $.each(dataGet, function (index, item) {
                        if (rowline == index) {
                            var dataFiles = [];

                            if (item.DataFiles2 !== null && item.DataFiles2 !== undefined && item.DataFiles2 !== '' && item.DataFiles2.length > 0) {
                                dataFiles = item.DataFiles2;
                            }
                            var listHtml = [];
                            var lisDataFilesName = [];

                            $.each(selectedFiles, function (index, item) {

                                var d = new Date();
                                var n = d.getTime();
                                selectedFiles[index].nameNew = n.toString() + '_' + selectedFiles[index].name;

                                dataFiles.push(selectedFiles[index]);
                                lisDataFilesName.push('/Uploads/FileAttachs/' + selectedFiles[index].nameNew);
                                var tmppath = URL.createObjectURL(selectedFiles[index]);
                                if (endFile(selectedFiles[index].nameNew)) {
                                    listHtml.push('<div class="ULH"><a href="' + tmppath + '" target="_blank" class="renderlink" data-id="' + rowline + '" data-value="' + selectedFiles[index].nameNew + '" ><img class="IMG" src="' + tmppath + '"height="42" width="42" data-id="' + rowline + '" data-value="' + selectedFiles[index].nameNew + '" ></a></div>');
                                }
                            });
                            item.DataFiles2 = dataFiles;
                            item.ColHtml_ThiCong = listHtml.join(' ');
                            item.ListNameFile2 = lisDataFilesName.join(',');
                        }
                    });
                    hot.render();
                    $(this).val('');
                    //console.log(rowline, rowCol);
                }
                if (colline == 'Hinh_NghiemThu') {

                    var rowline = $(this).attr('data-value');
                    var selectedFiles = $(this)[0].files;
                    //console.log(selectedFiles)
                    $.each(dataGet, function (index, item) {
                        if (rowline == index) {
                            var dataFiles = [];

                            if (item.DataFiles2 !== null && item.DataFiles2 !== undefined && item.DataFiles2 !== '' && item.DataFiles2.length > 0) {
                                dataFiles = item.DataFiles2;
                            }
                            var listHtml = [];
                            var lisDataFilesName = [];

                            $.each(selectedFiles, function (index, item) {

                                var d = new Date();
                                var n = d.getTime();
                                selectedFiles[index].nameNew = n.toString() + '_' + selectedFiles[index].name;

                                dataFiles.push(selectedFiles[index]);
                                lisDataFilesName.push('/Uploads/FileAttachs/' + selectedFiles[index].nameNew);
                                var tmppath = URL.createObjectURL(selectedFiles[index]);
                                if (endFile(selectedFiles[index].nameNew)) {
                                    listHtml.push('<div class="ULH"><a href="' + tmppath + '" target="_blank" class="renderlink" data-id="' + rowline + '" data-value="' + selectedFiles[index].nameNew + '" ><img class="IMG" src="' + tmppath + '"height="42" width="42" data-id="' + rowline + '" data-value="' + selectedFiles[index].nameNew + '" ></a></div>');
                                }
                            });
                            item.DataFiles3 = dataFiles;
                            item.ColHtml_NghiemThu = listHtml.join(' ');
                            item.ListNameFile3 = lisDataFilesName.join(',');
                        }
                    });
                    hot.render();
                    $(this).val('');
                    //console.log(rowline, rowCol);
                }
            });
            DeleteIMGDB = function (data) {
                var NameIMG = $(data).context.dataset.lisdatafilesname; // lấy tên từ html (data-...)
                var indexL = $(data).context.dataset.id;
                var indexDelete;
                var checkhl = true;

                if (1 == 2) {
                    XFunction.RenderMessage("error", "Không được xoá hình ảnh đã đính kèm lên calllog!("); return;
                }
                else {
                    $.each(dataGet, function (index, item) {
                        if (item.ListNameFileArray1 !== null && item.ListNameFileArray1 !== '' && item.ListNameFileArray1 !== undefined && index == indexL)
                            $.each(item.ListNameFileArray1, function (index, item) {
                                if (item == '/Uploads/FileAttachs/'+NameIMG) {
                                    indexDelete = index;
                                }
                            });
                    })
                    $.each(dataGet, function (index, item1) {
                        if (index == indexL) {
                            ImageDelete.push(NameIMG);
                            item1.ColHtmlArray1.splice(indexDelete, 1);
                            item1.ListNameFileArray1.splice(indexDelete, 1);
                            item1.ColHtml_BD = item1.ColHtmlArray1.join(' ');
                            item1.ListNameFile1 = item1.ListNameFileArray1.join(',');
                        }
                    });
                    $(data).parent().remove();
                }
            }
            var setting = function () {
                return {
                    //=================================Data=======
                    data: dataGet,
                    //================================Cols=======
                    //maxCols: 8,
                    //minCols: 8,
                    //startCols: 8,
                    //minSpareCols: 0,
                    allowInsertColumn: false,
                    allowRemoveColumn: false,
                    autoColumnSize: true,
                    autoWrapCol: true,
                    columnSorting: false,
                    colWidths: 'undefined',
                    copyColsLimit: 8,
                    currentColClassName: 'currentCol', //currentCol
                    fixedColumnsLeft: 0,
                    manualColumnMove: false,
                    manualColumnResize: true,
                    viewportColumnRenderingOffset: 8,
                    sortIndicator: true,
                    //================================Rows=======
                    allowInsertRow: true,
                    allowRemoveRow: true,
                    autoRowSize: true,
                    autoWrapRow: true,
                    copyRowsLimit: 1000,
                    currentRowClassName: 'currentRow',
                    fixedRowsTop: 0,
                    manualRowMove: false,
                    manualRowResize: true,
                    rowHeaders: true,
                    minSpareRows: 5,
                    startRows: 10,
                    //================================Oder=======
                    allowInvalid: false,
                    stretchH: 'all',
                    commentedCellClassName: 'htCommentCell',
                    comments: true,
                    contextMenu: true,
                    copyable: true,
                    customBorders: false,
                    debug: false,
                    disableVisualSelection: true,
                    enterBeginsEditingBoolean: true,
                    fillHandle: true,
                    outsideClickDeselects: true,
                    fragmentSelection: false,
                    groups: false,
                    invalidCellClassName: 'htInvalid',
                    mergeCells: false,
                    multiSelect: true,
                    noWordWrapClassName: 'htNoWrap',
                    placeholder: false,
                    placeholderCellClassName: 'htPlaceholder',
                    readOnlyCellClassName: 'htDimmed',
                    search: false,
                    trimWhitespace: true,
                    undo: true,
                    formulas: true,
                    wordWrap: true,
                    //====================================Oder ==============================================
                    colHeaders:
                        [
                            'Nhóm hạng mục sửa chữa 1',
                            'Nhóm hạng mục sửa chữa 2',
                            'Chi tiết hạng mục',
                            'NCC sửa chữa',
                            'SDT NCC',
                            'Up Hình hiện trạng ban đầu',
                            'Hình hiện trạng ban đầu',
                            'Ghi chú hình hiện trạng',
                            'Ngày dự kiến hoàn thành',
                            'Đơn vị tính',
                            'Số lượng',
                            'Đơn giá',
                            'Đơn giá min',
                            'Đơn giá max',
                            'Đơn giá sữa chữa  thực',
                            'Thành tiền'
                        ],
                    columns: [
                        { data: "Nhomhangmuc", type: 'autocomplete', source: arrayHangmuc, strict: false, className: 'htCenter', width: 300 },
                        { data: "Nhomhangmuc2", type: 'autocomplete', source: [], strict: false, className: 'htCenter', width: 300 },
                        { data: "Chitiethangmuc", type: 'autocomplete', source: [], strict: false, className: 'htCenter', width: 400 },
                        { data: "NCC", type: 'autocomplete', source: [], strict: false, className: 'htCenter', width: 300 },
                        { data: "SDT_NCC", type: 'text', className: 'htCenter', width: 100, readOnly: true },
                        { data: "Hinh_BD", type: 'text', editor: false, renderer: actionRendererUpload_24, width: 200, className: 'htLeft' },
                        { data: "ColHtml_BD", editor: false, type: 'text', className: 'htLeft', renderer: safeHtmlRenderer, width: 300 },
                        { data: "Ghichu_BD", type: 'text', className: 'htLeft', width: 250 },
                        {
                            data: "Ngaydukien", type: 'date',
                            dateFormat: 'DD/MM/YYYY',
                            correctFormat: true,
                            allowInvalid: true
                        },
                        { data: "Donvi", type: 'text', className: 'htCenter', width: 100, readOnly: true },
                        { data: "Soluong", type: 'numeric', format: '0,00', className: 'htCenter', width: 150 },
                        { data: "Dongia", type: 'numeric', format: '0,00', className: 'htCenter', width: 150, readOnly: true },
                        { data: "Dongia_Min", type: 'numeric', format: '0,00', className: 'htCenter', width: 150, readOnly: true },
                        { data: "Dongia_Max", type: 'numeric', format: '0,00', className: 'htCenter', width: 150, readOnly: true },
                        { data: "DongiaThuc", type: 'numeric', format: '0,00', className: 'htCenter', width: 150 },
                        {
                            data: "Thanhtien", type: 'numeric', format: '0,00', className: 'htCenter', width: 150, readOnly: true,
                            renderer: function (instance, td, row, col, prop, value, cellProperties) {
                                if (col === 15 && row !== dataGet.length - 1) {
                                    td.style.fontWeight = 'bold';
                                    var sum = 0;
                                    var soluongdat = instance.getDataAtCell(row, 10);
                                    var Price = instance.getDataAtCell(row, 14);
                                    if (soluongdat === undefined || soluongdat === null || soluongdat === '' || isNaN(soluongdat) === true ||
                                        Price === undefined || Price === null || Price === '' || isNaN(Price) === true) {
                                        value = '';
                                    } else {
                                        value = soluongdat * Price;
                                    }
                                    Handsontable.NumericRenderer.apply(this, arguments);
                                }
                                if (col === 15 && row === dataGet.length - 1) {
                                    td.style.fontWeight = 'bold';
                                    td.style.color = 'green';
                                    var sum = 0;
                                    $.each(dataGet, function (index, item) {
                                        var soluongdat = item.Soluong;
                                        var Price = item.DongiaThuc;
                                        if (soluongdat === undefined || soluongdat === null || soluongdat === '' || isNaN(soluongdat) === true) {
                                            soluongdat = 0; vaild = false;
                                        }
                                        if (Price === undefined || Price === null || Price === '' || isNaN(Price) === true) {
                                            Price = 0; vaild = false;
                                        }
                                        sum += soluongdat * Price;
                                    });
                                    value = sum;
                                    Handsontable.NumericRenderer.apply(this, arguments);
                                }
                            }
                        }
                    ],
                    afterOnCellMouseOver: function (event, coords, TD) {
                        var instance = this;
                        var row = coords.row;
                        var col = coords.col;
                        if (col == 2) {
                            var getInfo_hangmuc = hot.getDataAtCell(row, 2);
                            if (getInfo_hangmuc !== '' && getInfo_hangmuc !== null && getInfo_hangmuc !== undefined) {
                                var getInfo = $.grep(dataSource_chitietHangmuc_24, function (item) {
                                    return item.name == getInfo_hangmuc;
                                })
                                if (getInfo.length > 0) {
                                    XFunction.RenderMessage('info', getInfo[0].note);
                                }
                            }
                        }
                        hot.render();
                    },
                    afterChange: function (changes, source) {
                        var instance = this;
                        if (!changes || source == 'not') {
                            return;
                        }
                        changes.forEach(function (change) {
                            var row = change[0];
                            var col = change[1];
                            var newValue = change[3];
                            var cellProperties = {}, options;
                            if (col == 'Nhomhangmuc') {
                                if (newValue !== '' && newValue !== undefined && newValue !== null) {
                                    var dataHangmuc = $.grep(respone_hangmuc, function (item) {
                                        return (item.code + '-' + item.name) == newValue;
                                    })
                                    if (dataHangmuc.length > 0) {
                                        var id_parent = dataHangmuc[0].code;
                                        $.each(hot.getData(), function (index, item) {
                                            if (item.Nhomhangmuc == newValue) {
                                                item.idNhomHangmuc = dataHangmuc[0].id;
                                            }
                                        })
                                        console.log(hot.getData());
                                        if (respone_hangmuc_2.length > 0) {
                                            var aa_hangmuc2 = $.grep(respone_hangmuc_2, function (item) {
                                                return item.category_1.code == id_parent;
                                            })
                                            var array_hangmuc2 = [];
                                            if (aa_hangmuc2.length > 0) {
                                                $.each(aa_hangmuc2, function (index, item) {
                                                    array_hangmuc2.push(item.code + '-' + item.name);
                                                    dataSource_Hangmuc2_24.push({
                                                        id: item.id,
                                                        name: item.code + '-' + item.name,
                                                        category_1: item.category_1,
                                                    })
                                                })
                                            }
                                            hot.setDataAtRowProp(row, 'Nhomhangmuc2', '', 'not');
                                            hot.setDataAtRowProp(row, 'Chitiethangmuc', '', 'not');
                                            hot.setDataAtRowProp(row, 'NCC', '', 'not');
                                            hot.setDataAtRowProp(row, 'SDT_NCC', '', 'not');
                                            hot.setDataAtRowProp(row, 'Donvi', '', 'not');
                                            hot.setDataAtRowProp(row, 'Dongia', '', 'not');
                                            cellProperties = instance.getCellMeta(row, 1);
                                            cellProperties.source = array_hangmuc2;
                                        }
                                    }
                                }
                            }
                            if (col == 'Nhomhangmuc2') {
                                if (newValue !== '' && newValue !== undefined && newValue !== null) {
                                    var dataHangmuc2 = $.grep(respone_hangmuc_2, function (item) {
                                        return (item.code + '-' + item.name) == newValue;
                                    })
                                    if (dataHangmuc2.length > 0) {
                                        var id_parent = dataHangmuc2[0].code;
                                        $.each(hot.getData(), function (index, item) {
                                            if (item.Nhomhangmuc2 == newValue) {
                                                item.idNhomHangmuc2 = dataHangmuc2[0].id;
                                            }
                                        })
                                        if (responseChitiethangmuc.length > 0) {
                                            var aa_chitiet = $.grep(responseChitiethangmuc, function (item) {
                                                return item.category_2.code == id_parent;
                                            })
                                            console.log(aa_chitiet)
                                            var array_chitietHangmuc = [];
                                            if (aa_chitiet.length > 0) {
                                                $.each(aa_chitiet, function (index, item) {
                                                    array_chitietHangmuc.push(item.code + '-' + item.name);
                                                    dataSource_chitietHangmuc_24.push({
                                                        id: item.id,
                                                        name: item.code + '-' + item.name,
                                                        unit: item.unit,
                                                        price: item.std_price,
                                                        price_min: item.min_price,
                                                        price_max: item.max_price,
                                                        note: item.note,
                                                        is_csvc: item.is_csvc
                                                    })
                                                })
                                            }
                                            hot.setDataAtRowProp(row, 'Chitiethangmuc', '', 'not');
                                            hot.setDataAtRowProp(row, 'NCC', '', 'not');
                                            hot.setDataAtRowProp(row, 'SDT_NCC', '', 'not');
                                            hot.setDataAtRowProp(row, 'Donvi', '', 'not');
                                            hot.setDataAtRowProp(row, 'Dongia', '', 'not');
                                            cellProperties = instance.getCellMeta(row, 2);
                                            cellProperties.source = array_chitietHangmuc;
                                        }
                                        if (respone_hangmuc_2.length > 0) {
                                            console.log(dataHangmuc2)
                                            var responeNCC = dataHangmuc2[0].providers; console.log(responeNCC)
                                            var array_NCC = [];
                                            if (responeNCC.length > 0 && responseTinhThanh.length > 0) {
                                                var responeNCC_new = [];
                                                $.each(responeNCC, function (index, item) {
                                                    var tinh = item.provinces;
                                                    if (tinh.length > 0) {
                                                        var array_tinh = [];
                                                        $.each(tinh, function (index1, item1) {
                                                            $.each(responseTinhThanh, function (index2, item2) {
                                                                if (item1 == item2.id || item1 == '65') {
                                                                    array_tinh.push(item2.code);
                                                                }
                                                            })
                                                        })
                                                        responeNCC_new.push({
                                                            code: item.code,
                                                            name: item.name,
                                                            id: item.id,
                                                            phone1: item.phone1,
                                                            provinces: array_tinh
                                                        })
                                                    }
                                                })
                                                //console.log(responeNCC_new)
                                                $.each(responeNCC_new, function (index, item) {
                                                    if (($.inArray(responseTinhThanhByUser, item.provinces) !== -1) || item.provinces == '65') {
                                                        array_NCC.push(item.code + '-' + item.name);
                                                        dataSource_NCC_24.push({
                                                            nccCode: item.code,
                                                            nccName: item.code + '-' + item.name,
                                                            groupCategory2: id_parent,
                                                            id: item.id,
                                                            Phone: item.phone1,
                                                            provinces: item.provinces
                                                        })
                                                    }
                                                })
                                            }
                                            hot.setDataAtRowProp(row, 'NCC', '', 'not');
                                            hot.setDataAtRowProp(row, 'SDT_NCC', '', 'not');
                                            cellProperties = instance.getCellMeta(row, 3);
                                            cellProperties.source = array_NCC;
                                        }
                                    }
                                }
                            }
                            if (col == 'Chitiethangmuc') {
                                if (newValue !== '' && newValue !== undefined && newValue !== null) {
                                    var flag_chitiet = [];
                                    $.each(hot.getData(), function (index, item) {
                                        if (index !== row && item.Chitiethangmuc !== null && item.Chitiethangmuc !== '' && item.Chitiethangmuc !== undefined) {
                                            flag_chitiet.push(item.Chitiethangmuc);
                                        }
                                    })
                                    if ($.inArray(newValue, flag_chitiet) != -1) {
                                        hot.setDataAtRowProp(row, 'Chitiethangmuc', '', 'not');
                                        hot.setDataAtRowProp(row, 'Donvi', '', 'not');
                                        hot.setDataAtRowProp(row, 'Dongia', '', 'not');
                                        hot.setDataAtRowProp(row, 'Dongia_Min', '', 'not');
                                        hot.setDataAtRowProp(row, 'Dongia_Max', '', 'not');
                                        XFunction.RenderMessage('error', 'Chi tiết hạng mục không được trùng !'); return;
                                    }
                                    var chitiet = $.grep(dataSource_chitietHangmuc_24, function (item) {
                                        return item.name == newValue;
                                    })
                                    if (chitiet.length > 0) {
                                        $.each(hot.getData(), function (index, item) {
                                            if (item.Chitiethangmuc == newValue) {
                                                item.idChiTietHangmuc = chitiet[0].id;
                                                item.isCSVC = chitiet[0].is_csvc;
                                            }
                                        })
                                        var DVT = chitiet[0].unit;
                                        var Gia = chitiet[0].price;
                                        var Gia_min = chitiet[0].price_min;
                                        var Gia_max = chitiet[0].price_max;
                                        hot.setDataAtRowProp(row, 'Donvi', DVT, 'not');
                                        hot.setDataAtRowProp(row, 'Dongia', Gia, 'not');
                                        hot.setDataAtRowProp(row, 'Dongia_Min', Gia_min, 'not');
                                        hot.setDataAtRowProp(row, 'Dongia_Max', Gia_max, 'not');
                                    }
                                }
                                else {
                                    hot.setDataAtRowProp(row, 'Donvi', '', 'not');
                                    hot.setDataAtRowProp(row, 'Dongia', '', 'not');
                                    hot.setDataAtRowProp(row, 'Dongia_Min', '', 'not');
                                    hot.setDataAtRowProp(row, 'Dongia_Max', '', 'not');
                                }
                            }
                            if (col == 'NCC') {
                                if (newValue !== '' && newValue !== undefined && newValue !== null) {
                                    var chitiet_NCC = $.grep(dataSource_NCC_24, function (item) {
                                        return item.nccName == newValue;
                                    })
                                    if (chitiet_NCC.length > 0) {
                                        var SDT = chitiet_NCC[0].Phone;
                                        hot.setDataAtRowProp(row, 'SDT_NCC', SDT, 'not');
                                    }
                                }
                                else {
                                    hot.setDataAtRowProp(row, 'SDT_NCC', '', 'not');
                                }
                            }
                            if (col == 'Soluong') {
                                if (newValue !== '' && newValue !== undefined && newValue !== null) {
                                    if (Number(newValue) == 0 || Number(newValue) < 0) {
                                        hot.setDataAtRowProp(row, 'Soluong', '', 'not');
                                        XFunction.RenderMessage('error', 'Số lượng phải lớn hơn 0 !'); return;
                                    }
                                }
                            }
                            if (col == 'DongiaThuc') {
                                if (newValue !== '' && newValue !== undefined && newValue !== null) {
                                    if (Number(newValue) < 0) {
                                        hot.setDataAtRowProp(row, 'DongiaThuc', '', 'not');
                                        XFunction.RenderMessage('error', 'Đơn giá thực phải lớn hơn 0 !'); return;
                                    }
                                }
                            }
                            if (col == 'Ngaydukien') {
                                if (newValue !== '' && newValue !== undefined && newValue !== null) {
                                    var currentdate = new Date();
                                    var currentdateString = currentdate.getFullYear() + '/' + (currentdate.getMonth() < 8 ? '0' + (currentdate.getMonth() + 1) : (currentdate.getMonth() + 1)) + '/' + currentdate.getDate();
                                    var datenewValue = newValue;
                                    datenewValue = datenewValue.split("/").reverse().join("/");
                                    if (dates.compare(currentdateString, datenewValue) == 1) {
                                        hot.setDataAtRowProp(row, 'Ngaydukien', '', 'not');
                                        XFunction.RenderMessage('error', 'Không được nhỏ hơn ngày hiện tại !'); return;
                                    }
                                }
                            }
                            hot.render();
                        });
                    },

                };
            };
            hot = new Handsontable(container, setting());
            hot.selectCell(0, 0, 0, 0);
            $btnSend.on('click', function () {
                $('#btnSend').prop("disabled", true); //LuanNT44-14/10/2020-24-fixtrungCL
                var mydata = hot.getData() == undefined ? [] : $.grep(hot.getData(), function (item, index) {
                    return item.Nhomhangmuc !== null && item.Nhomhangmuc !== undefined && item.Nhomhangmuc !== ''
                });
                var FollowCSVC = $('#FollowCSVC').is(':checked'); console.log(FollowCSVC);
                var flagtype_BD = 0, flag_CSVC_chitiet = 0;
                $.each(mydata, function (index, item) {
                    if (item.idNhomHangmuc == '5f3cee087f23bb72900ce3b0') { // có 1 hạng mục là CSVC
                        flagtype_BD = 1;
                    }
                    if (item.isCSVC == true) {
                        flag_CSVC_chitiet = 1;
                    }
                })
                var flagcheck_hangmuc2 = 0,flagcheck_chitiet = 0, flagcheck_NCC = 0, flagcheck_soluong = 0, flagcheck_hinhBD = 0, flagcheck_dongiathuc = 0;
                if (FollowCSVC == true || flagtype_BD == 1) { //Follow CSVC hoặc hạng mục CSVC
                    $.each(mydata, function (index, item) {
                        if (item.Nhomhangmuc2 === '' || item.Nhomhangmuc2 === null || item.Nhomhangmuc2 === undefined) {
                            flagcheck_hangmuc2++;
                        }
                        if (item.NCC === '' || item.NCC === null || item.NCC === undefined) {
                            flagcheck_NCC++;
                        }
                        if (item.ColHtml_BD !== '' && item.ColHtml_BD !== null && item.ColHtml_BD !== undefined) {
                            flagcheck_hinhBD++;
                        }
                    })
                }
                else {
                    $.each(mydata, function (index, item) {
                        if (item.Nhomhangmuc2 === '' || item.Nhomhangmuc2 === null || item.Nhomhangmuc2 === undefined) {
                            flagcheck_hangmuc2++;
                        }
                        if (item.Chitiethangmuc === '' || item.Chitiethangmuc === null || item.Chitiethangmuc === undefined) {
                            flagcheck_chitiet++;
                        }
                        if (item.NCC === '' || item.NCC === null || item.NCC === undefined) {
                            flagcheck_NCC++;
                        }
                        if (item.ColHtml_BD !== '' && item.ColHtml_BD !== null && item.ColHtml_BD !== undefined) {
                            flagcheck_hinhBD++;
                        }
                        if (item.Soluong === '' || item.Soluong === null || item.Soluong === undefined || item.Soluong === 0) {
                            flagcheck_soluong++;
                        }
                        if (item.DongiaThuc === '' || item.DongiaThuc === null || item.DongiaThuc === undefined || item.DongiaThuc === 0) {
                            flagcheck_dongiathuc++;
                        }
                    })
                }
                if (mydata.length == 0) {
                    XFunction.RenderMessage('error', 'Thông tin tạo chưa đầy đủ !'); return;
                }
                if (flagcheck_hangmuc2 > 0) {
                    XFunction.RenderMessage('error', 'Chưa chọn đầy đủ nhóm hạng mục 2 !'); return;
                }
                if (flagcheck_chitiet > 0) {
                    XFunction.RenderMessage('error', 'Chưa chọn đầy đủ chi tiết hạng mục !'); return;
                }
                if (flagcheck_NCC > 0) {
                    XFunction.RenderMessage('error', 'Chưa chọn đầy đủ NCC !'); return;
                }
                if (flagcheck_hinhBD == 0) {
                    XFunction.RenderMessage('error', 'Chưa up đầy đủ hình hiện trạng ban đầu !'); return;
                }
                if (flagcheck_soluong > 0) {
                    XFunction.RenderMessage('error', 'Chưa chọn đầy đủ số lượng !'); return;
                }
                if (flagcheck_dongiathuc > 0) {
                    XFunction.RenderMessage('error', 'Chưa nhập đầy đủ đơn giá thực !'); return;
                }
                
                var checkdata_hm1 = 0, checkdata_hm2 = 0, checkdata_chitiet = 0, checkdata_ncc = 0;
                $.each(mydata, function (index, item) {
                    var hm_1 = $.grep(respone_hangmuc, function (item1) { return (item1.code + '-' + item1.name) === item.Nhomhangmuc });
                    if (hm_1.length > 0) {
                        checkdata_hm1++;
                    }
                    var hm_2 = $.grep(respone_hangmuc_2, function (item1) { return (item1.code + '-' + item1.name) === item.Nhomhangmuc2 });
                    if (hm_2.length > 0) {
                        checkdata_hm2++;
                    }
                    if (item.Chitiethangmuc !== '' && item.Chitiethangmuc !== null && item.Chitiethangmuc !== undefined) {
                        var hm_chitiet = $.grep(responseChitiethangmuc, function (item1) { return (item1.code + '-' + item1.name) === item.Chitiethangmuc });
                        if (hm_chitiet.length > 0) {
                            checkdata_chitiet++;
                        }
                    }
                    else {
                        checkdata_chitiet++;
                    }
                    var hm_ncc = $.grep(dataSource_NCC_24, function (item1) { return item1.nccName === item.NCC });
                    if (hm_ncc.length > 0) {
                        checkdata_ncc++;
                    }
                })
                if (checkdata_hm1 != mydata.length) {
                    XFunction.RenderMessage('error', 'Tên hạng mục 1 không đúng !'); return;
                }
                if (checkdata_hm2 != mydata.length) {
                    XFunction.RenderMessage('error', 'Tên hạng mục 2 không đúng !'); return;
                }
                if (checkdata_chitiet != mydata.length) {
                    XFunction.RenderMessage('error', 'Chi tiết hạng mục không đúng !'); return;
                }
                if (checkdata_ncc != mydata.length) {
                    XFunction.RenderMessage('error', 'Tên nhà cung cấp chưa đúng !'); return;
                }
                //--new
                var flagtype = 0;
                var dataForm = new FormData();
                var dataReturn = [];
                $.each(mydata, function (index, item) {
                    if (item.idNhomHangmuc == '5f3cee087f23bb72900ce3b0') { // có 1 hạng mục là CSVC "Chống dột/ Thấm"
                        flagtype = 1;
                    }
                    dataReturn.push({
                        Row: index,
                        Nhomhangmuc: item.Nhomhangmuc,
                        Nhomhangmuc2: item.Nhomhangmuc2,
                        Chitiethangmuc: item.Chitiethangmuc,
                        Ngaydukien: item.Ngaydukien,
                        Donvi: item.Donvi,
                        Soluong: item.Soluong == null || item.Soluong == undefined || item.Soluong == 0 || item.Soluong < 0 ? 0 : item.Soluong,
                        Dongia: item.Dongia,
                        DongiaThuc: item.DongiaThuc,
                        Ghichu: item.Ghichu,
                        Type: 1, // 0 : CSVC HO, 1: Shop
                        isCSVC: item.isCSVC == true ? 1 : 0,
                        idNhomHangmuc: item.idNhomHangmuc,
                        idNhomHangmuc2: item.idNhomHangmuc2,
                        idChiTietHangmuc: item.idChiTietHangmuc,
                        FollowCSVC: FollowCSVC == true ? 1 : 0,
                        NCC: item.NCC,
                        SDT_NCC: item.SDT_NCC,
                        TinhThanhByUser: responseTinhThanhByUser,
                        Ghichu_BD: item.Ghichu_BD,
                        Ghichu_ThiCong: item.Ghichu_ThiCong,
                        Ghichu_NghiemThu: item.Ghichu_NghiemThu,
                        Dongia_Min: item.Dongia_Min,
                        Dongia_Max: item.Dongia_Max,
                        ListNameFile1: item.ListNameFile1,
                        ListNameFile2: item.ListNameFile2,
                        ListNameFile3: item.ListNameFile3
                    });
                    if (item.DataFiles1 !== '' && item.DataFiles1 !== null && item.DataFiles1 !== undefined && item.DataFiles1.length > 0) {
                        $.each(item.DataFiles1, function (cout, element) {
                            if ($.inArray(element.nameNew, ImageDelete) == -1)
                            {
                                dataForm.append(element.nameNew, element);
                            }
                        });
                    }
                });
                var tongtien = 0;
                $.each(dataReturn, function (index, item) { tongtien += item.Soluong * item.DongiaThuc });
                if (flagtype == 1 || FollowCSVC == true || tongtien > 1000000 || flag_CSVC_chitiet == 1) { //CSVC
                    $.each(dataReturn, function (index, item) {
                        item.Type = 0;
                    })
                }
                //console.log(dataReturn); return;
                dataForm.append("Details", JSON.stringify(dataReturn));
                dataForm.append("DetailsLimited", JSON.stringify([]));
                dataForm.append("Description", catagoryInfo.Description);
                dataForm.append("TitleRequest", $('#Title').val());
                dataForm.append("typeId", catagoryInfo.Id);
                dataForm.append("TimeFutureFinish", $('#TimeFutureFinish').val());
                dataForm.append("Cc", $('#Cc').val());
                dataForm.append("sender", $('#sender').val());
                dataForm.append("fileUpload", $('#fileUpload').val());
                dataForm.append("dateFrom", $('#dateFrom').val());
                dataForm.append("dateTo", $('#dateTo').val());
                dataForm.append("timeSend", $('#timeSend').val());
                dataForm.append("Message", $('#Message').val());
                $.ajax({
                    type: "POST",
                    url: "/Requests/CreateCalllogCSVC_24",
                    contentType: false,
                    processData: false,
                    async: false,
                    cache: false,
                    data: dataForm,
                    success: function (result) {
                        var win = window.open('/Home', '_self');
                    },
                    error: function () {
                        XFunction.RenderMessage('error', 'Tạo CL không thành công !');
                        return;
                    }
                });
            });
        });
    };
    //▲  Add - LuanNT44 - 11/04/2020 - 24 - edit
    function contruct_39() {
        $areaChiTiet.show(); $areaDowloadAndImport.hide();
        $('.compose-message').show();
        var dataHandsontable = [];
        var sourceDropdownLoaiThacMac = ['Lương/Giờ công', 'INC', 'Khác(Thưởng, phạt, phụ cấp)', 'Phụ cấp', 'Bù trừ tháng trước', 'Thưởng - Phạt', 'Truy Thu']
        var sourceShopApp = '';
        var infoUserReuqset = [];
        $.get('/Requests/GetInfoUserCreteRequest', function (respone) {
            console.log(respone)
            infoUserReuqset = respone[0];
            if (infoUserReuqset.WarehouseCode !== '' && infoUserReuqset.WarehouseCode !== null && infoUserReuqset.WarehouseCode !== undefined) {
                infoUserReuqset.isShop = 1;
                sourceShopApp = infoUserReuqset.WarehouseCode + '--' + infoUserReuqset.WarehouseName;
            } else {
                infoUserReuqset.isShop = 0;
                sourceShopApp = infoUserReuqset.OrganizationHierachyCode + '--' + infoUserReuqset.OrganizationHierachyName;
            }
        });
        var sourceDropdownThangThacMac = [];
        function build_sourceDropdownThangThacMac() {
            var nowMonth = (new Date).getMonth();
            if (nowMonth <= 3) {
                for (i = 0; i < 12; i++) { sourceDropdownThangThacMac.push((i + 1)); }
            } else {
                for (i = nowMonth - 3; i < 12; i++) { sourceDropdownThangThacMac.push((i + 1)); }
            }
        }; build_sourceDropdownThangThacMac();
        var sourceDropdownNamThacMac = [];
        function build_sourceDropdownNamThacMac() {
            var nowYear = (new Date).getFullYear();
            sourceDropdownNamThacMac = [nowYear - 1, nowYear, nowYear + 1];
        } build_sourceDropdownNamThacMac();
        var sourceAutocompleteShopsApp = [];
        $.get('/Requests/GetJobsByEmpCode', function (respone) {
            $.each(respone, function (index, item) {
                sourceAutocompleteShopsApp.push(item.JobTitleCode + '--' + item.JobTitleName);
            });
        });
        contructData = function () {
            dataHandsontable = [
                {
                    ItemId: null,
                    Quantity: null,
                    Note: null,
                    Status: null,
                    Sum: null,
                    QuantityAvaiable: null,
                    EmpCode: null,
                    Price: null,
                    NoticeAlertId: null,
                    ShopCode: null,
                    OfficeCode: null,
                    CustomerCode: null,
                    CustomerName: null,
                    SaleCode: null,
                    Time1: null,
                    Time2: null,
                    Money1: null,
                    Money2: null,
                    ProductCode: null,
                    ProductName: null,
                    Imei: null,
                    Time3: null,
                    Money3: null,
                    Money4: null,
                    Approved: null,
                    EmpCode1: null,
                    EmpCode2: null,
                    Quantity1: null,
                    Quantity2: null,
                    Quantity3: null,
                    Quantity4: null,
                    Property1: null,
                    Property2: null,
                    Property3: null,
                    Property: null,
                    JobCode1: null,
                    JobCode2: null,
                    EmpCode3: null,
                    ShopCode2: null
                }];

        };
        contructData();
        var today = new Date;
        var setting = function () {
            return {
                //=================================Data=======
                data: dataHandsontable,
                //================================Cols=======
                maxCols: 6,
                minCols: 6,
                startCols: 6,
                minSpareCols: 0,
                allowInsertColumn: false,
                allowRemoveColumn: false,
                autoColumnSize: true,
                autoWrapCol: true,
                columnSorting: false,
                //colWidths: 'undefined',
                copyColsLimit: 6,
                currentColClassName: 'currentCol', //currentCol
                fixedColumnsLeft: 0,
                manualColumnMove: false,
                manualColumnResize: true,
                viewportColumnRenderingOffset: 6,
                sortIndicator: true,
                //================================Rows=======
                allowInsertRow: true,
                allowRemoveRow: true,
                autoRowSize: true,
                autoWrapRow: true,
                copyRowsLimit: 1000,
                currentRowClassName: 'currentRow',
                fixedRowsTop: 0,
                manualRowMove: false,
                manualRowResize: true,
                rowHeaders: true,
                minSpareRows: 10,
                //startRows: 10,
                //viewportRowRenderingOffset : 'auto',
                //maxRows: 'Infinity',
                //minRows: 'Infinity',
                //================================Oder=======
                allowInvalid: false,
                stretchH: 'all',
                commentedCellClassName: 'htCommentCell',
                comments: true,
                contextMenu: true,
                copyable: true,
                customBorders: false,
                debug: false,
                disableVisualSelection: true,
                enterBeginsEditingBoolean: true,
                fillHandle: true,
                outsideClickDeselects: true,
                fragmentSelection: false,
                groups: false,
                invalidCellClassName: 'htInvalid',
                mergeCells: false,
                multiSelect: true,
                noWordWrapClassName: 'htNoWrap',
                placeholder: false,
                placeholderCellClassName: 'htPlaceholder',
                readOnlyCellClassName: 'htDimmed',
                search: false,
                trimWhitespace: true,
                undo: true,
                formulas: true,
                wordWrap: true,
                copyPaste: false,
                //====================================Oder ==============================================
                colHeaders: ['Loại thắc mắc', 'Shop/Phòng ban', 'Chức danh', 'Nhân viên', 'Tháng thắc mắc', 'Năm thắc mắc',
                    //'Nội dung thắc mắc'
                ],
                columns: [
                    { data: 'Property1', type: 'dropdown', width: 200, source: sourceDropdownLoaiThacMac },
                    { data: 'Property2', type: 'text', width: 200, readOnly: true },
                    { data: 'Property3', type: 'autocomplete', width: 300, source: sourceAutocompleteShopsApp, strict: true, items: Infinity },
                    { data: 'Property4', type: 'autocomplete', width: 250, strict: true },
                    { data: 'Quantity', type: 'dropdown', width: 100, source: sourceDropdownThangThacMac, strict: true },
                    { data: 'Quantity1', type: 'dropdown', width: 100, source: sourceDropdownNamThacMac, strict: true },
                    //{ data: 'Note', type: 'text', width: 500, strict: true }
                ],
                afterInit: function () {
                    var instance = this;
                    var data = instance.getData();
                    var value;
                    for (var row = 0; row < data.length; row++) {
                        value = data[row][3];
                        if (value !== '' && value !== undefined && value !== null) {
                            setAutocompleteSource.call(instance, row, value);
                        }

                    }
                    instance.render();
                },
                afterChange: function (changes, source) {
                    if (!changes) {
                        return;
                    }
                    var instance = this;
                    changes.forEach(function (change) {
                        var row = change[0];
                        var col = change[1];
                        var newValue = change[3];
                        var cellProperties, options;
                        if (col == 'Property3' && newValue !== '' && newValue !== null && newValue !== '') {
                            cellProperties = instance.getCellMeta(row, 2);
                            setAutocompleteSource.call(instance, row, newValue);
                            instance.render();
                        } else if (col == 'Property1') {
                            hot.setDataAtRowProp(row, 'Property2', sourceShopApp);
                            hot.setDataAtRowProp(row, 'Quantity', ((today.getMonth() - 1) == -1 ? 12 : today.getMonth() == 0 ? 1 : (today.getMonth() + 1)));
                            hot.setDataAtRowProp(row, 'Quantity1', ((today.getMonth() - 1) == -1 ? today.getFullYear() - 1 : today.getFullYear()));
                            instance.render();
                        }
                    });
                },
            };
        };
        hot = new Handsontable(container, setting());
        function setAutocompleteSource(row, value) {
            var instance = this;
            var arr = value.split('--');
            $.get('/Requests/GetEmpsByJobCode', {
                code: infoUserReuqset.isShop == 1 ? infoUserReuqset.WarehouseCode : infoUserReuqset.OrganizationHierachyCode,
                job: arr[0],
                isshop: infoUserReuqset.isShop
            },
                function (respone) {
                    var options = [''];
                    $.each(respone, function (index, item) {
                        options.push(item.EmployeeCode + '--' + item.EmployeeName);
                    });
                    var cellProperties = instance.getCellMeta(row, 3);
                    cellProperties.source = options;
                    //instance.setDataAtRowProp(row, 'Property4', options[0]); set default value first find
                });

        }
        var columnRequired = ['Property1', 'Property2', 'Property3', 'Property4', 'Quantity', 'Quantity1',
            //'Note'
        ];
        $btnSend.on('click', function () {
            var tableReturn = [];
            $.each(hot.getData(), function (index, item) {
                var check = false;
                $.each(item, function (index, element) {
                    if (element !== '' && element !== null) {
                        check = true;
                        return;
                    }
                });
                if (check == true) {
                    tableReturn.push(item);
                }
            });
            var tableInvalid = [];
            $.each(tableReturn, function (index, item) {
                var check = true;
                $.each(columnRequired, function (index, element) {
                    if (item[element] !== '' && item[element] !== null) { }
                    else {
                        check = false;
                    }
                });
                if (check == false) {
                    tableInvalid.push(item);
                };
            });
            if (tableReturn.length == 0) {
                XFunction.RenderMessage('error', 'Dữ liệu chưa hợp lệ');
                return;
            };
            if (tableInvalid.length !== 0) {
                XFunction.RenderMessage('error', 'Dữ liệu nhập chưa đầy đủ');
                return;
            };
            if ($('.note-editable').text().length <= 0) {
                XFunction.RenderMessage('error', 'Vui lòng nhập nội dung tin nhắn');
                return false;
            }
            
            //▼	Edit - VietMXH - 08/04/2019 - Check Thời gian tạo CallLog Thắc mắc Lương==================================================
            var l_Date_Now = new Date();
            var nowDay = l_Date_Now.getDate();
            var l__Is_SM = 0;
            if ($.inArray(infoUserReuqset.JobTitleShortName, ['SM', 'ASM', 'RSM', 'PSM', 'SM_D', 'SMAPR', 'PSMAPR']) > -1) {
                l__Is_SM = 1;
            }
            var l__Is_NotAllowCreate = 1, l__Msg__Create = 'Không được phép tạo thắc mắc lương!';
            $.ajax({
                async: false,
                url: "/Requests/CallLog_ThacMacLuong_ThoiGianTao_Check",
                type: "GET",
                data: {Nam: l_Date_Now.getFullYear(), Thang: (l_Date_Now.getMonth() + 1), Is_SM: l__Is_SM},
                error: function () {
                    l__Is_NotAllowCreate = 1;
                    l__Msg__Create = 'Lỗi: /Requests/CallLog_ThacMacLuong_ThoiGianTao_Check!'
                },
                success: function (p_ActionResult) {
                    if (!!p_ActionResult && p_ActionResult.length > 0) {
                        if (p_ActionResult[0].FromDay > 0 && p_ActionResult[0].FromDay <= p_ActionResult[0].ToDay) {
                            if (p_ActionResult[0].FromDay <= nowDay && nowDay <= p_ActionResult[0].ToDay) {
                                l__Is_NotAllowCreate = 0;
                                l__Msg__Create = 'Được phép tạo thắc mắc lương!'
                            }
                            else{
                                l__Is_NotAllowCreate = 1;
                                l__Msg__Create = 'Đối với ' + infoUserReuqset.JobTitleShortName + '--' + infoUserReuqset.JobTitleName + ' chỉ được tạo thắc mắc lương từ ngày ' + p_ActionResult[0].FromDay + ' đến ' + p_ActionResult[0].ToDay + ' hàng tháng'
                            }
                        }
                        else{
                            l__Is_NotAllowCreate = 1;
                            l__Msg__Create = 'Không được phép tạo thắc mắc lương!'
                        }
                    }
                    else{
                        l__Is_NotAllowCreate = 1;
                        l__Msg__Create = 'Thời gian tạo thắc mắc lương chưa được định nghĩa!'
                    }
                }
            });
            if (l__Is_NotAllowCreate == 1) {
                XFunction.RenderMessage('error', l__Msg__Create);
                return;
            }
            //▲	Edit - VietMXH - 08/04/2019 - Check Thời gian tạo CallLog Thắc mắc Lương==================================================

            $.each(tableReturn, function (index, item) {
                if (infoUserReuqset.isShop) {
                    item.ShopCode = item.Property2.split('--')[0];
                } else {
                    item.OfficeCode = item.Property2.split('--')[0];
                }
                item.EmpCode = item.Property4.split('--')[0];
                item.Property2 = null;
                item.Property4 = null;
            });

            $('#Details').val(JSON.stringify(tableReturn));
            $('#DetailsLimited').val(JSON.stringify(''));

            $('#Description').val(catagoryInfo.Description);
            $('#TitleRequest').val($('#Title').val());
            $('#typeId').val(catagoryInfo.Id);

            var form = $("form#form-create");
            form.attr("action", "/Requests/Create");
            form.submit();
            $('#WaitDialog').modal('show');
        });
    };
    function contruct_37() {
        $areaChiTiet.show(); $areaDowloadAndImport.hide();
        $('.compose-message').show()
        var dataHandsontable = [];
        contructData = function () {
            dataHandsontable = [
                {
                    ItemId: null,
                    Quantity: null,
                    Note: null,
                    Status: null,
                    Sum: null,
                    QuantityAvaiable: null,
                    EmpCode: null,
                    Price: null,
                    NoticeAlertId: null,
                    ShopCode: null,
                    OfficeCode: null,
                    CustomerCode: null,
                    CustomerName: null,
                    SaleCode: null,
                    Time1: null,
                    Time2: null,
                    Money1: null,
                    Money2: null,
                    ProductCode: null,
                    ProductName: null,
                    Imei: null,
                    Time3: null,
                    Money3: null,
                    Money4: null,
                    Approved: null,
                    EmpCode1: null,
                    EmpCode2: null,
                    Quantity1: null,
                    Quantity2: null,
                    Quantity3: null,
                    Quantity4: null,
                    Property1: null,
                    Property2: null,
                    Property3: null,
                    Property: null,
                    JobCode1: null,
                    JobCode2: null,
                    EmpCode3: null,
                    ShopCode2: null
                }];

        }; contructData();
        var sourceAutocompleteShops = [];
        $.get('/Requests/GetShopsByUserManager', {}, function (respone) {
            $.each(respone, function (index, item) {
                sourceAutocompleteShops.push(item.WarehouseCode + '--' + item.WarehouseCodeB1 + '--' + item.WarehouseName);
            });
        });
        //ChuongNT3 - 14/08/2018 - loại 37
        var arr_loai_truy_thu_label = [];

        $.get('/Requests/GetList_LoaiTruyThu', null, function (ListData) {
            $.grep(ListData, function (item, index) {
                arr_loai_truy_thu_label.push(item.Code + '-' + item.Name);
            })
        });
        //ChuongNT3 - 14/08/2018 - loại 37
        var sourceDropdownMonth = [];
        for (i = 0; i < 12; i++) { sourceDropdownMonth.push((i + 1)) };
        var sourceDropdownNamThacMac = [];
        function build_sourceDropdownNamThacMac() {
            var nowYear = (new Date).getFullYear();
            sourceDropdownNamThacMac = [nowYear - 1, nowYear, nowYear + 1];
        } build_sourceDropdownNamThacMac();
        var today = new Date;
        var setting = function () {
            return {
                //=================================Data=======
                data: dataHandsontable,
                //================================Cols=======
                minSpareCols: 0,
                allowInsertColumn: false,
                allowRemoveColumn: false,
                autoColumnSize: true,
                autoWrapCol: true,
                columnSorting: false,
                //colWidths: 'undefined',
                copyColsLimit: 6,
                currentColClassName: 'currentCol', //currentCol
                fixedColumnsLeft: 0,
                manualColumnMove: false,
                manualColumnResize: true,
                viewportColumnRenderingOffset: 6,
                sortIndicator: true,
                //================================Rows=======
                allowInsertRow: true,
                allowRemoveRow: true,
                autoRowSize: true,
                autoWrapRow: true,
                copyRowsLimit: 1000,
                currentRowClassName: 'currentRow',
                fixedRowsTop: 0,
                manualRowMove: false,
                manualRowResize: true,
                rowHeaders: true,
                minSpareRows: 10,
                //startRows: 10,
                //viewportRowRenderingOffset : 'auto',
                //maxRows: 'Infinity',
                //minRows: 'Infinity',
                //================================Oder=======
                allowInvalid: false,
                stretchH: 'all',
                commentedCellClassName: 'htCommentCell',
                comments: true,
                contextMenu: true,
                copyable: true,
                customBorders: false,
                debug: false,
                disableVisualSelection: true,
                enterBeginsEditingBoolean: true,
                fillHandle: true,
                outsideClickDeselects: true,
                fragmentSelection: false,
                groups: false,
                invalidCellClassName: 'htInvalid',
                mergeCells: false,
                multiSelect: true,
                noWordWrapClassName: 'htNoWrap',
                placeholder: false,
                placeholderCellClassName: 'htPlaceholder',
                readOnlyCellClassName: 'htDimmed',
                search: false,
                trimWhitespace: true,
                undo: true,
                formulas: true,
                wordWrap: true,
                copyPaste: false,
                //====================================Oder ==============================================
                //ChuongNT3 - 15/10/2018 - fix số hóa đơn
                colHeaders: ['Loại truy thu', 'Số SO', 'Shop', 'Nhân viên', 'Tháng giữ lương', 'Năm giữ lương', 'Giữ toàn bộ lương', 'Số tiền cần giữ'
                    //, 'Lý do giữ lương'
                ],
                columns: [
                    { data: 'Property13', type: 'autocomplete', width: 300, source: arr_loai_truy_thu_label, strict: true, allowInvalid: false },          //ChuongNTT3 - 03/12/2018 - fix loại truy thu
                    { data: 'Property6', type: 'text', width: 250, strict: true },
                    //ChuongNT3 - 14/08/2018 - loại 37
                    //▼	Edit - VietMXH - 12/09/2018 - Bắt buộc chọn ComboBox==================================================
                    ////{ data: 'ShopCode', type: 'autocomplete', width: 300, source: sourceAutocompleteShops, strict: false },
                    ////{ data: 'EmpCode', type: 'autocomplete', width: 250, strict: true },
                    //  ==================================================================================================
                    { data: 'ShopCode', type: 'dropdown', width: 300, source: sourceAutocompleteShops, strict: false },
                    { data: 'EmpCode', type: 'dropdown', width: 250, source: [''], strict: true },
                    //▲	Edit - VietMXH - 12/09/2018 - Bắt buộc chọn ComboBox==================================================

                    { data: 'Quantity', type: 'dropdown', width: 150, source: sourceDropdownMonth },
                    { data: 'Quantity1', type: 'dropdown', width: 150, source: sourceDropdownNamThacMac },
                    { data: 'Approved', type: 'checkbox', width: 150, checkedTemplate: true, uncheckedTemplate: false },
                    { data: 'Money1', type: 'numeric', width: 150, format: '0,00', validator: Validater.number, allowInvalid: false },
                    //{ data: 'Note', type: 'text', width: 500 },
                ],

                afterChange: function (changes, source) {
                    if (!changes) {
                        return;
                    }
                    var instance = this;
                    changes.forEach(function (change) {
                        var row = change[0];
                        var col = change[1];
                        var newValue = change[3];
                        var cellProperties = {}, options;
                        //ChuongNT3 - 15/10/2018 - fix số hóa đơn
                        if (col == 'Property6' && newValue !== '' && newValue !== null && newValue !== '') {
                            for (var i = 0; i < newValue.length; i++) {
                                if (Number.isInteger(parseInt(newValue.charAt(i))) == false) {
                                    XFunction.RenderMessage('error', 'Số hóa đơn chỉ được nhập số');
                                    hot.setDataAtRowProp(row, 'Property6', '');
                                    return;
                                }
                            }
                            if (parseInt(newValue) < 0) {
                                XFunction.RenderMessage('error', 'Số hóa đơn sai định dạng');
                                hot.setDataAtRowProp(row, 'Property6', '');
                                return;
                            }
                        };
                        //ChuongNT3 - 14/08/2018 - loại 37
                        if (col == 'Property13' && newValue !== '' && newValue !== null && newValue !== '') {
                            hot.setDataAtRowProp(row, 'Property6', '')
                            if (newValue.split('-')[0].trim() != 'TT002') {
                                cellProperties = instance.getCellMeta(row, 1);
                                cellProperties.readOnly = true;
                            }
                            else if (newValue.split('-')[0].trim() == 'TT002') {
                                cellProperties = instance.getCellMeta(row, 1);
                                cellProperties.readOnly = false;
                            }
                        }
                        //ChuongNT3 - 14/08/2018 - loại 37
                        if (col == 'ShopCode' && newValue !== '' && newValue !== null && newValue !== '') {
                            hot.setDataAtRowProp(row, 'Quantity', ((today.getMonth() - 1) == -1 ? 12 : today.getMonth() == 0 ? 1 : (today.getMonth() + 1)));
                            hot.setDataAtRowProp(row, 'Quantity1', ((today.getMonth() - 1) == -1 ? today.getFullYear() - 1 : today.getFullYear()));
                            setAutocompleteSource.call(instance, row, newValue);
                            instance.render();
                        };
                        if (col == 'Approved' && newValue == true) {
                            hot.setDataAtRowProp(row, 'Money1', '');
                        }
                        else if (col == 'Money1' && newValue !== null && newValue !== '') {
                            hot.setDataAtRowProp(row, 'Approved', false);
                            if (!Handsontable.helper.isNumeric(newValue) || parseInt(newValue) < 0) {
                                XFunction.RenderMessage('error', 'Số tiền không được âm');
                                hot.setDataAtRowProp(row, 'Money1', '');
                            }
                        }
                    });
                },
            };
        };
        hot = new Handsontable(container, setting());
        function setAutocompleteSource(row, value) {
            var instance = this;

            //▼	Edit - VietMXH - 12/09/2018 - Bắt buộc chọn ComboBox==================================================
            ////var arr = value.split('--');
            ////$.get('/Requests/GetEmpByShopCodeOneMonth', { shopCode: arr[0] },
            ////    function (respone) {
            ////        var options = [''];
            ////        $.each(respone, function (index, item) {
            ////            options.push(item.EmployeeCode + '--' + item.EmployeeName);
            ////        });
            ////        var cellProperties = instance.getCellMeta(row, 1);
            ////        cellProperties.source = options;
            ////        //instance.setDataAtRowProp(row, 1, options[0]); set default value first find
            ////    });
            //  ==================================================================================================
            var cellProperties = instance.getCellMeta(row, 3);    //ChuongNT3 - 14/08/2018 - loại 37
            cellProperties.source = [''];
            var l__ShopCode = value.split('--')[0];
            if (!!l__ShopCode && l__ShopCode != '') {
                $.get('/Requests/GetEmpByShopCodeOneMonth', { shopCode: l__ShopCode },
                    function (p_ActionResult) {
                        var options = [''];
                        $.each(p_ActionResult, function (index, item) {
                            options.push(item.EmployeeCode + '--' + item.EmployeeName);
                        });
                        cellProperties.source = options;
                    });
            }
            //▲	Edit - VietMXH - 12/09/2018 - Bắt buộc chọn ComboBox==================================================

        }
        var columnRequired = ['ShopCode', 'EmpCode', 'Quantity', 'Quantity1'
            //, 'Note'
        ];
        //ChuongNT3 - 14/08/2018 - loại 37

        $btnSend.on('click', function () {
            var tableReturn = [];
            tableReturn = $.grep(hot.getData(), function (item, index) {
                //console.log('item.ShopCode',item.ShopCode)
                //console.log('item.Property13', item.Property13)
                //console.log('item.EmpCode', item.EmpCode)
                //console.log('item.Quantity', item.Quantity)
                //console.log('item.Quantity1', item.Quantity1)
                //console.log('item.Money1', item.Money1)

                return (item.ShopCode != null && item.ShopCode != '') &&
                    (item.Property13 != null && item.Property13 != '') &&
                    (item.EmpCode != null && item.EmpCode != '') &&
                    (item.Quantity != null && item.Quantity != '') &&
                    (item.Quantity1 != null && item.Quantity1 != '') &&
                    ((item.Money1 != null && item.Money1 != '') || (item.Approved != null && item.Approved != ''));
            });

            if (tableReturn.length == 0) {
                XFunction.RenderMessage('error', 'Tạo calllog phải có thông tin');
                return;
            }
            var tableInvalid = [];
            var error_check = 0;
            $.each(tableReturn, function (index, item) {
                var check = true
                if (item.Property13 != null && item.Property13 != '' && item.Property13 != undefined) {
                    var ma_loai_truy_thu = [] = item.Property13.split('-')[0].trim();

                    if (ma_loai_truy_thu == 'TT002' && (item.Property6 == null || item.Property6 == '' || item.Property6 == undefined)) {
                        error_check = 1;
                        XFunction.RenderMessage('error', 'Truy thu công nợ xuất hóa đơn buộc phải chọn số hóa đơn');
                        return;
                    }
                    //▼ ChuongNTT3 - 03/12/2018 - fix loại truy thu
                    if ($.inArray(item.Property13.split('-')[0].trim(), ['TT001', 'TT002', 'TT003']) == -1) {
                        error_check = 1;
                        XFunction.RenderMessage('error', 'Bạn chọn sai loại truy thu');
                        return;
                    }
                    //▲ ChuongNTT3 - 03/12/2018 - fix loại truy thu
                }
                else {
                    error_check = 1;
                    XFunction.RenderMessage('error', 'Phải chọn loại truy thu!');
                    return;
                }
                //ChuongNT3 - 14/08/2018 - loại 37

                $.each(columnRequired, function (index, element) {
                    if (item[element] !== '' && item[element] !== null) { }
                    else {
                        check = false;
                    }
                });
                if ((item.Approved === false || item.Approved === null) && (item.Money1 === '' || item.Money1 === null || item.Money1 === undefined)) {
                    check = false;
                }
                if (check === false) {
                    tableInvalid.push(item);
                };
            });
            //▼ ChuongNT3 - 14/08/2018 - loại 37
            if (error_check == 0) {
                if ($('.note-editable').text().trim().length <= 0) {
                    XFunction.RenderMessage('error', 'Vui lòng nhập nội dung tin nhắn!');
                    return;
                }
                if (tableReturn.length === 0) {
                    XFunction.RenderMessage('error', 'Vui lòng nhập thông tin nhân viên cần giữ lương!');
                    return;
                };
                if (tableInvalid.length !== 0) {
                    XFunction.RenderMessage('error', 'Dữ liệu nhập chưa đầy đủ!');
                    return;
                };
                var tableDateInvalid = []; dateNow = (new Date).getDate();
                function checkdata(mounth, year) {
                    var dateT = new Date;
                    var check = false;

                    //▼	Edit - VietMXH - 31/03/2020 - LaiPT2 yc: Chỉnh ngày tính tháng truy thu==================================================
                    if (dateT.getDate() <= 9) {
                        if ((parseInt(mounth) - parseInt(dateT.getMonth()) >= 0) && parseInt(dateT.getFullYear()) == parseInt(year)) {
                            check = true;
                        }
                        else if (parseInt(mounth) == 12) {
                            if (parseInt(dateT.getMonth()) == 0 && parseInt(dateT.getFullYear()) - parseInt(year) == 1) {
                                check = true;
                            }
                            else if (parseInt(dateT.getMonth()) != 1 && parseInt(year) > parseInt(dateT.getFullYear())) {
                                check = true;
                            }
                        }
                        else if (parseInt(year) > parseInt(dateT.getFullYear())) {
                            check = true;
                        }
                    } else {
                        if (parseInt(year) > parseInt(dateT.getFullYear())) {
                            check = true;
                        }
                        else if (parseInt(year) == parseInt(dateT.getFullYear()) && (parseInt(mounth) - parseInt(dateT.getMonth()) >= 1)) {
                            check = true;
                        }
                    }
                    //▲	Edit - VietMXH - 31/03/2020 - LaiPT2 yc: Chỉnh ngày tính tháng truy thu==================================================

                    return check;
                };
                $.each(tableReturn, function (index, item) {
                    if (checkdata(item.Quantity, item.Quantity1) == false) {
                        tableDateInvalid.push(item);
                    }
                });
                if (tableDateInvalid.length > 0) {

                    //▼	Edit - VietMXH - 31/03/2020 - LaiPT2 yc: Chỉnh ngày tính tháng truy thu==================================================
                    if (dateNow > 9) {
                        XFunction.RenderMessage('error', 'Từ ngày 9, chỉ được chọn tháng truy thu >= tháng hiện tại!');
                    } else {
                        XFunction.RenderMessage('error', 'Trước ngày 9, thì chỉ được chọn tháng truy thu nhỏ hơn tháng hiện tại không quá 1 tháng hoặc >= tháng hiện tại!');
                    }
                    //▲	Edit - VietMXH - 31/03/2020 - LaiPT2 yc: Chỉnh ngày tính tháng truy thu==================================================

                    return;
                }
                $.each(tableReturn, function (index, item) {
                    item.Property13 = item.Property13.split('-')[0].trim()          //ChuongNT3 - 14/08/2018 - loại 37
                    item.ShopCode = item.ShopCode.split('--')[0];
                    item.EmpCode = item.EmpCode.split('--')[0];
                    if (item.Approved === null || item.Approved === '' || item.Approved === undefined) {
                        if (item.Money1 === null && item.Money1 === '' && item.Money1 === undefined) {
                            item.Money1 = 0;
                        }
                    } else if (item.Approved === true) {
                        item.Money1 = null;
                    }
                });
                $('#Details').val(JSON.stringify(tableReturn));
                $('#DetailsLimited').val(JSON.stringify(''));

                $('#Description').val(catagoryInfo.Description);
                $('#TitleRequest').val($('#Title').val());
                $('#typeId').val(catagoryInfo.Id);

                var form = $("form#form-create");
                form.attr("action", "/Requests/Create");
                form.submit();
                $('#WaitDialog').modal('show');

            }
            //▲ ChuongNT3 - 14/08/2018 - loại 37
        });
    };
    function contruct_65() {
        $areaChiTiet.show(); $areaDowloadAndImport.show();
        var dataHandsontable = [];
        contructData = function () {
            dataHandsontable = [
                {
                    ItemId: null,
                    Quantity: null,
                    Note: null,
                    Status: null,
                    Sum: null,
                    QuantityAvaiable: null,
                    EmpCode: null,
                    Price: null,
                    NoticeAlertId: null,
                    ShopCode: null,
                    OfficeCode: null,
                    CustomerCode: null,
                    CustomerName: null,
                    SaleCode: null,
                    Time1: null,
                    Time2: null,
                    Money1: null,
                    Money2: null,
                    ProductCode: null,
                    ProductName: null,
                    Imei: null,
                    Time3: null,
                    Money3: null,
                    Money4: null,
                    Approved: null,
                    EmpCode1: null,
                    EmpCode2: null,
                    Quantity1: null,
                    Quantity2: null,
                    Quantity3: null,
                    Quantity4: null,
                    Property1: null,
                    Property2: null,
                    Property3: null,
                    Property: null,
                    JobCode1: null,
                    JobCode2: null,
                    EmpCode3: null,
                    ShopCode2: null
                }];

        }; contructData();
        var setting = function () {
            return {
                //=================================Data=======
                data: dataHandsontable,
                //================================Cols=======
                maxCols: 6,
                minCols: 6,
                startCols: 6,
                minSpareCols: 0,
                allowInsertColumn: false,
                allowRemoveColumn: false,
                autoColumnSize: true,
                autoWrapCol: true,
                columnSorting: false,
                //colWidths: 'undefined',
                copyColsLimit: 6,
                currentColClassName: 'currentCol', //currentCol
                fixedColumnsLeft: 0,
                manualColumnMove: false,
                manualColumnResize: true,
                viewportColumnRenderingOffset: 6,
                sortIndicator: true,
                //================================Rows=======
                allowInsertRow: true,
                allowRemoveRow: true,
                autoRowSize: true,
                autoWrapRow: true,
                copyRowsLimit: 1000,
                currentRowClassName: 'currentRow',
                fixedRowsTop: 0,
                manualRowMove: false,
                manualRowResize: true,
                rowHeaders: true,
                minSpareRows: 10,
                //startRows: 10,
                //viewportRowRenderingOffset : 'auto',
                maxRows: 10,
                minRows: 10,
                //================================Oder=======
                allowInvalid: false,
                stretchH: 'all',
                commentedCellClassName: 'htCommentCell',
                comments: true,
                contextMenu: true,
                copyable: true,
                customBorders: false,
                debug: false,
                disableVisualSelection: true,
                enterBeginsEditingBoolean: true,
                fillHandle: true,
                outsideClickDeselects: true,
                fragmentSelection: false,
                groups: false,
                invalidCellClassName: 'htInvalid',
                mergeCells: false,
                multiSelect: true,
                noWordWrapClassName: 'htNoWrap',
                placeholder: false,
                placeholderCellClassName: 'htPlaceholder',
                readOnlyCellClassName: 'htDimmed',
                search: false,
                trimWhitespace: true,
                undo: true,
                formulas: true,
                wordWrap: true,
                copyPaste: false,
                //====================================Oder ==============================================
                colHeaders: ['Shop', 'Mã sản phẩm', 'Tên sản phẩm', 'Màu sắc', 'Số lượng', 'Ghi chú', 'Tạo callog'],
                columns: [
                    { data: 'A', type: 'text', width: 250, readOnly: true },
                    { data: 'B', type: 'text', width: 100, readOnly: true },
                    { data: 'C', type: 'text', width: 250, readOnly: true },
                    { data: 'D', type: 'text', width: 100, readOnly: true },
                    { data: 'E', type: 'text', width: 100, readOnly: true },
                    { data: 'G', type: 'checkbox', width: 100, uncheckedTemplate: null, readOnly: true },
                    { data: 'F', type: 'text', width: 500, readOnly: true },

                ],
            };
        };
        hot = new Handsontable(container, setting());
        function functionConfigImportExcel() {
            var X = XLSX;
            function fixdata(data) {
                var o = "", l = 0, w = 10240;
                for (; l < data.byteLength / w; ++l) o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w, l * w + w)));
                o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w)));
                return o;
            }
            function to_json(workbook) {
                var result = {};
                workbook.SheetNames.forEach(function (sheetName) {
                    var roa = X.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);
                    if (roa.length > 0) {
                        result[sheetName] = roa;
                    }
                });
                return result;
            }

            $('#FileSupport').change(function (event) {
                var fileValid = false;
                fileValid = Validater.endFile($('#FileSupport').val());

                if (fileValid) {

                    var files = event.target.files;
                    var f = files[0];
                    {
                        var reader = new FileReader();
                        var name = f.name;
                        reader.onload = function (e) {
                            var data = e.target.result;
                            var arr = fixdata(data);
                            wb = X.read(btoa(arr), { type: 'base64' });
                            var wb;
                            var output = to_json(wb);
                            functionConfigSetDataFromExcel(output.Sheet1);
                        };
                        reader.readAsArrayBuffer(f);
                    }

                }
            });

        };
        functionConfigImportExcel();
        function functionConfigSetDataFromExcel(jsondata) {
            if (jsondata === undefined || jsondata === null || jsondata === '') {
                XFunction.RenderMessage('error', 'Không có dữ liệu trong file')
            } else {

            }

        };
    };
    function contruct_53() {
        var $$ = function (id) { return document.getElementById(id); },
            container1 = $$('handsontableEx'), hot1,
            container2 = $$('handsontableEx2'), hot2;
        $('#captionHot1').html('Thông tin quỹ tiền mặt bàn giao').css('font-weight', 'bold').css('color', 'green');
        $('#captionHot2').html('Giao dịch chưa hoàn tất trên hệ thống').css('font-weight', 'bold').css('color', 'green');
        $areaChiTiet.show(); $areaDowloadAndImport.hide();
        var dataHandsontable1 = [];
        var dataHandsontable2 = [];
        contructData = function () {
            for (i = 0; i < 6; i++) {
                var datarow1 = {
                    ItemId: null,
                    Quantity: null,
                    Note: null,
                    Status: null,
                    Sum: null,
                    QuantityAvaiable: null,
                    EmpCode: null,
                    Price: null,
                    NoticeAlertId: null,
                    ShopCode: null,
                    OfficeCode: null,
                    CustomerCode: null,
                    CustomerName: null,
                    SaleCode: null,
                    Time1: null,
                    Time2: null,
                    Money1: null,
                    Money2: null,
                    ProductCode: null,
                    ProductName: null,
                    Imei: null,
                    Time3: null,
                    Money3: null,
                    Money4: null,
                    Approved: null,
                    EmpCode1: null,
                    EmpCode2: null,
                    Quantity1: null,
                    Quantity2: null,
                    Quantity3: null,
                    Quantity4: null,
                    Property1: null,
                    Property2: null,
                    Property3: null,
                    Property: null,
                    JobCode1: null,
                    JobCode2: null,
                    EmpCode3: null,
                    ShopCode2: null
                };
                var datarow2 = {
                    ItemId: null,
                    Quantity: null,
                    Note: null,
                    Status: null,
                    Sum: null,
                    QuantityAvaiable: null,
                    EmpCode: null,
                    Price: null,
                    NoticeAlertId: null,
                    ShopCode: null,
                    OfficeCode: null,
                    CustomerCode: null,
                    CustomerName: null,
                    SaleCode: null,
                    Time1: null,
                    Time2: null,
                    Money1: null,
                    Money2: null,
                    ProductCode: null,
                    ProductName: null,
                    Imei: null,
                    Time3: null,
                    Money3: null,
                    Money4: null,
                    Approved: null,
                    EmpCode1: null,
                    EmpCode2: null,
                    Quantity1: null,
                    Quantity2: null,
                    Quantity3: null,
                    Quantity4: null,
                    Property1: null,
                    Property2: null,
                    Property3: null,
                    Property: null,
                    JobCode1: null,
                    JobCode2: null,
                    EmpCode3: null,
                    ShopCode2: null
                }
                dataHandsontable1.push(datarow1);
                dataHandsontable2.push(datarow2);
            };
        }; contructData();
        setcontructData = function () {
            var sourceLoaiThutien = ['Tiền bán hàng', 'Tiền thu hộ ACS', 'Tiền thu hộ Ftel', 'Tiền thu hộ phí miễn thường', 'Tiền thu hộ đặt cọc bảo hành', 'Tiền thu hộ Payoo'];
            var sourceTenGiaoDich = ['Xuất bán', 'Trả hàng', 'Đặt cọc', 'Chi cọc', 'Thu mua máy cũ', 'Xuất trả'];
            for (i = 0; i < 6; i++) {
                //data 1
                dataHandsontable1[i].Property1 = sourceLoaiThutien[i];
                dataHandsontable1[i].Money1 = 0;
                dataHandsontable1[i].Money2 = 0;
                dataHandsontable1[i].Diffrent = 0;
                dataHandsontable1[i].Property2 = 1;
                //data 2
                dataHandsontable2[i].Property1 = sourceTenGiaoDich[i];
                dataHandsontable2[i].Money1 = 0;
                dataHandsontable2[i].Diffrent = 0;
                dataHandsontable2[i].Property2 = 2;
            }
        }; setcontructData(dataHandsontable1);
        var setting1 = function () {
            return {
                //=================================Data=======
                data: dataHandsontable1,
                //================================Cols=======
                maxCols: 5,
                minCols: 5,
                startCols: 5,
                minSpareCols: 0,
                allowInsertColumn: false,
                allowRemoveColumn: false,
                autoColumnSize: true,
                autoWrapCol: true,
                columnSorting: false,
                //colWidths: 'undefined',
                copyColsLimit: 5,
                currentColClassName: 'currentCol', //currentCol
                fixedColumnsLeft: 1,
                manualColumnMove: false,
                manualColumnResize: true,
                viewportColumnRenderingOffset: 5,
                sortIndicator: true,
                //================================Rows=======
                allowInsertRow: true,
                allowRemoveRow: true,
                autoRowSize: true,
                autoWrapRow: true,
                copyRowsLimit: 1000,
                currentRowClassName: 'currentRow',
                fixedRowsTop: 0,
                manualRowMove: false,
                manualRowResize: true,
                rowHeaders: true,
                minSpareRows: 0,
                //startRows: 10,
                //viewportRowRenderingOffset : 'auto',
                maxRows: 7,
                minRows: 7,
                //================================Oder=======
                allowInvalid: false,
                stretchH: 'all',
                commentedCellClassName: 'htCommentCell',
                comments: true,
                contextMenu: true,
                copyable: true,
                customBorders: false,
                debug: false,
                disableVisualSelection: true,
                enterBeginsEditingBoolean: true,
                fillHandle: true,
                outsideClickDeselects: true,
                fragmentSelection: false,
                groups: false,
                invalidCellClassName: 'htInvalid',
                mergeCells: false,
                multiSelect: true,
                noWordWrapClassName: 'htNoWrap',
                placeholder: false,
                placeholderCellClassName: 'htPlaceholder',
                readOnlyCellClassName: 'htDimmed',
                search: false,
                trimWhitespace: true,
                undo: true,
                formulas: true,
                wordWrap: true,
                copyPaste: false,
                //====================================Oder ==============================================
                colHeaders: ['Loại thu tiền', 'Số tiền đã thu', 'Số tiền bàn giao', 'Chênh lệch', 'Giải trình'],
                columns: [
                    {
                        data: 'Property1', type: 'text', readOnly: true, className: "htLeft",
                        renderer: function (instance, td, row, col, prop, value) {
                            if (col == 0 && row == 6) {
                                td.style.fontWeight = 'bold';
                                td.style.textAlign = 'left';
                                value = 'Tổng tiền:';
                            }
                            Handsontable.TextRenderer.apply(this, arguments);
                        }
                    },
                    {
                        data: 'Money1', format: '0,0', type: 'numeric', width: 150,
                        renderer: function (instance, td, row, col, prop, value) {
                            if (col === 1 && row === 6) {
                                td.style.fontWeight = 'bold';
                                td.style.textAlign = 'right';
                                var colls = instance.getDataAtCol(1);
                                var sum = 0;
                                $.each(colls, function (index, item) {
                                    sum += Handsontable.helper.isNumeric(item) ? item : 0;
                                });
                                value = sum;
                            }
                            Handsontable.NumericRenderer.apply(this, arguments);
                        }
                    },
                    {
                        data: 'Money2', format: '0,0', type: 'numeric', width: 150,
                        renderer: function (instance, td, row, col, prop, value) {
                            if (col === 2 && row === 6) {
                                td.style.fontWeight = 'bold';
                                td.style.textAlign = 'right';
                                var colls = instance.getDataAtCol(2);
                                var sum = 0;
                                $.each(colls, function (index, item) {
                                    sum += Handsontable.helper.isNumeric(item) ? item : 0;
                                });
                                value = sum;
                            }
                            Handsontable.NumericRenderer.apply(this, arguments);
                        }
                    },
                    {
                        data: 'Diffrent', format: '0,0', type: 'numeric', width: 150, readOnly: true,
                        renderer: function (instance, td, row, col, prop, value) {
                            if (col === 3 && row === 6) {
                                td.style.fontWeight = 'bold';
                                td.style.textAlign = 'right';
                                var colls = instance.getDataAtCol(3);
                                var sum = 0;
                                $.each(instance.getData(), function (index, item) {
                                    var money1 = Handsontable.helper.isNumeric(item.Money1) ? item.Money1 : 0;
                                    var money2 = Handsontable.helper.isNumeric(item.Money2) ? item.Money2 : 0;
                                    var dix = money1 - money2;
                                    sum += dix;
                                });
                                value = sum;
                            } else if (col === 3 && row !== 6) {
                                td.style.fontWeight = 'bold';
                                td.style.textAlign = 'right';
                                var money1 = Handsontable.helper.isNumeric(instance.getDataAtCell(row, 1)) ? instance.getDataAtCell(row, 1) : 0;
                                var money2 = Handsontable.helper.isNumeric(instance.getDataAtCell(row, 2)) ? instance.getDataAtCell(row, 2) : 0;
                                var dix = money1 - money2;
                                value = dix;
                            }
                            Handsontable.NumericRenderer.apply(this, arguments);
                        }
                    },
                    { data: 'Note', type: 'text', width: 500, className: "htLeft" },
                ],
            };
        };
        hot1 = new Handsontable(container1, setting1());
        hot1.updateSettings({
            cells: function (row, col, prop) {
                var cellProperties = {};
                if (row == 6) {
                    cellProperties.readOnly = true;
                }
                return cellProperties;
            }
        });
        var setting2 = function () {
            return {
                //=================================Data=======
                data: dataHandsontable2,
                //================================Cols=======
                maxCols: 4,
                minCols: 4,
                startCols: 4,
                minSpareCols: 0,
                allowInsertColumn: false,
                allowRemoveColumn: false,
                autoColumnSize: true,
                autoWrapCol: true,
                columnSorting: false,
                //colWidths: 'undefined',
                copyColsLimit: 4,
                currentColClassName: 'currentCol', //currentCol
                fixedColumnsLeft: 1,
                manualColumnMove: false,
                manualColumnResize: true,
                viewportColumnRenderingOffset: 4,
                sortIndicator: true,
                //================================Rows=======
                allowInsertRow: true,
                allowRemoveRow: true,
                autoRowSize: true,
                autoWrapRow: true,
                copyRowsLimit: 1000,
                currentRowClassName: 'currentRow',
                fixedRowsTop: 0,
                manualRowMove: false,
                manualRowResize: true,
                rowHeaders: true,
                minSpareRows: 0,
                //startRows: 10,
                //viewportRowRenderingOffset : 'auto',
                maxRows: 7,
                minRows: 7,
                //================================Oder=======
                allowInvalid: false,
                stretchH: 'all',
                commentedCellClassName: 'htCommentCell',
                comments: true,
                contextMenu: true,
                copyable: true,
                customBorders: false,
                debug: false,
                disableVisualSelection: true,
                enterBeginsEditingBoolean: true,
                fillHandle: true,
                outsideClickDeselects: true,
                fragmentSelection: false,
                groups: false,
                invalidCellClassName: 'htInvalid',
                mergeCells: false,
                multiSelect: true,
                noWordWrapClassName: 'htNoWrap',
                placeholder: false,
                placeholderCellClassName: 'htPlaceholder',
                readOnlyCellClassName: 'htDimmed',
                search: false,
                trimWhitespace: true,
                undo: true,
                formulas: true,
                wordWrap: true,
                copyPaste: false,
                //====================================Oder ==============================================
                colHeaders: ['Tên giao dịch', 'Tên khách hàng', 'Số tiền', 'Lý do'],
                columns: [
                    {
                        data: 'Property1', type: 'text', width: 150, className: 'htLeft', readOnly: true,
                        renderer: function (instance, td, row, col, prop, value) {
                            if (col == 0 && row == 6) {
                                td.style.fontWeight = 'bold';
                                td.style.textAlign = 'left';
                                value = 'Tổng tiền:';
                            }
                            Handsontable.TextRenderer.apply(this, arguments);
                        }
                    },
                    { data: 'CustomerName', type: 'text', width: 300, className: 'htLeft', },
                    {
                        data: 'Money1', format: '0,0', type: 'numeric', width: 150,
                        renderer: function (instance, td, row, col, prop, value) {
                            if (col === 2 && row === 6) {
                                td.style.fontWeight = 'bold';
                                td.style.textAlign = 'right';
                                var colls = instance.getDataAtCol(2);
                                var sum = 0;
                                $.each(colls, function (index, item) {
                                    sum += Handsontable.helper.isNumeric(item) ? item : 0;
                                });
                                value = sum;
                            }
                            Handsontable.NumericRenderer.apply(this, arguments);
                        }
                    },
                    { data: 'Note', type: 'text', width: 500, className: 'htLeft', },
                ],
            };
        };
        hot2 = new Handsontable(container2, setting2());
        hot2.updateSettings({
            cells: function (row, col, prop) {
                var cellProperties = {};
                if (row == 6) {
                    cellProperties.readOnly = true;
                }
                return cellProperties;
            }
        });
        $btnSend.on('click', function () {
            $.get('/Requests/KiemTraCaLamBanGiaoQuyGiuaCa', {}, function (respone) {
                if (respone !== '' && respone !== null && respone !== undefined && respone[0].error == 1) {
                    var table1 = $.grep(hot1.getData(), function (item, index) { return index !== 6 });
                    var table2 = $.grep(hot2.getData(), function (item, index) { return index !== 6 });

                    var dataInvalidTable1 = [];
                    var dataInvalidTable2 = [];

                    $.each(table1, function (index, item) {
                        var money1 = $.isNumeric(item.Money1) ? item.Money1 : 0;
                        var money2 = $.isNumeric(item.Money2) ? item.Money2 : 0;
                        if (money1 != money2 && (item.Note == null || item.Note == undefined || item.Note.trim() == '')) {
                            dataInvalidTable1.push(item);
                        };
                    });
                    $.each(table2, function (index, item) {
                        var customerName = (item.CustomerName == null || item.CustomerName == undefined || item.CustomerName.trim() == '') ? '' : item.CustomerName;
                        var money1 = $.isNumeric(item.Money1) ? item.Money1 : 0;
                        var note = (item.Note == null || item.Note == undefined || item.Note.trim() == '') ? '' : item.Note;
                        if (customerName != '' || money1 > 0 || note != '') {
                            if (customerName != '' && money1 > 0 && note != '') { }
                            else {
                                dataInvalidTable2.push(item);
                            }
                        }
                    });

                    if (dataInvalidTable1.length > 0) {
                        XFunction.RenderMessage('error', 'Số tiền đã thu khác số tiền bàn giao vui lòng nhập giải trình'); return;
                    }
                    if (dataInvalidTable2.length > 0) {
                        XFunction.RenderMessage('error', 'Vui lòng nhập đầy đủ Tên khách hàng số tiền và lý do'); return;
                    }

                    $('#Details').val(JSON.stringify(table1));
                    $('#DetailsLimited').val(JSON.stringify(table2));

                    $('#Description').val(catagoryInfo.Description);
                    $('#TitleRequest').val($('#Title').val());
                    $('#typeId').val(catagoryInfo.Id);

                    var form = $("form#form-create");
                    form.attr("action", "/Requests/Create");
                    form.submit();
                    $('#WaitDialog').modal('show');
                } else {
                    XFunction.RenderMessage('error', respone[0].message); return;
                }
            });
        });
    };
    function contruct_75() {
        $areaChiTiet.show(); $areaDowloadAndImport.hide();
        var dataHandsontable = [];
        contructData = function () {
            dataHandsontable = [
                {
                    ItemId: null,
                    Quantity: null,
                    Note: null,
                    Status: null,
                    Sum: null,
                    QuantityAvaiable: null,
                    EmpCode: null,
                    Price: null,
                    NoticeAlertId: null,
                    ShopCode: null,
                    OfficeCode: null,
                    CustomerCode: null,
                    CustomerName: null,
                    SaleCode: null,
                    Time1: null,
                    Time2: null,
                    Money1: null,
                    Money2: null,
                    ProductCode: null,
                    ProductName: null,
                    Imei: null,
                    Time3: null,
                    Money3: null,
                    Money4: null,
                    Approved: null,
                    EmpCode1: null,
                    EmpCode2: null,
                    Quantity1: null,
                    Quantity2: null,
                    Quantity3: null,
                    Quantity4: null,
                    Property1: null,
                    Property2: null,
                    Property3: null,
                    Property: null,
                    JobCode1: null,
                    JobCode2: null,
                    EmpCode3: null,
                    ShopCode2: null
                }];

        }; contructData();
        var sourceAutocompleteShops = [];
        $.get('/Requests/GetShopByRegion', { regionId: 0 }, function (respone) {
            $.each(respone, function (index, item) {
                sourceAutocompleteShops.push(item.WarehouseCode + '--' + item.WarehouseCodeB1 + '--' + item.WarehouseName);
            });

        });
        var sourceKho = [];
        sourceKho = ['Kho hàng bán', 'Kho hàng trưng bày', 'Kho bảo hành', 'Kho hàng ký gởi', 'Sổ tài sản BI', 'Kho máy cũ', 'Kho khuyến mãi'];
        var setting = function () {
            return {
                //=================================Data=======
                data: dataHandsontable,
                //================================Cols=======
                maxCols: 7,
                minCols: 7,
                startCols: 7,
                minSpareCols: 0,
                allowInsertColumn: false,
                allowRemoveColumn: false,
                autoColumnSize: true,
                autoWrapCol: true,
                columnSorting: false,
                //colWidths: 'undefined',
                copyColsLimit: 7,
                currentColClassName: 'currentCol', //currentCol
                fixedColumnsLeft: 1,
                manualColumnMove: false,
                manualColumnResize: true,
                viewportColumnRenderingOffset: 7,
                sortIndicator: true,
                //================================Rows=======
                allowInsertRow: true,
                allowRemoveRow: true,
                autoRowSize: true,
                autoWrapRow: true,
                copyRowsLimit: 1000,
                currentRowClassName: 'currentRow',
                fixedRowsTop: 0,
                manualRowMove: false,
                manualRowResize: true,
                rowHeaders: true,
                minSpareRows: 10,
                //startRows: 10,
                //viewportRowRenderingOffset : 'auto',
                //maxRows: 'Infinity',
                //minRows: 'Infinity',
                //================================Oder=======
                allowInvalid: false,
                stretchH: 'all',
                commentedCellClassName: 'htCommentCell',
                comments: true,
                contextMenu: true,
                copyable: true,
                customBorders: false,
                debug: false,
                disableVisualSelection: true,
                enterBeginsEditingBoolean: true,
                fillHandle: true,
                outsideClickDeselects: true,
                fragmentSelection: false,
                groups: false,
                invalidCellClassName: 'htInvalid',
                mergeCells: false,
                multiSelect: true,
                noWordWrapClassName: 'htNoWrap',
                placeholder: false,
                placeholderCellClassName: 'htPlaceholder',
                readOnlyCellClassName: 'htDimmed',
                search: false,
                trimWhitespace: true,
                undo: true,
                formulas: true,
                wordWrap: true,
                copyPaste: false,
                //====================================Oder ==============================================
                colHeaders: ['Mã hàng', 'Tên hàng', 'Serial/Imei', 'Shop', 'Kho xuất', 'Số lượng', 'Lý do'],
                columns: [
                    { data: 'ProductCode', type: 'text', width: 150, className: 'htLeft' },
                    { data: 'ProductName', type: 'text', width: 350, className: 'htLeft', readOnly: true },
                    { data: 'Imei', type: 'text', width: 150, className: 'htLeft' },
                    { data: 'ShopCode', type: 'autocomplete', width: 350, source: sourceAutocompleteShops, strict: true, className: 'htLeft' },
                    { data: 'Property1', type: 'dropdown', width: 150, source: sourceKho, className: 'htLeft' },
                    { data: 'Quantity', type: 'numeric', width: 150, className: 'htRight' },
                    { data: 'Property2', type: 'text', width: 500, className: 'htLeft' },
                ],
                afterChange: function (changes, source) {
                    if (!changes || source == 'not') {
                        return;
                    }
                    var instance = this;
                    changes.forEach(function (change) {
                        var row = change[0];
                        var col = change[1];
                        var newValue = change[3];
                        var cellProperties = {}, options;
                        if (col == 'ProductCode' && newValue !== '' && newValue !== null && newValue !== '') {
                            setAutocompleteSource.call(instance, row, newValue);
                            instance.render();
                        };
                    });
                },
            };
        };
        hot = new Handsontable(container, setting());
        function setAutocompleteSource(row, value) {
            var instance = this;
            $.get('/Requests/GetProduct', { productCode: value }, function (respone) {
                if (respone !== '') {
                    instance.setDataAtRowProp(row, 'ProductCode', respone[0].ProductCode, 'not');
                    instance.setDataAtRowProp(row, 'ProductName', respone[0].ProductName, 'not');
                } else {
                    instance.setDataAtRowProp(row, 'ProductCode', '', 'not');
                    instance.setDataAtRowProp(row, 'ProductName', '', 'not');
                    XFunction.RenderMessage('error', 'Sản phẩm không tồn tại');
                }
                //instance.setDataAtRowProp(row, 1, options[0]); set default value first find
            });
        }
        $btnSend.on('click', function () {

            var columnRequired = ['ProductCode', 'ProductName', 'Imei', 'ShopCode', 'Property1', 'Quantity', 'Property2'];
            var mydata = hot.getData() == undefined ? [] : hot.getData();
            var mydataReturn = [];
            $.each(mydata, function (index, item) {
                var isSave = false;
                $.each(columnRequired, function (index2, item2) {
                    if (item[item2] != null && item[item2] != undefined && item[item2] != '') {
                        isSave = true;
                    }
                });
                if (isSave == true) {
                    mydataReturn.push(item);
                }
            });
            var dataInvalid = []
            $.each(mydataReturn, function (index, item) {
                var check = true;
                $.each(columnRequired, function (index2, item2) {
                    if (item[item2] == null || item[item2] == undefined || item[item2] == '') {
                        check = false;
                    }
                });
                if (check == false) {
                    dataInvalid.push(item);
                }
            });

            if (mydataReturn.length == 0) {
                XFunction.RenderMessage('error', 'Dữ liệu chưa hợp lệ'); return;
            }
            if (dataInvalid.length > 0) {
                XFunction.RenderMessage('error', 'Dữ liệu nhập chưa đầy đủ'); return;
            }
            $.each(mydataReturn, function (index, item) {
                item.ShopCode = item.ShopCode.split('--')[0];
            });

            $('#Details').val(JSON.stringify(mydataReturn));
            $('#DetailsLimited').val(JSON.stringify(''));

            $('#Description').val(catagoryInfo.Description);
            $('#TitleRequest').val($('#Title').val());
            $('#typeId').val(catagoryInfo.Id);

            var form = $("form#form-create");
            form.attr("action", "/Requests/Create");
            form.submit();
            $('#WaitDialog').modal('show');
        });
    }; //Xuất khác
    function contruct_82() {
        $areaChiTiet.show(); $areaDowloadAndImport.hide();
        var dataHandsontable = [];
        contructData = function () {
            dataHandsontable = [
                {
                    ItemId: null,
                    Quantity: null,
                    Note: null,
                    Status: null,
                    Sum: null,
                    QuantityAvaiable: null,
                    EmpCode: null,
                    Price: null,
                    NoticeAlertId: null,
                    ShopCode: null,
                    OfficeCode: null,
                    CustomerCode: null,
                    CustomerName: null,
                    SaleCode: null,
                    Time1: null,
                    Time2: null,
                    Money1: null,
                    Money2: null,
                    ProductCode: null,
                    ProductName: null,
                    Imei: null,
                    Time3: null,
                    Money3: null,
                    Money4: null,
                    Approved: null,
                    EmpCode1: null,
                    EmpCode2: null,
                    Quantity1: null,
                    Quantity2: null,
                    Quantity3: null,
                    Quantity4: null,
                    Property1: null,
                    Property2: null,
                    Property3: null,
                    Property: null,
                    JobCode1: null,
                    JobCode2: null,
                    EmpCode3: null,
                    ShopCode2: null
                }];

        }; contructData();
        var sourceKho = [];
        sourceKho = ['Kho hàng bán', 'Kho hàng trưng bày', 'Kho bảo hành', 'Kho hàng ký gởi', 'Sổ tài sản BI', 'Kho máy cũ', 'Kho khuyến mãi'];
        var setting = function () {
            return {
                //=================================Data=======
                data: dataHandsontable,
                //================================Cols=======
                maxCols: 12,
                minCols: 12,
                startCols: 12,
                minSpareCols: 0,
                allowInsertColumn: false,
                allowRemoveColumn: false,
                autoColumnSize: true,
                autoWrapCol: true,
                columnSorting: false,
                //colWidths: 'undefined',
                copyColsLimit: 12,
                currentColClassName: 'currentCol', //currentCol
                fixedColumnsLeft: 0,
                manualColumnMove: false,
                manualColumnResize: true,
                viewportColumnRenderingOffset: 12,
                sortIndicator: true,
                //================================Rows=======
                allowInsertRow: true,
                allowRemoveRow: true,
                autoRowSize: true,
                autoWrapRow: true,
                copyRowsLimit: 1000,
                currentRowClassName: 'currentRow',
                fixedRowsTop: 0,
                manualRowMove: false,
                manualRowResize: true,
                rowHeaders: true,
                minSpareRows: 10,
                //startRows: 10,
                //viewportRowRenderingOffset : 'auto',
                //maxRows: 'Infinity',
                //minRows: 'Infinity',
                //================================Oder=======
                allowInvalid: false,
                stretchH: 'all',
                commentedCellClassName: 'htCommentCell',
                comments: true,
                contextMenu: true,
                copyable: true,
                customBorders: false,
                debug: false,
                disableVisualSelection: true,
                enterBeginsEditingBoolean: true,
                fillHandle: true,
                outsideClickDeselects: true,
                fragmentSelection: false,
                groups: false,
                invalidCellClassName: 'htInvalid',
                mergeCells: false,
                multiSelect: true,
                noWordWrapClassName: 'htNoWrap',
                placeholder: false,
                placeholderCellClassName: 'htPlaceholder',
                readOnlyCellClassName: 'htDimmed',
                search: false,
                trimWhitespace: true,
                undo: true,
                formulas: true,
                wordWrap: true,
                copyPaste: false,
                //====================================Oder ==============================================
                colHeaders:
                    ['Mã hàng cần tách',
                        'Thiết bị và cấu hình trước tách',
                        'Serial/Imei',
                        'Kho xuất',
                        'Số lượng',
                        'Giá bán',
                        'Mã hàng được tách',
                        'Thiết bị và cấu hình sau tách',
                        'Serial/Imei',
                        'Kho nhập',
                        'Giá nhập',
                        'Lý do'
                    ],
                columns: [
                    { data: 'Property1', type: 'text', className: 'htLeft', width: 200 },
                    { data: 'Property2', type: 'text', className: 'htLeft', width: 350 },
                    { data: 'Property3', type: 'text', className: 'htLeft', width: 200 },
                    { data: 'Property4', type: 'dropdown', className: 'htLeft', source: sourceKho, width: 150 },
                    { data: 'Quantity', type: 'numeric', className: 'htLeft', width: 150, format: '0,00' },
                    { data: 'Money1', type: 'numeric', className: 'htLeft', width: 150, format: '0,00' },
                    { data: 'Property5', type: 'text', className: 'htLeft', width: 200 },
                    { data: 'Property6', type: 'text', className: 'htLeft', width: 350 },
                    { data: 'Property7', type: 'text', className: 'htLeft', width: 200 },
                    { data: 'Property8', type: 'dropdown', className: 'htLeft', source: sourceKho, width: 150 },
                    { data: 'Money2', type: 'numeric', className: 'htLeft', width: 150, format: '0,00' },
                    { data: 'Property9', type: 'text', className: 'htLeft', width: 500 },
                ],
            };
        };
        hot = new Handsontable(container, setting());
        $btnSend.on('click', function () {

            var columnRequired = ['Property1', 'Property2', 'Property3', 'Property4', 'Quantity', 'Money1'
                , 'Property5', 'Property6', 'Property7', 'Property8', 'Money2', 'Property9'];

            var mydata = hot.getData() == undefined ? [] : hot.getData();
            var mydataReturn = [];
            $.each(mydata, function (index, item) {
                var isSave = false;
                $.each(columnRequired, function (index2, item2) {
                    if (item[item2] !== null && item[item2] !== undefined && item[item2] !== '') {
                        isSave = true;
                    }
                });
                if (isSave == true) {
                    mydataReturn.push(item);
                }
            });
            var dataInvalid = []
            $.each(mydataReturn, function (index, item) {
                var check = true;
                $.each(columnRequired, function (index2, item2) {
                    if (item[item2] === null || item[item2] === undefined || item[item2] === '') {
                        check = false;
                    }
                });
                if (check == false) {
                    dataInvalid.push(item);
                }
            });

            console.log(mydataReturn);
            console.log(dataInvalid);

            if (mydataReturn.length == 0) {
                XFunction.RenderMessage('error', 'Dữ liệu chưa hợp lệ'); return;
            }
            if (dataInvalid.length > 0) {
                XFunction.RenderMessage('error', 'Dữ liệu nhập chưa đầy đủ'); return;
            }

            $('#Details').val(JSON.stringify(mydataReturn));
            $('#DetailsLimited').val(JSON.stringify(''));

            $('#Description').val(catagoryInfo.Description);
            $('#TitleRequest').val($('#Title').val());
            $('#typeId').val(catagoryInfo.Id);

            var form = $("form#form-create");
            form.attr("action", "/Requests/Create");
            form.submit();
            $('#WaitDialog').modal('show');
        });
    }; //Tách cấu hình
    function contruct_103() {
        $areaChiTiet.show(); $areaDowloadAndImport.hide();
        var dataHandsontable = [];
        contructData = function () {
            dataHandsontable = [
                {
                    ItemId: null,
                    Quantity: null,
                    Note: null,
                    Status: null,
                    Sum: null,
                    QuantityAvaiable: null,
                    EmpCode: null,
                    Price: null,
                    NoticeAlertId: null,
                    ShopCode: null,
                    OfficeCode: null,
                    CustomerCode: null,
                    CustomerName: null,
                    SaleCode: null,
                    Time1: null,
                    Time2: null,
                    Money1: null,
                    Money2: null,
                    ProductCode: null,
                    ProductName: null,
                    Imei: null,
                    Time3: null,
                    Money3: null,
                    Money4: null,
                    Approved: null,
                    EmpCode1: null,
                    EmpCode2: null,
                    Quantity1: null,
                    Quantity2: null,
                    Quantity3: null,
                    Quantity4: null,
                    Property1: null,
                    Property2: null,
                    Property3: null,
                    Property: null,
                    JobCode1: null,
                    JobCode2: null,
                    EmpCode3: null,
                    ShopCode2: null
                }];

        }; contructData();
        var sourceKho = [];
        sourceKho = ['Kho hàng bán', 'Kho hàng trưng bày', 'Kho bảo hành', 'Kho hàng ký gởi', 'Sổ tài sản BI', 'Kho máy cũ', 'Kho khuyến mãi'];
        var sourceAutocompleteShops = [];
        $.get('/Requests/GetShopByRegion', { regionId: 0 }, function (respone) {
            $.each(respone, function (index, item) {
                sourceAutocompleteShops.push(item.WarehouseCode + '--' + item.WarehouseCodeB1 + '--' + item.WarehouseName);
            });

        });
        var setting = function () {
            return {
                //=================================Data=======
                data: dataHandsontable,
                //================================Cols=======
                maxCols: 13,
                minCols: 13,
                startCols: 13,
                minSpareCols: 0,
                allowInsertColumn: false,
                allowRemoveColumn: false,
                autoColumnSize: true,
                autoWrapCol: true,
                columnSorting: false,
                //colWidths: 'undefined',
                copyColsLimit: 13,
                currentColClassName: 'currentCol', //currentCol
                fixedColumnsLeft: 0,
                manualColumnMove: false,
                manualColumnResize: true,
                viewportColumnRenderingOffset: 13,
                sortIndicator: true,
                //================================Rows=======
                allowInsertRow: true,
                allowRemoveRow: true,
                autoRowSize: true,
                autoWrapRow: true,
                copyRowsLimit: 1000,
                currentRowClassName: 'currentRow',
                fixedRowsTop: 0,
                manualRowMove: false,
                manualRowResize: true,
                rowHeaders: true,
                minSpareRows: 10,
                //startRows: 10,
                //viewportRowRenderingOffset : 'auto',
                //maxRows: 'Infinity',
                //minRows: 'Infinity',
                //================================Oder=======
                allowInvalid: false,
                stretchH: 'all',
                commentedCellClassName: 'htCommentCell',
                comments: true,
                contextMenu: true,
                copyable: true,
                customBorders: false,
                debug: false,
                disableVisualSelection: true,
                enterBeginsEditingBoolean: true,
                fillHandle: true,
                outsideClickDeselects: true,
                fragmentSelection: false,
                groups: false,
                invalidCellClassName: 'htInvalid',
                mergeCells: false,
                multiSelect: true,
                noWordWrapClassName: 'htNoWrap',
                placeholder: false,
                placeholderCellClassName: 'htPlaceholder',
                readOnlyCellClassName: 'htDimmed',
                search: false,
                trimWhitespace: true,
                undo: true,
                formulas: true,
                wordWrap: true,
                copyPaste: false,
                //====================================Oder ==============================================
                colHeaders:
                    ['Shop',
                        'Mã thiết bị cần tách',
                        'Thiết bị và cấu hình',
                        'Serial/Imei',
                        'Kho xuất',
                        'Số lượng',
                        'Giá bán',
                        'Mã hàng được tách',
                        'Thiết bị và cấu hình',
                        'Serial/Imei',
                        'Kho nhập',
                        'Giá bán',
                        'Lý do'
                    ],
                columns: [
                    { data: 'ShopCode', type: 'autocomplete', width: 350, source: sourceAutocompleteShops, strict: true, className: 'htLeft' },
                    { data: 'Property1', type: 'text', className: 'htLeft', width: 200 },
                    { data: 'Property2', type: 'text', className: 'htLeft', width: 350 },
                    { data: 'Property3', type: 'text', className: 'htLeft', width: 200 },
                    { data: 'Property4', type: 'dropdown', className: 'htLeft', source: sourceKho, width: 150 },
                    { data: 'Quantity', type: 'numeric', className: 'htLeft', width: 150, format: '0,00' },
                    { data: 'Money1', type: 'numeric', className: 'htLeft', width: 150, format: '0,00' },
                    { data: 'Property5', type: 'text', className: 'htLeft', width: 200 },
                    { data: 'Property6', type: 'text', className: 'htLeft', width: 350 },
                    { data: 'Property7', type: 'text', className: 'htLeft', width: 200 },
                    { data: 'Property8', type: 'dropdown', className: 'htLeft', source: sourceKho, width: 150 },
                    { data: 'Money2', type: 'numeric', className: 'htLeft', width: 150, format: '0,00' },
                    { data: 'Property9', type: 'text', className: 'htLeft', width: 500 },
                ],
            };
        };
        hot = new Handsontable(container, setting());
        $btnSend.on('click', function () {

            var columnRequired =
                ['ShopCode', 'Property1', 'Property2', 'Property4', 'Quantity', 'Money1', 'Money2', 'Property9'];

            var mydata = hot.getData() == undefined ? [] : hot.getData();
            var mydataReturn = [];
            $.each(mydata, function (index, item) {
                var isSave = false;
                $.each(columnRequired, function (index2, item2) {
                    if (item[item2] !== null && item[item2] !== undefined && item[item2] !== '') {
                        isSave = true;
                    }
                });
                if (isSave == true) {
                    mydataReturn.push(item);
                }
            });
            var dataInvalid = []
            $.each(mydataReturn, function (index, item) {
                var check = true;
                $.each(columnRequired, function (index2, item2) {
                    if (item[item2] === null || item[item2] === undefined || item[item2] === '') {
                        check = false;
                    }
                });
                if (check == false) {
                    dataInvalid.push(item);
                }
            });



            if (mydataReturn.length == 0) {
                XFunction.RenderMessage('error', 'Dữ liệu chưa hợp lệ'); return;
            }
            if (dataInvalid.length > 0) {
                XFunction.RenderMessage('error', 'Dữ liệu nhập chưa đầy đủ'); return;
            }
            $.each(mydataReturn, function (index, item) {
                item.ShopCode = item.ShopCode.split("--")[0];
            });
            $('#Details').val(JSON.stringify(mydataReturn));
            $('#DetailsLimited').val(JSON.stringify(''));

            $('#Description').val(catagoryInfo.Description);
            $('#TitleRequest').val($('#Title').val());
            $('#typeId').val(catagoryInfo.Id);

            var form = $("form#form-create");
            form.attr("action", "/Requests/Create");
            form.submit();
            $('#WaitDialog').modal('show');
        });
    }; // Xuất đổi cấu hình
    function contruct_104() {
        $areaChiTiet.show(); $areaDowloadAndImport.hide();
        var dataHandsontable = [];
        contructData = function () {
            dataHandsontable = [
                {
                    ItemId: null,
                    Quantity: null,
                    Note: null,
                    Status: null,
                    Sum: null,
                    QuantityAvaiable: null,
                    EmpCode: null,
                    Price: null,
                    NoticeAlertId: null,
                    ShopCode: null,
                    OfficeCode: null,
                    CustomerCode: null,
                    CustomerName: null,
                    SaleCode: null,
                    Time1: null,
                    Time2: null,
                    Money1: null,
                    Money2: null,
                    ProductCode: null,
                    ProductName: null,
                    Imei: null,
                    Time3: null,
                    Money3: null,
                    Money4: null,
                    Approved: null,
                    EmpCode1: null,
                    EmpCode2: null,
                    Quantity1: null,
                    Quantity2: null,
                    Quantity3: null,
                    Quantity4: null,
                    Property1: null,
                    Property2: null,
                    Property3: null,
                    Property: null,
                    JobCode1: null,
                    JobCode2: null,
                    EmpCode3: null,
                    ShopCode2: null
                }];

        }; contructData();
        var sourceKho = [];
        sourceKho = ['Kho hàng bán', 'Kho hàng trưng bày', 'Kho bảo hành', 'Kho hàng ký gởi', 'Sổ tài sản BI', 'Kho máy cũ', 'Kho khuyến mãi'];
        var sourceAutocompleteShops = [];
        $.get('/Requests/GetShopByRegion', { regionId: 0 }, function (respone) {
            $.each(respone, function (index, item) {
                sourceAutocompleteShops.push(item.WarehouseCode + '--' + item.WarehouseCodeB1 + '--' + item.WarehouseName);
            });

        });
        var setting = function () {
            return {
                //=================================Data=======
                data: dataHandsontable,
                //================================Cols=======
                maxCols: 13,
                minCols: 13,
                startCols: 13,
                minSpareCols: 0,
                allowInsertColumn: false,
                allowRemoveColumn: false,
                autoColumnSize: true,
                autoWrapCol: true,
                columnSorting: false,
                //colWidths: 'undefined',
                copyColsLimit: 13,
                currentColClassName: 'currentCol', //currentCol
                fixedColumnsLeft: 0,
                manualColumnMove: false,
                manualColumnResize: true,
                viewportColumnRenderingOffset: 13,
                sortIndicator: true,
                //================================Rows=======
                allowInsertRow: true,
                allowRemoveRow: true,
                autoRowSize: true,
                autoWrapRow: true,
                copyRowsLimit: 1000,
                currentRowClassName: 'currentRow',
                fixedRowsTop: 0,
                manualRowMove: false,
                manualRowResize: true,
                rowHeaders: true,
                minSpareRows: 10,
                //startRows: 10,
                //viewportRowRenderingOffset : 'auto',
                //maxRows: 'Infinity',
                //minRows: 'Infinity',
                //================================Oder=======
                allowInvalid: false,
                stretchH: 'all',
                commentedCellClassName: 'htCommentCell',
                comments: true,
                contextMenu: true,
                copyable: true,
                customBorders: false,
                debug: false,
                disableVisualSelection: true,
                enterBeginsEditingBoolean: true,
                fillHandle: true,
                outsideClickDeselects: true,
                fragmentSelection: false,
                groups: false,
                invalidCellClassName: 'htInvalid',
                mergeCells: false,
                multiSelect: true,
                noWordWrapClassName: 'htNoWrap',
                placeholder: false,
                placeholderCellClassName: 'htPlaceholder',
                readOnlyCellClassName: 'htDimmed',
                search: false,
                trimWhitespace: true,
                undo: true,
                formulas: true,
                wordWrap: true,
                copyPaste: false,
                //====================================Oder ==============================================
                colHeaders:
                    ['Shop',
                        'Mã thiết bị cần tách',
                        'Thiết bị và cấu hình',
                        'Serial/Imei',
                        'Kho xuất',
                        'Số lượng',
                        'Giá bán',
                        'Mã hàng được tách',
                        'Thiết bị và cấu hình',
                        'Serial/Imei',
                        'Kho nhập',
                        'Giá bán',
                        'Lý do'
                    ],
                columns: [
                    { data: 'ShopCode', type: 'autocomplete', width: 350, source: sourceAutocompleteShops, strict: true, className: 'htLeft' },
                    { data: 'Property1', type: 'text', className: 'htLeft', width: 200 },
                    { data: 'Property2', type: 'text', className: 'htLeft', width: 350 },
                    { data: 'Property3', type: 'text', className: 'htLeft', width: 200 },
                    { data: 'Property4', type: 'dropdown', className: 'htLeft', source: sourceKho, width: 150 },
                    { data: 'Quantity', type: 'numeric', className: 'htLeft', width: 150, format: '0,00' },
                    { data: 'Money1', type: 'numeric', className: 'htLeft', width: 150, format: '0,00' },
                    { data: 'Property5', type: 'text', className: 'htLeft', width: 200 },
                    { data: 'Property6', type: 'text', className: 'htLeft', width: 350 },
                    { data: 'Property7', type: 'text', className: 'htLeft', width: 200 },
                    { data: 'Property8', type: 'dropdown', className: 'htLeft', source: sourceKho, width: 150 },
                    { data: 'Money2', type: 'numeric', className: 'htLeft', width: 150, format: '0,00' },
                    { data: 'Property9', type: 'text', className: 'htLeft', width: 500 },
                ],
            };
        };
        hot = new Handsontable(container, setting());
        $btnSend.on('click', function () {

            var columnRequired = ['ShopCode', 'Property1', 'Property2', 'Property3', 'Property4', 'Quantity', 'Money1'
                , 'Property5', 'Property6', 'Property7', 'Property8', 'Money2', 'Property9'];

            var mydata = hot.getData() == undefined ? [] : hot.getData();
            var mydataReturn = [];
            $.each(mydata, function (index, item) {
                var isSave = false;
                $.each(columnRequired, function (index2, item2) {
                    if (item[item2] !== null && item[item2] !== undefined && item[item2] !== '') {
                        isSave = true;
                    }
                });
                if (isSave == true) {
                    mydataReturn.push(item);
                }
            });
            var dataInvalid = []
            $.each(mydataReturn, function (index, item) {
                var check = true;
                $.each(columnRequired, function (index2, item2) {
                    if (item[item2] === null || item[item2] === undefined || item[item2] === '') {
                        check = false;

                    }
                });
                if (check == false) {
                    dataInvalid.push(item);
                }
            });


            if (mydataReturn.length == 0) {
                XFunction.RenderMessage('error', 'Dữ liệu chưa hợp lệ'); return;
            }
            if (dataInvalid.length > 0) {
                XFunction.RenderMessage('error', 'Dữ liệu nhập chưa đầy đủ'); return;
            }
            $.each(mydataReturn, function (index, item) {
                item.ShopCode = item.ShopCode.split("--")[0];
            });
            $('#Details').val(JSON.stringify(mydataReturn));
            $('#DetailsLimited').val(JSON.stringify(''));

            $('#Description').val(catagoryInfo.Description);
            $('#TitleRequest').val($('#Title').val());
            $('#typeId').val(catagoryInfo.Id);

            var form = $("form#form-create");
            form.attr("action", "/Requests/Create");
            form.submit();
            $('#WaitDialog').modal('show');
        });
    }; // Xuất đổi cấu hình máy cũ
    function contruct_35() {     // tuyển dụng   
        $areaChiTiet.show(); $areaDowloadAndImport.hide();
        var dataHandsontable = [];
        contructData = function () {
            dataHandsontable = [
                {
                    ShopCode: null,
                    JobCode1: null,
                    JobCode2: null,
                    Time1: null,
                    Property1: null,
                    Property2: null,
                    Property3: null,
                    Property4: null,
                    Property5: null,
                    Quantity: null,
                    Quantity1: null
                }];

        }; contructData();
        var sourceAutocompleteShops = [''];
        $.get('/Requests/GetShopByRegion', { regionId: 0 }, function (respone) {
            $.each(respone, function (index, item) {
                sourceAutocompleteShops.push(item.WarehouseCode + '--' + item.WarehouseCodeB1 + '--' + item.WarehouseName);
            });

        });
        var sourceAutocompleteJobs = [''];
        $.get('/Requests/GetJobTitleShop', {}, function (respone) {
            $.each(respone, function (index, item) {
                sourceAutocompleteJobs.push(item.JobTitleCode + '--' + item.JobTitleShortName + '--' + item.JobTitleName);
            });
        });
        var sourceMucDichTuyen = []
        sourceMucDichTuyen = ['Thay thế', 'Thêm mới'];
        var setting = function () {
            return {
                //=================================Data=======
                data: dataHandsontable,
                //================================Cols=======
                maxCols: 10,
                minCols: 10,
                startCols: 10,
                minSpareCols: 0,
                allowInsertColumn: false,
                allowRemoveColumn: false,
                autoColumnSize: true,
                autoWrapCol: true,
                columnSorting: false,
                //colWidths: 'undefined',
                copyColsLimit: 10,
                currentColClassName: 'currentCol', //currentCol
                fixedColumnsLeft: 1,
                manualColumnMove: false,
                manualColumnResize: true,
                viewportColumnRenderingOffset: 10,
                sortIndicator: true,
                //================================Rows=======
                allowInsertRow: true,
                allowRemoveRow: true,
                autoRowSize: true,
                autoWrapRow: true,
                copyRowsLimit: 1000,
                currentRowClassName: 'currentRow',
                fixedRowsTop: 0,
                manualRowMove: false,
                manualRowResize: true,
                rowHeaders: true,
                minSpareRows: 10,
                //startRows: 10,
                //viewportRowRenderingOffset : 'auto',
                //maxRows: 'Infinity',
                //minRows: 'Infinity',
                //================================Oder=======
                allowInvalid: false,
                stretchH: 'all',
                commentedCellClassName: 'htCommentCell',
                comments: true,
                contextMenu: true,
                copyable: true,
                customBorders: false,
                debug: false,
                disableVisualSelection: true,
                enterBeginsEditingBoolean: true,
                fillHandle: true,
                outsideClickDeselects: true,
                fragmentSelection: false,
                groups: false,
                invalidCellClassName: 'htInvalid',
                mergeCells: false,
                multiSelect: true,
                noWordWrapClassName: 'htNoWrap',
                placeholder: false,
                placeholderCellClassName: 'htPlaceholder',
                readOnlyCellClassName: 'htDimmed',
                search: false,
                trimWhitespace: true,
                undo: true,
                formulas: true,
                wordWrap: true,
                copyPaste: false,
                //====================================Oder ==============================================
                colHeaders: ['Mục đích tuyển', 'Shop', 'Tên chức danh tuyển', 'Chức danh kiêm nhiệm (nếu có)', 'Nhân viên thay thế', 'Lý do thay thế', 'Tên tỉnh thành', 'Vị trí cửa hàng', 'Ngày mở bán', 'Số lượng cần tuyển', 'Số lượng hiện tại'],
                columns: [
                    { data: 'Property1', type: 'dropdown', source: sourceMucDichTuyen, className: 'htLeft' },
                    { data: 'ShopCode', type: 'autocomplete', width: 350, source: sourceAutocompleteShops, strict: false, allowInvalid: true, className: 'htLeft' },
                    { data: 'JobCode1', type: 'autocomplete', width: 400, source: sourceAutocompleteJobs, strict: false, allowInvalid: true, className: 'htLeft' },
                    { data: 'JobCode2', type: 'autocomplete', width: 400, source: sourceAutocompleteJobs, strict: false, allowInvalid: true, className: 'htLeft' },
                    { data: 'Property2', type: 'autocomplete', width: 250, source: [''], className: 'htLeft', strict: false, allowInvalid: true },
                    { data: 'Property3', type: 'text', width: 150, className: 'htLeft' },
                    { data: 'Property4', type: 'text', className: 'htLeft' },
                    { data: 'Property5', type: 'text', className: 'htLeft' },
                    { data: "Time1", type: 'date', dateFormat: 'DD/MM/YYYY', className: 'htLeft', correctFormat: true, width: 100, allowInvalid: true },
                    { data: 'Quantity', type: 'numeric', format: '0,0', className: 'htRight' },
                    { data: 'Quantity1', type: 'numeric', format: '0,0', className: 'htRight' },
                ],
                afterChange: function (changes, source) {
                    if (!changes || source == 'not') {
                        return;
                    }
                    //▼  Add - LuanNT44 - 13/08/2018 - Loại 35 - Tuyển dụng
                    var instance = this;
                    changes.forEach(function (change) {
                        var row = change[0];
                        var col = change[1];
                        var newValue = change[3];
                        var cellProperties = {}, options;
                        if (col == 'ShopCode') {
                            var search = 0;
                            var type = hot.getDataAtRowProp(row, 'Property1');
                            //alert(type);
                            if (newValue !== null && newValue !== '' && newValue !== undefined) {
                                search = newValue.split('--')[0];
                            }
                            setAutocompleteSourceEmp.call(instance, row, search, type);
                            instance.render();
                        };
                        if (col == 'JobCode1') {
                            var job = 0;
                            if (newValue !== null && newValue !== '' && newValue !== undefined) {
                                job = newValue.split('--')[0];
                            }
                            setAutocompleteSourceJobCout.call(instance, row, job);
                            instance.render();
                        };
                        if (col == 'JobCode2') {
                            var job = 0;
                            if (newValue !== null && newValue !== '' && newValue !== undefined) {
                                job = newValue.split('--')[0];
                            }
                            setAutocompleteSourceJobCout.call(instance, row, job);
                            instance.render();
                        };
                        if (col == 'Property2') {
                            var type = hot.getDataAtRowProp(row, 'Property1');
                            if (type == 'Thay thế') {
                                var acc35 = '';
                                if (newValue !== null && newValue !== '' && newValue !== undefined) {
                                    acc35 = newValue.split('--')[0];
                                }
                                $.get('/Requests/GetEmpShopStatusInfo35', { insidecode: acc35 }, function (respone35) {

                                    if (respone35.length > 0) {
                                        //console.log('respone35-' + respone35[0].Result)
                                        if (respone35[0].Result == 0) {
                                            if (respone35[0].IdCalllog == '' || respone35[0].IdCalllog == null || respone35[0].IdCalllog == undefined) {
                                                XFunction.RenderMessage('error', 'Nhân viên không hợp lệ !');
                                            }
                                            else {
                                                XFunction.RenderMessage('error', 'Nhân viên thay thế không hợp lệ, vui lòng thao tác xử lý calllog ' + respone35[0].IdCalllog + ' chuyển chức danh đang bị bending, rồi thao tác tạo lại !');
                                            }

                                            hot.setDataAtRowProp(row, 'Property2', '');
                                            hot.render();
                                        }
                                    }


                                });
                            }

                        };
                    });
                },
            };
        };
        hot = new Handsontable(container, setting());
        function setAutocompleteSourceEmp(row, value, type) {
            var instance = this;
            $.get('/Requests/GetQuanHuyen', { shopCode: value }, function (respone) {
                if (respone !== '' && respone !== null && respone !== undefined) {
                    var tinhthanh = respone[0].CityName + '--' + respone[0].QuanHuyenName;
                    var diachi = respone[0].Address;
                    var datest = respone[0].DayStart;

                    hot.setDataAtRowProp(row, 'Time1', datest, 'not');
                    hot.setDataAtRowProp(row, 'Property4', tinhthanh, 'not');
                    hot.setDataAtRowProp(row, 'Property5', diachi, 'not');
                } else {
                    hot.setDataAtRowProp(row, 'Time1', '', 'not');
                    hot.setDataAtRowProp(row, 'Property4', '', 'not');
                    hot.setDataAtRowProp(row, 'Property5', '', 'not');
                }
            });
            if (type == 'Thay thế') {
                //alert(1);
                $.get('/Requests/GetEmpShopReplace', { shopCode: value }, function (respone) {
                    var options = [''];
                    $.each(respone, function (index, item) {
                        options.push(item.EmployeeCode + '--' + item.EmployeeName);
                    });
                    var cellProperties = instance.getCellMeta(row, 4);
                    hot.setDataAtRowProp(row, 'Property2', '', 'not');
                    cellProperties.source = options;
                });
            }
            else {
                //alert(2);
                $.get('/Requests/GetEmpShop', { shopCode: value }, function (respone) {
                    var options = [''];
                    $.each(respone, function (index, item) {
                        options.push(item.EmployeeCode + '--' + item.EmployeeName);
                    });
                    var cellProperties = instance.getCellMeta(row, 4);
                    hot.setDataAtRowProp(row, 'Property2', '', 'not');
                    cellProperties.source = options;
                });
            }
            var job = hot.getDataAtRowProp(row, 'JobCode1');
            var shop = value;
            var jobSearch = job === '' || job === null || job === '' ? 0 : job.split('--')[0];
            if (job !== null && job !== '' && job !== undefined && shop !== '' && shop !== null && shop !== undefined) {
                $.get('/Requests/GetCoutJobTitleShop', { shopCode: shop, jobCode: jobSearch }, function (respone) {
                    if (respone.length == 1) {
                        hot.setDataAtRowProp(row, 'Quantity1', respone[0].Total, 'not');
                    } else {
                        hot.setDataAtRowProp(row, 'Quantity1', '', 'not');
                    }
                });
            };
        };
        //▲  Add - LuanNT44 - 13/08/2018 - Loại 35 - Tuyển dụng
        function setAutocompleteSourceJobCout(row, value) {
            var instance = this;
            var job = value;
            var shop = hot.getDataAtRowProp(row, 'ShopCode');
            var shopSearch = shop === '' || shop === null || shop === '' ? 0 : shop.split('--')[0];
            if (job !== null && job !== '' && job !== undefined && shop !== '' && shop !== null && shop !== undefined) {
                $.get('/Requests/GetCoutJobTitleShop', { shopCode: shopSearch, jobCode: job }, function (respone) {
                    if (respone.length == 1) {
                        hot.setDataAtRowProp(row, 'Quantity1', respone[0].Total, 'not');
                    } else {
                        hot.setDataAtRowProp(row, 'Quantity1', '', 'not');
                    }
                });
            } else {
                hot.setDataAtRowProp(row, 'Quantity1', '', 'not');
            }

        };
        $btnSend.on('click', function () {
            var DataRequidThayThe = ['ShopCode', 'JobCode1', 'JobCode2', 'Property3', 'Property4', 'Property5', 'Quantity'];
            var DataRequidThemMoi = ['JobCode1', 'JobCode2', 'Property3', 'Property4', 'Property5', 'Quantity'];

            var mydata = hot.getData() == undefined ? [] : $.grep(hot.getData(), function (item, index) {
                return item.Property1 !== null && item.Property1 !== '' && item.Property1 !== undefined;
            });

            var dataThayThe = [];
            dataThayThe = $.grep(mydata, function (item, index) {
                return item.Property1 == 'Thay thế';
            });
            var dataThemMoi = [];
            dataThemMoi = $.grep(mydata, function (item, index) {
                return item.Property1 == 'Thêm mới';
            });
            var dataInvalidThayThe = [];
            var dataInvalidThemMoi = [];

            $.each(dataThayThe, function (index, item) {
                var valid = true;
                $.each(DataRequidThayThe, function (index2, item2) {
                    if (
                        (item.ShopCode === null || item.JobCode1 === undefined || item.ShopCode === '') ||
                        (item.JobCode1 === null || item.JobCode1 === undefined || item.JobCode1 === '') ||
                        (item.Property3 === null || item.Property3 === undefined || item.Property3 === '') ||
                        (item.Property4 === null || item.Property4 === undefined || item.Property4 === '') ||
                        (item.Property5 === null || item.Property5 === undefined || item.Property5 === '') ||
                        (item.Quantity === null || item.Quantity === undefined || item.Quantity === '')
                    ) {
                        valid = false;
                    }
                });
                if (valid == false) {
                    dataInvalidThayThe.push(item);
                }
            });
            $.each(dataThemMoi, function (index, item) {
                var valid = true;
                $.each(DataRequidThemMoi, function (index2, item2) {
                    if (
                        (item.JobCode1 === null || item.JobCode1 === undefined || item.JobCode1 === '') ||
                        (item.Property3 === null || item.Property3 === undefined || item.Property3 === '') ||
                        (item.Property4 === null || item.Property4 === undefined || item.Property4 === '') ||
                        (item.Property5 === null || item.Property5 === undefined || item.Property5 === '') ||
                        (item.Quantity === null || item.Quantity === undefined || item.Quantity === '')
                    ) {
                        valid = false;
                    }
                });
                if (valid == false) {
                    dataInvalidThemMoi.push(item);
                }
            });

            if (mydata.length == 0) {
                XFunction.RenderMessage('error', 'Dữ liệu chưa hợp lệ');
                return;
            };
            if (dataInvalidThayThe.length > 0) {
                XFunction.RenderMessage('error', 'Dữ liệu nhân viên thay thế chưa đầy đủ');
                return;
            }
            if (dataInvalidThemMoi.length > 0) {
                XFunction.RenderMessage('error', 'Dữ liệu nhân viên thêm mới chưa đầy đủ');
                return;
            }
            $('#Details').val(JSON.stringify(mydata));
            $('#DetailsLimited').val(JSON.stringify(''));

            $('#Description').val(catagoryInfo.Description);
            $('#TitleRequest').val($('#Title').val());
            $('#typeId').val(catagoryInfo.Id);

            var form = $("form#form-create");
            form.attr("action", "/Requests/Create");
            form.submit();
            $('#WaitDialog').modal('show');
        });

    };
    function contruct_112() {     // seri Voucher
        $areaChiTiet.show(); $areaDowloadAndImport.show();
        var dataHandsontable = [];
        contructData = function () {
            dataHandsontable = [
                {
                    ProductCode: null, // ma sp
                    ProductName: null, // ten sp voucher
                    Note: null, //ki hieu
                    Quantity: null, // so luong voucher
                    Quantity1: null, //do dai voucher
                    Money1: null, // menh gia
                    Property1: null, // nhom hang
                    Property2: null, // dh su dung
                    Time1: null, // ngay phat hanh
                    Quantity2: null, // so thang hluc
                    Time2: null, // ngay hluc
                    Time3: null, // ngay kthuc
                    Property3: null, // nganh hang
                    Property4: null, // nhan hang
                    Property5: null, // loai voucher
                    Property6: null, // nganh hang ap dung
                    Property7: null, // loai hang ap dung
                    Property8: null, // nhan ap dung
                    Property9: null, // ma hang ap dung
                    Property10: null, // Model
                }];

        }; contructData();
        var sourceProductsVoucher = ['']; var dataProductsVoucher = [];
        $.get('/Requests/GetAllProducts_Voucher', {}, function (respone) {
            dataProductsVoucher = respone;
            $.each(respone, function (index, item) {
                sourceProductsVoucher.push(item.ItemCode);
            });
        });

        var sourceGroupProducts = ['']; var dataGroupProducts = [];
        $.get('/Requests/GetGroupProducts', {}, function (respone) {
            dataGroupProducts = respone;
            $.each(respone, function (index, item) {
                sourceGroupProducts.push(item.U_PRO_NAME);
            });
        });

        var sourceNganhHang = ['']; var dataNganhHang = [];
        $.get('/Requests/GetNganhHang', {}, function (respone) {
            dataNganhHang = respone;
            $.each(respone, function (index, item) {
                sourceNganhHang.push(item.U_PRO_NAME);
            });
        });

        var sourceNhanHang = ['']; dataNhanHang = [];
        $.get('/Requests/GetNhanHang', {}, function (respone) {
            dataNhanHang = respone;
            $.each(respone, function (index, item) {
                sourceNhanHang.push(item.FirmName);
            });
        });

        var sourceLoaiVoucher = [];
        sourceLoaiVoucher = ['', 'Có giá', 'Không có giá'];

        var sourceLoaiHang = ['']; dataLoaiHang = [];
        $.get('/Requests/GetLoaiHang', {}, function (respone) {
            dataLoaiHang = respone;
            $.each(respone, function (index, item) {
                sourceLoaiHang.push(item.ItmsGrpNam);
            });
        });
        var setting = function () {
            return {
                //=================================Data=======
                data: dataHandsontable,
                //================================Cols=======
                maxCols: 20,
                minCols: 20,
                startCols: 20,
                minSpareCols: 0,
                allowInsertColumn: false,
                allowRemoveColumn: false,
                autoColumnSize: true,
                autoWrapCol: true,
                columnSorting: false,
                //colWidths: 'undefined',
                copyColsLimit: 20,
                currentColClassName: 'currentCol', //currentCol
                fixedColumnsLeft: 1,
                manualColumnMove: false,
                manualColumnResize: true,
                viewportColumnRenderingOffset: 20,
                sortIndicator: true,
                //================================Rows=======
                allowInsertRow: true,
                allowRemoveRow: true,
                autoRowSize: true,
                autoWrapRow: true,
                copyRowsLimit: 1000,
                currentRowClassName: 'currentRow',
                fixedRowsTop: 0,
                manualRowMove: false,
                manualRowResize: true,
                rowHeaders: true,
                minSpareRows: 10,
                //startRows: 10,
                //viewportRowRenderingOffset : 'auto',
                //maxRows: 'Infinity',
                //minRows: 'Infinity',
                //================================Oder=======
                allowInvalid: false,
                stretchH: 'all',
                commentedCellClassName: 'htCommentCell',
                comments: true,
                contextMenu: true,
                copyable: true,
                customBorders: false,
                debug: false,
                disableVisualSelection: true,
                enterBeginsEditingBoolean: true,
                fillHandle: true,
                outsideClickDeselects: true,
                fragmentSelection: false,
                groups: false,
                invalidCellClassName: 'htInvalid',
                mergeCells: false,
                multiSelect: true,
                noWordWrapClassName: 'htNoWrap',
                placeholder: false,
                placeholderCellClassName: 'htPlaceholder',
                readOnlyCellClassName: 'htDimmed',
                search: false,
                trimWhitespace: true,
                undo: true,
                formulas: true,
                wordWrap: true,
                copyPaste: false,
                //====================================Oder ==============================================
                colHeaders: ['Mã SP', 'Tên SP', 'Kí hiệu', 'Số lượng Voucher', 'Độ dài Voucher', 'Mệnh giá', 'Nhóm hàng', 'ĐH sử dụng', 'Ngày phát hành', 'Số tháng hiệu lực', 'Ngày hiệu lực', 'Ngày hết hiệu lực', 'Ngành hàng', 'Nhãn hàng', 'Loại Voucher', 'NH áp dụng', 'Loại hàng áp dụng', 'Nhãn áp dụng', 'Mã hàng áp dụng', 'Model áp dụng'],
                columns: [
                    { data: 'ProductCode', type: 'dropdown', source: sourceProductsVoucher, width: 150, className: 'htLeft' },
                    { data: 'ProductName', type: 'text', width: '350px', className: 'htLeft', readOnly: true },
                    { data: 'Note', type: 'text', className: 'htLeft' },
                    { data: 'Quantity', type: 'numeric', className: 'htLeft', format: '0,0' },
                    { data: 'Quantity1', type: 'numeric', className: 'htLeft', format: '0,0' },
                    { data: 'Money1', type: 'numeric', className: 'htLeft', format: '0,0' },
                    { data: 'Property1', type: 'dropdown', source: sourceGroupProducts, width: '150px', className: 'htLeft' },
                    { data: 'Property2', type: 'text', className: 'htLeft' },
                    { data: 'Time1', type: 'date', allowInvalid: true, className: 'htLeft' },
                    { data: 'Quantity2', type: 'numeric', className: 'htLeft', format: '0,0' },
                    { data: 'Time2', type: 'date', allowInvalid: true, className: 'htLeft' },
                    { data: 'Time3', type: 'date', allowInvalid: true, className: 'htLeft' },
                    { data: 'Property3', type: 'dropdown', source: sourceNganhHang, className: 'htLeft' },
                    { data: 'Property4', type: 'dropdown', source: sourceNhanHang, width: '150px', className: 'htLeft' },
                    { data: 'Property5', type: 'dropdown', source: sourceLoaiVoucher, className: 'htLeft' },
                    { data: 'Property6', type: 'dropdown', source: sourceNganhHang, className: 'htLeft' },
                    { data: 'Property7', type: 'dropdown', source: sourceLoaiHang, width: '150px', className: 'htLeft' },
                    { data: 'Property8', type: 'dropdown', source: sourceNhanHang, width: '150px', className: 'htLeft' },
                    { data: 'Property9', type: 'text', className: 'htLeft' },
                    { data: 'Property10', type: 'text', className: 'htLeft' },
                ],
                afterChange: function (changes, source) {
                    if (!changes || source == 'not') {
                        return;
                    }
                    var instance = this;
                    changes.forEach(function (change) {
                        var row = change[0];
                        var col = change[1];
                        var newValue = change[3];
                        var cellProperties = {}, options;
                        if (col == 'ProductCode') {
                            //var search = 0;
                            //if (newValue !== null && newValue !== '' && newValue !== undefined) {
                            //    search = newValue.split('--')[0];
                            //}
                            //setAutocompleteSourceEmp.call(instance, row, search);
                            var productName = $.grep(dataProductsVoucher, function (item, index) {
                                return item.ItemCode == newValue;
                            });
                            if (productName !== undefined && productName !== '' && productName !== null && productName.length > 0) {
                                hot.setDataAtRowProp(row, 'ProductName', productName[0].ItemName);
                            } else {
                                hot.setDataAtRowProp(row, 'ProductName', '');
                            }
                            instance.render();
                        };
                        if (col == 'Time3') {
                            var ngayhieuluc = instance.getDataAtRowProp(row, 'Time2');
                            var ngayhethieuluc = newValue;
                            if (ngayhieuluc === null || ngayhieuluc === undefined || ngayhieuluc === '') {
                                XFunction.RenderMessage('error', 'Chọn ngày hiệu lực trước khi chọn ngày hết hiệu lực');
                                instance.setDataAtRowProp(row, 'Time3', '', 'not');
                                return false;
                            }
                            if (ngayhethieuluc === null || ngayhethieuluc === undefined || ngayhethieuluc === '') {
                                XFunction.RenderMessage('error', 'Ngay het hieu luc phai la kieu ngay thang');
                                return false;
                            }

                            var arrayNgayhieuluc = ngayhieuluc.split('/');
                            var newNgayhieuluc = new Date(arrayNgayhieuluc[1] + '/' + arrayNgayhieuluc[0] + '/' + arrayNgayhieuluc[2]);

                            var arrayNgayhieuluc = ngayhethieuluc.split('/');
                            var newNgayhethieuluc = new Date(arrayNgayhieuluc[1] + '/' + arrayNgayhieuluc[0] + '/' + arrayNgayhieuluc[2]);

                            if (newNgayhethieuluc < newNgayhieuluc) {
                                XFunction.RenderMessage('error', 'Ngày hết hiệu lực không được nhỏ hơn ngày hiệu lực');
                                instance.setDataAtRowProp(row, 'Time3', '', 'not');
                                return false;
                            }
                            instance.render();
                        };
                    });
                },
            };
        };
        hot = new Handsontable(container, setting());
        function contructExecl112() {
            var X = XLSX;
            function fixdata(data) {
                var o = "", l = 0, w = 10240;
                for (; l < data.byteLength / w; ++l) o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w, l * w + w)));
                o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w)));
                return o;
            }
            function to_json(workbook) {
                var result = {};
                workbook.SheetNames.forEach(function (sheetName) {
                    var roa = X.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);
                    if (roa.length > 0) {
                        result[sheetName] = roa;
                    }
                });
                return result;
            }
            $('#FileSupport').change(function (event) {
                $('#WaitDialog').modal('show');
                var fileValid = false;
                fileValid = Validater.endFile($('#FileSupport').val());
                if (fileValid) {
                    var files = event.target.files;
                    var f = files[0];
                    {
                        var reader = new FileReader();
                        var name = f.name;
                        reader.onload = function (e) {
                            var data = e.target.result;
                            var arr = fixdata(data);
                            wb = X.read(btoa(arr), { type: 'base64' });
                            var wb;
                            var output = to_json(wb);
                            var dataH = [];
                            if (output.Insert !== null && output.Insert !== '' && output.Insert !== undefined) {
                                dataPages = output.Insert;
                                var colname = ['Mã sản phẩm', 'Kí hiệu', 'Số lượng Voucher', 'Độ dài Voucher', 'Mệnh giá', 'Mã nhóm hàng', 'Đơn hàng sử dụng',
                                    'Ngày phát hành', 'Số tháng hiệu lực', 'Ngày hiệu lực', 'Ngày hết hiệu lực', 'Mã ngành hàng', 'Mã nhãn hàng', 'Mã loại Voucher',
                                    'Mã ngành hàng áp dụng', 'Mã loại hàng áp dụng', 'Mã nhãn áp dụng', 'Mã hàng áp dụng', 'Model áp dụng'];
                                var dataInvalid = [];
                                var checkData = true;
                                //=======================================================NO DELETE
                                $.each(dataPages, function (index, item) {
                                    $.each(colname, function (index1, item1) {
                                        if (item[item1] === '' || item[item1] === null || item[item1] === undefined || item[item1].length <= 0) {
                                            checkData = false;
                                        }
                                    });
                                });
                                if (checkData == false) {
                                    XFunction.RenderMessage('error', 'Lỗi Import!!! Phải nhập đầy đủ thông tin trên lưới');
                                    return;
                                }
                                var count;
                                var invalidDataMasp = [];
                                var invalidDataMaNH = [];
                                var invalidDataMaNganhHang = [];
                                var invalidDataMaNganhHangAd = [];
                                var invalidDataMaNhanHang = [];
                                var invalidDataMaNhanHangAd = [];
                                var invalidDataLoaiVou = [];
                                var invalidDataMaLoaiHangAd = [];
                                var stt = 0;
                                var stt2 = 0;
                                var stt3 = 0;
                                var stt4 = 0;
                                var stt5 = 0;
                                var stt6 = 0;
                                var stt7 = 0;
                                var stt8 = 0;
                                var sttArr = [];
                                var sttArr2 = [];
                                var sttArr3 = [];
                                var sttArr4 = [];
                                var sttArr5 = [];
                                var sttArr6 = [];
                                var sttArr7 = [];
                                var sttArr8 = [];
                                $.each(dataPages, function (index, item) {
                                    count = 0;
                                    stt += 1;
                                    stt2 += 1;
                                    stt3 += 1;
                                    stt4 += 1;
                                    stt5 += 1;
                                    stt6 += 1;
                                    stt7 += 1;
                                    stt8 += 1;
                                    $.each(dataProductsVoucher, function (index1, item1) {
                                        if (item['Mã sản phẩm'] == item1.ItemCode)
                                            count += 1
                                    });
                                    if (count !== 1) {
                                        invalidDataMasp.push(item);
                                        sttArr.push(stt);
                                        return true;
                                    }
                                    count = 0;
                                    $.each(dataGroupProducts, function (index1, item1) {
                                        if (item['Mã nhóm hàng'] == item1.DocEntry)
                                            count += 1
                                    });
                                    if (count !== 1) {
                                        invalidDataMaNH.push(item);
                                        sttArr2.push(stt2);
                                        return true;
                                    }
                                    count = 0;
                                    $.each(dataNganhHang, function (index1, item1) {
                                        if (item['Mã ngành hàng'] == item1.U_pro_code)
                                            count += 1
                                    });
                                    if (count !== 1) {
                                        invalidDataMaNganhHang.push(item);
                                        sttArr3.push(stt3);
                                        return true;
                                    }
                                    count = 0;
                                    $.each(dataNganhHang, function (index1, item1) {
                                        if (item['Mã ngành hàng áp dụng'] == item1.U_pro_code)
                                            count += 1
                                    });
                                    if (count !== 1) {
                                        invalidDataMaNganhHangAd.push(item);
                                        sttArr4.push(stt4);
                                        return true;
                                    }
                                    count = 0;
                                    $.each(dataNhanHang, function (index1, item1) {
                                        if (item['Mã nhãn hàng'] == item1.FirmCode)
                                            count += 1
                                    });
                                    if (count !== 1) {
                                        invalidDataMaNhanHang.push(item);
                                        sttArr5.push(stt5);
                                        return true;
                                    }
                                    count = 0;
                                    $.each(dataNhanHang, function (index1, item1) {
                                        if (item['Mã nhãn áp dụng'] == item1.FirmCode)
                                            count += 1
                                    });
                                    if (count !== 1) {
                                        invalidDataMaNhanHangAd.push(item);
                                        sttArr6.push(stt6);
                                        return true;
                                    }
                                    count = 0;
                                    if (item['Mã loại Voucher'] == 'Y' || item['Mã loại Voucher'] == 'N')
                                        count += 1
                                    if (count !== 1) {
                                        invalidDataLoaiVou.push(item);
                                        sttArr7.push(stt7);
                                        return true;
                                    }
                                    count = 0;
                                    $.each(dataLoaiHang, function (index1, item1) {
                                        if (item['Mã loại hàng áp dụng'] == item1.ItmsGrpCod)
                                            count += 1
                                    });
                                    if (count !== 1) {
                                        invalidDataMaLoaiHangAd.push(item);
                                        sttArr8.push(stt8);
                                        return true;
                                    }
                                }); // kiem tra nhap hop le du lieu 
                                if (invalidDataMasp.length > 0) {
                                    XFunction.RenderMessage('error', 'Lỗi Import! Nhập sai mã sản phẩm thứ ' + sttArr);
                                    return;
                                }
                                if (invalidDataMaNH.length > 0) {
                                    XFunction.RenderMessage('error', 'Lỗi Import!!! Nhập sai mã nhóm hàng thứ ' + sttArr2);
                                    return;
                                }
                                if (invalidDataMaNganhHang.length > 0) {
                                    XFunction.RenderMessage('error', 'Lỗi Import!!! Nhập sai mã ngành hàng thứ ' + sttArr3);
                                    return;
                                }
                                if (invalidDataMaNganhHangAd.length > 0) {
                                    XFunction.RenderMessage('error', 'Lỗi Import!!! Nhập sai mã ngành hàng áp dụng thứ ' + sttArr4);
                                    return;
                                }
                                if (invalidDataMaNhanHang.length > 0) {
                                    XFunction.RenderMessage('error', 'Lỗi Import!!! Nhập sai mã nhãn hàng thứ ' + sttArr5);
                                    return;
                                }
                                if (invalidDataMaNhanHangAd.length > 0) {
                                    XFunction.RenderMessage('error', 'Lỗi Import!!! Nhập sai mã nhãn hàng áp dụng thứ ' + sttArr6);
                                    return;
                                }
                                if (invalidDataLoaiVou.length > 0) {
                                    XFunction.RenderMessage('error', 'Lỗi Import!!! Nhập sai mã loại voucher thứ ' + sttArr7);
                                    return;
                                }
                                if (invalidDataMaLoaiHangAd.length > 0) {
                                    XFunction.RenderMessage('error', 'Lỗi Import!!! Nhập sai mã loại hàng áp dụng thứ ' + sttArr8);
                                    return;
                                }
                                var tenSP;
                                var maNhH;
                                var nganhHang;
                                var nhanHang;
                                var loaiVc;
                                var nganhHAd;
                                var loaiHangAd;
                                var nhanHangAd;
                                $.each(dataPages, function (index, item) {
                                    $.each(dataProductsVoucher, function (index1, item1) {
                                        if (item['Mã sản phẩm'] == item1.ItemCode)
                                            tenSP = item1.ItemName;
                                    });
                                    $.each(dataGroupProducts, function (index1, item1) {
                                        if (item['Mã nhóm hàng'] == item1.DocEntry)
                                            maNhH = item1.U_PRO_NAME;
                                    });
                                    $.each(dataNganhHang, function (index1, item1) {
                                        if (item['Mã ngành hàng'] == item1.U_pro_code)
                                            nganhHang = item1.U_PRO_NAME;
                                    });
                                    $.each(dataNhanHang, function (index1, item1) {
                                        if (item['Mã nhãn hàng'] == item1.FirmCode)
                                            nhanHang = item1.FirmName;
                                    });
                                    if (item['Mã loại Voucher'] == 'Y')
                                        loaiVc = 'Có giá';
                                    else
                                        loaiVc = 'Không có giá';
                                    $.each(dataNganhHang, function (index1, item1) {
                                        if (item['Mã ngành hàng áp dụng'] == item1.U_pro_code)
                                            nganhHAd = item1.U_PRO_NAME;
                                    });
                                    $.each(dataLoaiHang, function (index1, item1) {
                                        if (item['Mã loại hàng áp dụng'] == item1.ItmsGrpCod)
                                            loaiHangAd = item1.ItmsGrpNam;
                                    });
                                    $.each(dataNhanHang, function (index1, item1) {
                                        if (item['Mã nhãn áp dụng'] == item1.FirmCode)
                                            nhanHangAd = item1.FirmName;
                                    });
                                    dataH.push(
                                        {
                                            'ProductCode': item['Mã sản phẩm'], // ma sp
                                            'ProductName': tenSP, // ten sp voucher
                                            'Note': item['Kí hiệu'], //ki hieu
                                            'Quantity': item['Số lượng Voucher'], // so luong voucher
                                            'Quantity1': item['Độ dài Voucher'], //do dai voucher
                                            'Money1': item['Mệnh giá'], // menh gia
                                            'Property1': maNhH, // nhom hang
                                            'Property2': item['Đơn hàng sử dụng'], // dh su dung
                                            'Time1': item['Ngày phát hành'], // ngay phat hanh
                                            'Quantity2': item['Số tháng hiệu lực'], // so thang hluc
                                            'Time2': item['Ngày hiệu lực'], // ngay hluc
                                            'Time3': item['Ngày hết hiệu lực'], // ngay kthuc
                                            'Property3': nganhHang, // nganh hang
                                            'Property4': nhanHang, // nhan hang
                                            'Property5': loaiVc, // loai voucher
                                            'Property6': nganhHAd, // nganh hang ap dung
                                            'Property7': loaiHangAd, // loai hang ap dung
                                            'Property8': nhanHangAd, // nhan ap dung
                                            'Property9': item['Mã hàng áp dụng'], // ma hang ap dung
                                            'Property10': item['Model áp dụng'], // Model
                                        });
                                });
                            }
                            hot.loadData(dataH);
                        };
                        reader.readAsArrayBuffer(f);
                    }
                }
                $('#FileSupport').val('');
                $('#WaitDialog').modal('hide');
            });
        }
        contructExecl112();
        $btnSend.on('click', function () {

            var mydata = hot.getData() == undefined ? [] : $.grep(hot.getData(), function (item, index) {
                return item.ProductCode !== null && item.ProductCode !== '' && item.ProductCode !== undefined;
            });
            var array = ['ProductCode', 'ProductName', 'Note', 'Quantity', 'Quantity1', 'Money1', 'Property1', 'Property2', 'Time1',
                'Quantity2', 'Time2', 'Time3', 'Property3', 'Property4', 'Property5', 'Property6', 'Property7', 'Property8', 'Property9', 'Property10']
            var dataInvalid = [];
            $.each(mydata, function (index, item) {
                var checkvalue = true;
                $.each(array, function (index2, item2) {
                    if (item[item2] === null || item[item2] === undefined || item[item2] === '') {
                        checkvalue = false;
                    }
                });
                if (checkvalue == false) {
                    dataInvalid.push(item);
                }
            });

            if (dataInvalid.length > 0) {
                XFunction.RenderMessage('error', 'Chưa nhập đầy đủ dữ liệu');
                return;
            };

            $.each(mydata, function (index, item) {
                $.each(dataGroupProducts, function (index2, item2) {
                    if (item['Property1'] === item2.U_PRO_NAME) {
                        item['Property1'] = item2.DocEntry;
                    }
                });
                $.each(dataNganhHang, function (index2, item2) {
                    if (item['Property3'] === item2.U_PRO_NAME) {
                        item['Property3'] = item2.U_pro_code;
                    }
                    if (item['Property6'] === item2.U_PRO_NAME) {
                        item['Property6'] = item2.U_pro_code;
                    }
                });
                $.each(dataNhanHang, function (index2, item2) {
                    if (item['Property4'] === item2.FirmName) {
                        item['Property4'] = item2.FirmCode;
                    }
                    if (item['Property8'] === item2.FirmName) {
                        item['Property8'] = item2.FirmCode;
                    }
                });
                if (item['Property5'] == 'Có giá')
                    item['Property5'] = 'Y'
                else
                    item['Property5'] = 'N'
                $.each(dataLoaiHang, function (index2, item2) {
                    if (item['Property7'] === item2.ItmsGrpNam) {
                        item['Property7'] = item2.ItmsGrpCod;
                    }
                });
            });
            $('#Details').val(JSON.stringify(mydata));
            $('#DetailsLimited').val(JSON.stringify(''));

            $('#Description').val(catagoryInfo.Description);
            $('#TitleRequest').val($('#Title').val());
            $('#typeId').val(catagoryInfo.Id);

            var form = $("form#form-create");
            form.attr("action", "/Requests/Create");
            form.submit();
            $('#WaitDialog').modal('show');
        });

    };
    function contruct_130() {//====================================================ok
        // $('#catagoriesModal').on('hidden.bs.modal', function () {
        $('.compose-message').hide();
        $('#detail').show();
        $('#sum-total').hide();  // not support dowload file
        $('#handsontableEx').css('overflow', 'hidden');
        $areaDowloadAndImport.show();
        var sourceHinhThuc = ['Xuất từ NCC', 'Xuất từ kho HC'];
        //▼Add - TrungNC3 - 06/10/2017 - Thêm Nhóm SP & Hình thức xuất
        var data_GroupProduct = [], data_GroupProductName = [];
        //▲Add - TrungNC3 - 06/10/2017 - Thêm Nhóm SP & Hình thức xuất

        $.ajax({
            url: "/Requests/GetDevices?type=" + 23,
            type: "get",
            async: false,
            success: function (data) {
                dataProduct_HcCreate = data;
                $.each(data, function (index, item) {
                    arrNameProduct_HcCreate.push(item.ItemName);
                });
                //▼Add - TrungNC3 - 06/10/2017 - Thêm Nhóm SP & Hình thức xuất
                $.ajax({
                    url: "/Requests/GroupProduct_Get",
                    type: "get",
                    async: false,
                    success: function (data) {
                        data_GroupProduct = data;
                        if (data.length > 0) {
                            $.each(data, function (index, item) {
                                data_GroupProductName.push(item.MaNhom + '--' + item.TenNhom);
                            });
                        };
                        //▲Add - TrungNC3 - 06/10/2017 - Thêm Nhóm SP & Hình thức xuất
                        $.ajax({
                            url: "/Requests/GetShopByRegion?regionId=" + 0,
                            type: "get",
                            async: false,
                            success: function (data) {
                                dataDept_HcCreate = data;
                                $.each(data, function (index, item) {
                                    arrNameShopDept.push(item.WarehouseCode + '--' + item.WarehouseCodeB1 + '--' + item.WarehouseName);
                                });

                                $.ajax({
                                    url: "/Requests/GetLimitedValue?type=" + 23,
                                    type: "get",
                                    async: false,
                                    success: function (data) {
                                        dataLimitedHcCreate = data;

                                        $.ajax({
                                            url: "/Requests/GetAllInventoryProductHC",
                                            type: "get",
                                            async: false,
                                            success: function (respon) {
                                                dataInventoryHC = respon;
                                                var setting = function () {
                                                    return {
                                                        //=================================Data=======
                                                        data: dataHcCreateHandsontable,
                                                        //================================Cols=======
                                                        //maxCols: 9,
                                                        //minCols: 9,
                                                        //startCols: 9,
                                                        //minSpareCols: 0,
                                                        allowInsertColumn: false,
                                                        allowRemoveColumn: false,
                                                        autoColumnSize: true,
                                                        autoWrapCol: true,
                                                        columnSorting: false,
                                                        colWidths: 'undefined',
                                                        // copyColsLimit: 9,
                                                        currentColClassName: 'currentCol', //currentCol
                                                        fixedColumnsLeft: 0,
                                                        manualColumnMove: false,
                                                        manualColumnResize: true,
                                                        //viewportColumnRenderingOffset: 9,
                                                        sortIndicator: true,
                                                        //================================Rows=======
                                                        allowInsertRow: true,
                                                        allowRemoveRow: true,
                                                        autoRowSize: true,
                                                        autoWrapRow: true,
                                                        copyRowsLimit: 1000,
                                                        currentRowClassName: 'currentRow',
                                                        fixedRowsTop: 0,
                                                        manualRowMove: false,
                                                        manualRowResize: true,
                                                        rowHeaders: true,
                                                        minSpareRows: 10,
                                                        startRows: 10,
                                                        //viewportRowRenderingOffset : 'auto',
                                                        //maxRows: dataMkoMkoHandsontable+1,
                                                        //minRows: dataMkoMkoHandsontable+1,
                                                        //================================Oder=======
                                                        allowInvalid: false,
                                                        stretchH: 'all',
                                                        commentedCellClassName: 'htCommentCell',
                                                        comments: true,
                                                        contextMenu: true,
                                                        copyable: true,
                                                        customBorders: false,
                                                        debug: false,
                                                        disableVisualSelection: true,
                                                        enterBeginsEditingBoolean: true,
                                                        fillHandle: true,
                                                        outsideClickDeselects: true,
                                                        fragmentSelection: false,
                                                        groups: false,
                                                        invalidCellClassName: 'htInvalid',
                                                        mergeCells: false,
                                                        multiSelect: true,
                                                        noWordWrapClassName: 'htNoWrap',
                                                        placeholder: false,
                                                        placeholderCellClassName: 'htPlaceholder',
                                                        readOnlyCellClassName: 'htDimmed',
                                                        search: false,
                                                        trimWhitespace: true,
                                                        undo: true,
                                                        formulas: true,
                                                        wordWrap: true,
                                                        //====================================Oder ==============================================
                                                        //▼Add - TrungNC3 - 06/10/2017 - Thêm Nhóm SP & Hình thức xuất
                                                        colHeaders: ["Shop", "Nhóm sản phẩm", "Tên mặt hàng", "Hình thức xuất", "Nhóm hàng", "Số lượng tồn kho", "Số lượng", "Đơn giá", "Thành tiền", "Đ.V tính", "Ghi chú"],
                                                        //▲Add - TrungNC3 - 06/10/2017 - Thêm Nhóm SP & Hình thức xuất
                                                        columns: [
                                                            { data: "ShopCode", type: 'autocomplete', source: arrNameShopDept, strict: false, className: 'htLeft', width: 300 },
                                                            { data: "GroupProduct", type: 'autocomplete', source: data_GroupProductName, strict: false, className: 'htLeft', width: 300 },
                                                            //▲Add - TrungNC3 - 06/10/2017 - Thêm Nhóm SP & Hình thức xuất
                                                            { data: "ItemName", type: 'autocomplete', source: arrNameProduct_HcCreate, strict: false, className: 'htLeft', width: 300 },
                                                            { data: "HinhThucXuat", className: 'htLeft', type: 'autocomplete', source: sourceHinhThuc, width: 200 },
                                                            { data: "GroupName", readOnly: true, className: 'htLeft' },
                                                            { data: "InventoryNumber", readOnly: true, className: 'htLeft', type: 'numeric', format: '0,0' },
                                                            { data: "Quantity", type: 'numeric', format: '0,0', validator: Validater.quantity, allowInvalid: false, },
                                                            {
                                                                data: "Price", type: 'numeric', format: '0,0', readOnly: true,
                                                                renderer: function (instance, td, row, col, prop, value) {
                                                                    //▼Add - TrungNC3 - 06/10/2017 - Thêm Nhóm SP & Hình thức xuất
                                                                    if (col === 7 && row === dataHcCreateHandsontable.length - 1) {
                                                                        //▲Add - TrungNC3 - 06/10/2017 - Thêm Nhóm SP & Hình thức xuất
                                                                        td.style.fontWeight = 'bold';
                                                                        td.style.textAlign = 'right';
                                                                        td.style.color = 'green';
                                                                        value = 'Tổng tiền:';
                                                                    }
                                                                    Handsontable.NumericRenderer.apply(this, arguments);
                                                                }, width: 90,
                                                            },
                                                            {
                                                                data: "Sum", type: 'text', format: '0,0', readOnly: true,
                                                                renderer: function (instance, td, row, col, prop, value) {
                                                                    //▼Add - TrungNC3 - 06/10/2017 - Thêm Nhóm SP & Hình thức xuất
                                                                    if (col === 8 && row === dataHcCreateHandsontable.length - 1) {
                                                                        //▲Add - TrungNC3 - 06/10/2017 - Thêm Nhóm SP & Hình thức xuất
                                                                        td.style.fontWeight = 'bold';
                                                                        td.style.color = 'green';
                                                                        sum = 0;
                                                                        $.each(dataHcCreateHandsontable, function (index, item) {
                                                                            if (item.Sum !== "" && item.Sum !== undefined && item.Sum !== null && !isNaN(item.Sum)) {
                                                                                sum += parseInt(item.Sum);
                                                                            } else {
                                                                                sum += 0;
                                                                            }
                                                                        });
                                                                        value = sum;
                                                                    }
                                                                    Handsontable.NumericRenderer.apply(this, arguments);
                                                                }
                                                            },
                                                            { data: "Unit", className: 'htLeft', readOnly: true },
                                                            { data: "Note", className: 'htLeft' }
                                                        ],
                                                        afterRemoveRow: function (index, amount) {  //==== Chưa biết công dụng là làm cái gì
                                                            hot.updateSettings({
                                                                cells: function (row, col, prop) {
                                                                    var cellProperties = {};
                                                                    if (row === dataHcCreateHandsontable.length - 1) {
                                                                        cellProperties.readOnly = false;
                                                                    }
                                                                    return cellProperties;
                                                                }
                                                            });
                                                        },
                                                        cells: function (row, col, prop) {  //==== Sử dụng cho việc Import dữ liệu vào
                                                            var cellProperties = {};

                                                            if (row === dataHcCreateHandsontable.length - 1) {
                                                                cellProperties.readOnly = false;
                                                            }

                                                            return cellProperties;

                                                        },
                                                        beforeChange: function (change, source) {
                                                            if (source === 'not') return;
                                                            for (i = 0, len = change.length; i < len; i++) {
                                                                var row = change[i][0], col = change[i][1];
                                                                var newValue = change[3];
                                                                if (col === 'ShopCode') {
                                                                    var Shop = change[i][3];

                                                                    var rows = hot.getDataAtRow(row);

                                                                    var ShopOl = hot.getDataAtRowProp(row, 'ShopCode');
                                                                    var Item = hot.getDataAtRowProp(row, 'ItemName');
                                                                    var colls = $.grep(hot.getData(), function (item, index) {
                                                                        return item.ItemName !== null && item.ItemName !== undefined
                                                                            && item.ItemName !== '' && item.ItemName == Item;
                                                                    });
                                                                    if (colls.length > 1) {
                                                                        hot.setDataAtRowProp(row, 'ShopCode', ShopOl, 'not');
                                                                        //▼Add - TrungNC3 - 06/10/2017 - Thêm Nhóm SP & Hình thức xuất
                                                                        hot.setDataAtRowProp(row, 'GroupProduct', '', 'not');
                                                                        //▲Add - TrungNC3 - 06/10/2017 - Thêm Nhóm SP & Hình thức xuất
                                                                        hot.setDataAtRowProp(row, 'ItemName', '', 'not');
                                                                        hot.setDataAtRowProp(row, 'HinhThucXuat', '', 'not');
                                                                        hot.setDataAtRowProp(row, 'GroupName', '', 'not');
                                                                        hot.setDataAtRowProp(row, 'InventoryNumber', '', 'not');
                                                                        hot.setDataAtRowProp(row, 'Quantity', '', 'not');
                                                                        hot.setDataAtRowProp(row, 'Price', '', 'not');
                                                                        hot.setDataAtRowProp(row, 'Sum', '', 'not');
                                                                        hot.setDataAtRowProp(row, 'Unit', '', 'not');
                                                                        hot.setDataAtRowProp(row, 'Note', '', 'not');
                                                                        return false;
                                                                    }

                                                                    if (Shop !== undefined && Shop !== "" && Shop !== null) {
                                                                        var timShop = $.grep(dataDept_HcCreate, function (item, index) { return (item.WarehouseCode + '--' + item.WarehouseCodeB1 + '--' + item.WarehouseName) === Shop; });

                                                                        if (timShop !== undefined && timShop !== null && timShop !== "" && timShop.length > 0) {

                                                                            hot.updateSettings({
                                                                                cells: function (row, col, prop) {
                                                                                    var cellProperties = {};

                                                                                    if (row === dataHcCreateHandsontable.length - 1) {
                                                                                        cellProperties.readOnly = false;
                                                                                    }

                                                                                    return cellProperties;

                                                                                }
                                                                            });

                                                                            return true;
                                                                        } else {
                                                                            return false;
                                                                        }
                                                                    }
                                                                    else {
                                                                        hot.setDataAtRowProp(row, 'ItemName', '', 'not');
                                                                        //▼Add - TrungNC3 - 06/10/2017 - Thêm Nhóm SP & Hình thức xuất
                                                                        hot.setDataAtRowProp(row, 'GroupProduct', '', 'not');
                                                                        //▲Add - TrungNC3 - 06/10/2017 - Thêm Nhóm SP & Hình thức xuất
                                                                        hot.setDataAtRowProp(row, 'HinhThucXuat', '', 'not');
                                                                        hot.setDataAtRowProp(row, 'GroupName', '', 'not');
                                                                        hot.setDataAtRowProp(row, 'InventoryNumber', '', 'not');
                                                                        hot.setDataAtRowProp(row, 'Quantity', '', 'not');
                                                                        hot.setDataAtRowProp(row, 'Price', '', 'not');
                                                                        hot.setDataAtRowProp(row, 'Sum', '', 'not');
                                                                        hot.setDataAtRowProp(row, 'Unit', '', 'not');
                                                                        hot.setDataAtRowProp(row, 'Note', '', 'not');
                                                                    }
                                                                }
                                                                if (col === 'ItemName') {
                                                                    var Item = change[i][3];
                                                                    if (Item !== undefined && Item !== "" && Item !== null) {
                                                                        var timItem = $.grep(dataProduct_HcCreate, function (item, index) { return item.ItemName === Item; });

                                                                        if (timItem !== undefined && timItem !== null && timItem !== "" && timItem.length > 0) {

                                                                            hot.updateSettings({
                                                                                cells: function (row, col, prop) {
                                                                                    var cellProperties = {};

                                                                                    if (row === dataHcCreateHandsontable.length - 1) {
                                                                                        cellProperties.readOnly = false;
                                                                                    }

                                                                                    return cellProperties;

                                                                                }
                                                                            });

                                                                            return true;
                                                                        } else {
                                                                            return false;
                                                                        }
                                                                    }
                                                                    else {
                                                                        hot.setDataAtRowProp(row, 'ItemName', '', 'not');
                                                                        //▼Add - TrungNC3 - 06/10/2017 - Thêm Nhóm SP & Hình thức xuất
                                                                        hot.setDataAtRowProp(row, 'GroupProduct', '', 'not');
                                                                        //▲Add - TrungNC3 - 06/10/2017 - Thêm Nhóm SP & Hình thức xuất
                                                                        hot.setDataAtRowProp(row, 'HinhThucXuat', '', 'not');
                                                                        hot.setDataAtRowProp(row, 'GroupName', '', 'not');
                                                                        hot.setDataAtRowProp(row, 'InventoryNumber', '', 'not');
                                                                        hot.setDataAtRowProp(row, 'Quantity', '', 'not');
                                                                        hot.setDataAtRowProp(row, 'Price', '', 'not');
                                                                        hot.setDataAtRowProp(row, 'Sum', '', 'not');
                                                                        hot.setDataAtRowProp(row, 'Unit', '', 'not');
                                                                        hot.setDataAtRowProp(row, 'Note', '', 'not');
                                                                    }
                                                                }
                                                                //▼Add - TrungNC3 - 06/10/2017 - Thêm Nhóm SP & Hình thức xuất
                                                                if (col === 'Quantity') {
                                                                    var thietbi = hot.getDataAtCell(row, 2);
                                                                    if (thietbi !== "" && thietbi !== undefined && thietbi !== null) {
                                                                        var a = change[i][3], b = hot.getDataAtCell(row, 7);
                                                                        if (a === "" || a === undefined || isNaN(a) || a === null) {
                                                                            a = 0;
                                                                            hot.setDataAtCell(row, 6, 0, 'not');
                                                                        }
                                                                        if (b === "" || b === undefined || isNaN(b) || b === null) {
                                                                            b = 0;
                                                                            hot.setDataAtCell(row, 7, 0, 'not');
                                                                        }
                                                                        var rs = Math.ceil(a * b);
                                                                        if (!isNaN(rs) && rs !== undefined && rs !== null && rs !== "")
                                                                            hot.setDataAtCell(row, 8, rs, 'not');
                                                                        else
                                                                            hot.setDataAtCell(row, 8, 0, 'not');
                                                                        return true;
                                                                    } else {
                                                                        return false;
                                                                    }
                                                                }
                                                                if (col === 'ghichu') {
                                                                    var thietbi = hot.getDataAtCell(row, 2);
                                                                    if (thietbi !== "" && thietbi !== undefined && thietbi !== null) {
                                                                        return true;
                                                                    } else {
                                                                        hot.selectCell(row, 0, row, 0);
                                                                        return false;
                                                                    }
                                                                }
                                                                if (col === 'HinhThucXuat') {
                                                                    var thietbi = hot.getDataAtCell(row, 2);
                                                                    if (thietbi !== "" && thietbi !== undefined && thietbi !== null) {
                                                                        return true;
                                                                    } else {
                                                                        hot.selectCell(row, 0, row, 0);
                                                                        return false;
                                                                    }
                                                                }
                                                                //▲Add - TrungNC3 - 06/10/2017 - Thêm Nhóm SP & Hình thức xuất
                                                            }
                                                        },
                                                        afterChange: function (changes, source) {
                                                            if (!changes) {
                                                                return;
                                                            }
                                                            var instance = this;
                                                            changes.forEach(function (change) {
                                                                var row = change[0];
                                                                var col = change[1];
                                                                var newValue = change[3];
                                                                var cellProperties, options;
                                                                //▼Add - TrungNC3 - 06/10/2017 - Thêm Nhóm SP & Hình thức xuất
                                                                if (col == "GroupProduct") {
                                                                    if (newValue != '' && newValue != null && newValue != undefined) {
                                                                        var ItemArr = $.grep(dataProduct_HcCreate, function (item, index) {
                                                                            return (item.MaNhomSP + '--' + item.TenNhomSP) == newValue;
                                                                        });
                                                                        if (ItemArr.length > 0) {
                                                                            var ItemArrName = [];
                                                                            $.each(ItemArr, function (index, item) {
                                                                                ItemArrName.push(item.ItemName);
                                                                            });
                                                                            if (ItemArrName.length > 0) {
                                                                                cellProperties = instance.getCellMeta(row, 2);
                                                                                cellProperties.source = ItemArrName;
                                                                            }
                                                                            else {
                                                                                cellProperties = instance.getCellMeta(row, 2);
                                                                                cellProperties.source = [];
                                                                                instance.setDataAtRowProp(row, 'ItemName', '', 'not');
                                                                                instance.setDataAtRowProp(row, 'GroupName', '', 'not');
                                                                                instance.setDataAtRowProp(row, 'soluongtonkho', '', 'not');
                                                                                instance.setDataAtRowProp(row, 'soluongdat', '', 'not');
                                                                                instance.setDataAtRowProp(row, 'Price', '', 'not');
                                                                                instance.setDataAtRowProp(row, 'Unit', '', 'not');
                                                                            }
                                                                        }
                                                                        else {
                                                                            cellProperties = instance.getCellMeta(row, 2);
                                                                            cellProperties.source = [];
                                                                            instance.setDataAtRowProp(row, 'ItemName', '', 'not');
                                                                            instance.setDataAtRowProp(row, 'GroupName', '', 'not');
                                                                            instance.setDataAtRowProp(row, 'soluongtonkho', '', 'not');
                                                                            instance.setDataAtRowProp(row, 'soluongdat', '', 'not');
                                                                            instance.setDataAtRowProp(row, 'Price', '', 'not');
                                                                            instance.setDataAtRowProp(row, 'Unit', '', 'not');
                                                                        };
                                                                    };
                                                                };//Done
                                                                //▲Add - TrungNC3 - 06/10/2017 - Thêm Nhóm SP & Hình thức xuất
                                                                if (col == 'ItemName' && newValue !== undefined && newValue !== null && newValue !== '') {
                                                                    var shop = hot.getDataAtRowProp(row, 'ShopCode'); //== Lấy dữ liệu từ cột 'ShopCode' có dòng bằng row
                                                                    if (shop === '' || shop === undefined || shop === null) {
                                                                        XFunction.RenderMessage('error', 'Chọn shop trước khi chọn sản phẩm!');
                                                                        hot.setDataAtRowProp(row, 'ItemName', '', 'not');
                                                                        return false;
                                                                    }
                                                                    var rows = hot.getDataAtRow(row);
                                                                    var colls = $.grep(hot.getData(), function (item, index) {
                                                                        return item.ShopCode !== null && item.ShopCode !== undefined
                                                                            && item.ShopCode !== '' && item.ShopCode == shop && item.ItemName == newValue;
                                                                    });
                                                                    if (colls.length > 1) {
                                                                        XFunction.RenderMessage('error', 'Mặt hàng [' + newValue + '] shop [' + shop + '] đã đặt trên lưới trước đó. Vui lòng chọn mặt hàng khác!');
                                                                        //▼Add - TrungNC3 - 06/10/2017 - Thêm Nhóm SP & Hình thức xuất
                                                                        hot.setDataAtRowProp(row, 'GroupProduct', '', 'not');
                                                                        //▲Add - TrungNC3 - 06/10/2017 - Thêm Nhóm SP & Hình thức xuất
                                                                        hot.setDataAtRowProp(row, 'ItemName', '', 'not');
                                                                        hot.setDataAtRowProp(row, 'HinhThucXuat', '', 'not');
                                                                        hot.setDataAtRowProp(row, 'GroupName', '', 'not');
                                                                        hot.setDataAtRowProp(row, 'InventoryNumber', '', 'not');
                                                                        hot.setDataAtRowProp(row, 'Quantity', '', 'not');
                                                                        hot.setDataAtRowProp(row, 'Price', '', 'not');
                                                                        hot.setDataAtRowProp(row, 'Sum', '', 'not');
                                                                        hot.setDataAtRowProp(row, 'Unit', '', 'not');
                                                                        hot.setDataAtRowProp(row, 'Note', '', 'not');
                                                                        return false;
                                                                    }
                                                                    else {
                                                                        if (newValue !== undefined && newValue !== "" && newValue !== null) {
                                                                            var timthietbi = $.grep(dataProduct_HcCreate, function (item, index) { return item.ItemName === newValue; });

                                                                            var Wa = $.grep(dataDept_HcCreate, function (value, number) {
                                                                                return (value.WarehouseCode + '--' + value.WarehouseCodeB1 + '--' + value.WarehouseName) == shop;
                                                                            });
                                                                            var MaShop = [];
                                                                            if (Wa.length > 0) {
                                                                                MaShop = Wa[0].WarehouseCodeB1;
                                                                            }

                                                                            if (timthietbi !== undefined && timthietbi !== null && timthietbi !== "" && timthietbi.length > 0) {

                                                                                var Soluongtonkho = $.grep(dataInventoryHC, function (value, number) {
                                                                                    return value.ShopCode == MaShop && value.MaSP == timthietbi[0].ItemCode;
                                                                                });
                                                                                //▼Add - TrungNC3 - 06/10/2017 - Thêm Nhóm SP & Hình thức xuất
                                                                                if (Soluongtonkho.length > 0) {
                                                                                    hot.setDataAtCell(row, 5, Soluongtonkho[0].SL, 'not');
                                                                                }
                                                                                else {
                                                                                    hot.setDataAtCell(row, 5, 0, 'not');
                                                                                }
                                                                                hot.setDataAtCell(row, 3, timthietbi[0].Limited, 'not');
                                                                                hot.setDataAtCell(row, 4, timthietbi[0].GroupName, 'not');
                                                                                hot.setDataAtCell(row, 6, 0, 'not');

                                                                                hot.setDataAtCell(row, 7, timthietbi[0].Price, 'not');
                                                                                hot.setDataAtCell(row, 8, 0, 'not'),
                                                                                    hot.setDataAtCell(row, 9, timthietbi[0].Unit, 'not'),
                                                                                    hot.setDataAtCell(row, 10, "", 'not');
                                                                                //▲Add - TrungNC3 - 06/10/2017 - Thêm Nhóm SP & Hình thức xuất
                                                                                hot.selectCell(row, 6, row, 6);

                                                                                hot.updateSettings({
                                                                                    cells: function (row, col, prop) {
                                                                                        var cellProperties = {};

                                                                                        if (row === dataMkoMkoHandsontable.length - 1) {
                                                                                            cellProperties.readOnly = false;
                                                                                        }

                                                                                        return cellProperties;

                                                                                    }
                                                                                });
                                                                                //▼Add - TrungNC3 - 06/10/2017 - Thêm Nhóm SP & Hình thức xuất
                                                                                //Chọn mã sp ra mã nhóm
                                                                                var group_Item = hot.getDataAtRowProp(row, 'GroupProduct');
                                                                                var dataNhomSanPham = $.grep(data_GroupProduct, function (item, index) {
                                                                                    return timthietbi[0].MaNhomSP == item.MaNhom;
                                                                                });
                                                                                if (dataNhomSanPham.length > 0 && (group_Item === null || group_Item === '' || group_Item === undefined)) {

                                                                                    hot.setDataAtRowProp(row, 'GroupProduct', (dataNhomSanPham[0].MaNhom + '--' + dataNhomSanPham[0].TenNhom), 'not');
                                                                                }
                                                                                else {
                                                                                    hot.setDataAtRowProp(row, 'GroupProduct', group_Item, 'not');
                                                                                };
                                                                                //▲Add - TrungNC3 - 06/10/2017 - Thêm Nhóm SP & Hình thức xuất

                                                                                return true;
                                                                            } else {
                                                                                return false;
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            });
                                                        },

                                                    };
                                                };
                                                hot = new Handsontable(container, setting());
                                                function contructExecl130() {
                                                    var X = XLSX;
                                                    function fixdata(data) {
                                                        var o = "", l = 0, w = 10240;
                                                        for (; l < data.byteLength / w; ++l) o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w, l * w + w)));
                                                        o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w)));
                                                        return o;
                                                    }
                                                    function to_json(workbook) {
                                                        var result = {};
                                                        workbook.SheetNames.forEach(function (sheetName) {
                                                            var roa = X.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);
                                                            if (roa.length > 0) {
                                                                result[sheetName] = roa;
                                                            }
                                                        });
                                                        return result;
                                                    }
                                                    $('#FileSupport').change(function (event) {
                                                        //$('#WaitDialog').modal('show');
                                                        var fileValid = false;
                                                        fileValid = Validater.endFile($('#FileSupport').val());
                                                        if (fileValid) {
                                                            var files = event.target.files;
                                                            var f = files[0];
                                                            {
                                                                var reader = new FileReader();
                                                                var name = f.name;
                                                                reader.onload = function (e) {
                                                                    var data = e.target.result;
                                                                    var arr = fixdata(data);
                                                                    wb = X.read(btoa(arr), { type: 'base64' });
                                                                    var wb;
                                                                    var output = to_json(wb);
                                                                    var dataH = [];
                                                                    if (output.Sheet1 !== null && output.Sheet1 !== '' && output.Sheet1 !== undefined) {
                                                                        var dataHcCreate = [];
                                                                        // tao du lieu day du
                                                                        $.each(output.Sheet1, function (index, item) {
                                                                            dataHcCreate.push({
                                                                                'ShopCode': item["Shop"],
                                                                                'ItemID': item["Mã mặt hàng"],
                                                                                'Quantity': $.isNumeric(item['Số lượng']) == true ? Math.ceil(item['Số lượng']) : item['Số lượng'],
                                                                                'Note': item['Ghi chú'],
                                                                            });
                                                                        });
                                                                        //kiem tra nhap day du thong tin
                                                                        var colnameRe = ["ShopCode", "ItemID", "Quantity"];
                                                                        var dataInvalidRe = [];
                                                                        var dataInvalidShopCode = [];
                                                                        var dataShopAndItemInvalid = [];
                                                                        var dataProductInvalid = [];
                                                                        var dataProductNameInvalid = [];
                                                                        var dataQuantityInvalid = [];
                                                                        $.each(dataHcCreate, function (index, item) {
                                                                            // kiem tra day du du lieu
                                                                            var check = true;
                                                                            $.each(colnameRe, function (count, element) {
                                                                                if (item[element] === null || item[element] === '' || item[element] === undefined) {
                                                                                    check = false;
                                                                                }
                                                                            });
                                                                            if (check == false) {
                                                                                dataInvalidRe.push((index + 2));
                                                                                //XFunction.RenderMessage('error', 'Lỗi Import!!! Phải nhập đầy đủ thông tin trên lưới');
                                                                                return false;
                                                                            }
                                                                            // kiem tra sai shop
                                                                            var dataShop = $.grep(dataDept_HcCreate, function (itemShop, indexShop) {
                                                                                return itemShop.WarehouseCodeB1 === item.ShopCode;
                                                                            });
                                                                            if (dataShop.length == 0) {
                                                                                dataInvalidShopCode.push((index + 2))
                                                                            }
                                                                            // kiem tra sai ma mat hang
                                                                            var dataProduct = $.grep(dataProduct_HcCreate, function (itemProduct, indexProduct) {
                                                                                return itemProduct.ItemId == item.ItemID;
                                                                            });
                                                                            if (dataProduct.length == 0) {
                                                                                dataProductInvalid.push((index + 2))
                                                                            }
                                                                            // kiem tra số lượng 
                                                                            if ($.isNumeric(item.Quantity) === false || item.Quantity <= 0) {
                                                                                dataQuantityInvalid.push((index + 2));
                                                                            }
                                                                            //kiem tra trung shop va san pham
                                                                            var dataShopItem = $.grep(dataHcCreate, function (itemShop, indexShop) {
                                                                                return itemShop.ShopCode == item.ShopCode && itemShop.ItemID == item.ItemID;
                                                                            });
                                                                            if (dataShopItem.length > 1) {
                                                                                dataShopAndItemInvalid.push((index + 2));
                                                                            }
                                                                        });
                                                                        // bao loi ra man hinh tao
                                                                        if (dataInvalidRe.length > 0) {
                                                                            XFunction.RenderMessage('error', 'Lỗi Import!!! Dữ liệu nhập chưa đầy đủ! Vui lòng xem lại dòng ' + dataInvalidRe.join(',') + ' !'); return false;
                                                                        }
                                                                        if (dataInvalidShopCode.length > 0) {
                                                                            XFunction.RenderMessage('error', 'Lỗi Import!!! Mã shop B1 không tồn tại! Vui lòng xem lại dòng ' + dataInvalidShopCode.join(',') + ' !'); return false;
                                                                        }
                                                                        if (dataProductInvalid.length > 0) {
                                                                            XFunction.RenderMessage('error', 'Lỗi Import!!! Mặt hàng không tồn tại! Vui lòng xem lại dòng ' + dataProductInvalid.join(',') + ' !'); return false;
                                                                        }
                                                                        if (dataQuantityInvalid.length > 0) {
                                                                            XFunction.RenderMessage('error', 'Lỗi Import!!! Số lượng phải là kiểu số và lớn hơn 0! Vui lòng xem lại dòng ' + dataQuantityInvalid.join(',') + ' !'); return false;
                                                                        }
                                                                        if (dataShopAndItemInvalid.length > 0) {
                                                                            XFunction.RenderMessage('error', 'Lỗi Import!!! Tồn tại shop trùng mặt hàng! Vui lòng xem lại dòng ' + dataShopAndItemInvalid.join(',') + ' !'); return false;
                                                                        }

                                                                        //gan du lieu cho luoi
                                                                        $.each(dataHcCreate, function (index, item) {
                                                                            var shopInfo = $.grep(dataDept_HcCreate, function (itemShopInfo, indexShopInfo) {
                                                                                return itemShopInfo.WarehouseCodeB1 == item.ShopCode;
                                                                            });
                                                                            var productInfo = $.grep(dataProduct_HcCreate, function (itemPropInfo, indexProInfo) {
                                                                                return itemPropInfo.ItemId == item.ItemID;
                                                                            });

                                                                            var SL = 0;
                                                                            var Soluongtonkho = $.grep(dataInventoryHC, function (value, number) {
                                                                                return value.ShopCode == shopInfo[0].WarehouseCodeB1 && value.MaSP == productInfo[0].ItemCode;
                                                                            });
                                                                            if (Soluongtonkho.length > 0) {
                                                                                SL = Soluongtonkho[0].SL;
                                                                            }
                                                                            else {
                                                                                SL = 0;
                                                                            }
                                                                            if (shopInfo.length == 0) {
                                                                                return false;
                                                                            }
                                                                            if (productInfo.length == 0) {
                                                                                return false;
                                                                            }
                                                                            else {
                                                                                //Add - TrungNC3 - 20/10/2017 - Thêm hạn mức trả về khi gọi - Cập nhật mã nhóm sản phẩm
                                                                                var NhomSanPham = '';
                                                                                if (productInfo[0].MaNhomSP !== null && productInfo[0].MaNhomSP !== '' && productInfo[0].MaNhomSP !== undefined) {
                                                                                    NhomSanPham = productInfo[0].MaNhomSP + '--' + productInfo[0].TenNhomSP
                                                                                };
                                                                                //Add - TrungNC3 - 20/10/2017 - Thêm hạn mức trả về khi gọi - Cập nhật mã nhóm sản phẩm                                                     
                                                                                dataH.push(
                                                                                    {
                                                                                        'ShopIdIns': item.ShopCode,
                                                                                        'ShopCode': shopInfo[0].WarehouseCode + '--' + shopInfo[0].WarehouseCodeB1 + '--' + shopInfo[0].WarehouseName,
                                                                                        'GroupProduct': NhomSanPham,//▼ Edit - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                                                                                        'ItemId': item.ItemID,
                                                                                        'HinhThucXuat': productInfo[0].Limited,
                                                                                        'ItemName': productInfo[0].ItemName,
                                                                                        'GroupId': productInfo[0].GroupId,
                                                                                        'InventoryNumber': SL,
                                                                                        'GroupName': productInfo[0].GroupName,
                                                                                        'Quantity': item.Quantity,
                                                                                        'Price': productInfo[0].Price,
                                                                                        'Sum': item.Quantity * productInfo[0].Price,
                                                                                        'Unit': productInfo[0].Unit,
                                                                                        'Note': item.Note,
                                                                                    });
                                                                            }
                                                                        });
                                                                    };
                                                                    dataHcCreateHandsontable = [];
                                                                    dataHcCreateHandsontable = dataH;
                                                                    hot.loadData(dataHcCreateHandsontable);
                                                                    hot.render();
                                                                };
                                                                reader.readAsArrayBuffer(f);
                                                            }
                                                        }
                                                        $('#FileSupport').val('');
                                                        //$('#WaitDialog').modal('hide');
                                                    });
                                                }
                                                contructExecl130();
                                                hot.selectCell(0, 0, 0, 0);
                                                $btnSend.on('click', function () {
                                                    $btnSend.prop("disabled", true); //LuanNT44-16/03/2020-130-fix
                                                    //▼Add - TrungNC3 - 10/10/2017 - Thêm Nhóm SP & Hình thức xuất
                                                    var myData = hot.getData(0, 0, hot.getData().length, 12), datas = [], dataCheckLimitedHcCreate = [];

                                                    $.each(myData, function (index, item) {
                                                        if (item[2] != null && item[2] != undefined && item[2] != "") {
                                                            var timkiemthietbi = $.grep(dataProduct_HcCreate, function (element, index) {
                                                                return element.ItemName === item[2] && item[6] > 0;
                                                            });
                                                            var timkiemShop = $.grep(dataDept_HcCreate, function (element, index) {
                                                                return (element.WarehouseCode + '--' + element.WarehouseCodeB1 + '--' + element.WarehouseName) === item[0];
                                                            });
                                                            if (timkiemthietbi != null && timkiemthietbi != undefined && timkiemthietbi.length > 0
                                                                && timkiemShop != null && timkiemShop != undefined && timkiemShop.length > 0) {
                                                                var newData = {
                                                                    'ShopCode': timkiemShop[0].WarehouseCode.split("--")[0],
                                                                    'ItemId': timkiemthietbi[0].ItemId,
                                                                    'ItemName': timkiemthietbi[0].ItemName,
                                                                    'HinhThucXuat': timkiemthietbi[0].Limited,
                                                                    'GroupId': timkiemthietbi[0].GroupId,
                                                                    'GroupName': timkiemthietbi[0].ItemName,
                                                                    'InventoryNumber': item[5],
                                                                    'Quantity': item[6],
                                                                    'Price': timkiemthietbi[0].Price,
                                                                    'Sum': item[8],
                                                                    'Unit': timkiemthietbi[0].Unit,
                                                                    'Note': item[10],
                                                                };
                                                                datas.push(newData);
                                                            }
                                                        }
                                                    });
                                                    //▼Add - TrungNC3 - 10/10/2017 - Thêm Nhóm SP & Hình thức xuất
                                                    console.log(datas)
                                                    if (datas.length == 0) {
                                                        XFunction.RenderMessage('error', 'Chi tiết không được để trống <br/>Xin hãy nhập chi tiết vào bảng chi tiết');
                                                        return false;
                                                    }
                                                    else {
                                                        $('#Details').val(JSON.stringify(datas));
                                                        $('#DetailsLimited').val(JSON.stringify([]));
                                                        $('#Description').val(catagoryInfo.Description);
                                                        $('#TitleRequest').val($('#Title').val());
                                                        $('#typeId').val(catagoryInfo.Id);
                                                        var form = $("form#form-create");
                                                        form.attr("action", "/Requests/Create");
                                                        form.submit();
                                                        $('#WaitDialog').modal('show');
                                                        return true;
                                                    }
                                                });
                                            },
                                            error: function () {
                                                XFunction.RenderMessage('error', 'Có lỗi trong quá trình lấy số lượng tồn kho!');
                                                return false;
                                            }

                                        });
                                    },
                                    error: function () {
                                        XFunction.RenderMessage('error', 'Có lỗi trong quá trình lấy hạn mức!');
                                        return false;
                                    }

                                });
                            },
                            error: function () {
                                XFunction.RenderMessage('error', 'Có lỗi trong quá trình lấy vùng miền!');
                                return false;
                            }
                            //▼Add - TrungNC3 - 06/10/2017 - Thêm Nhóm SP & Hình thức xuất
                        });
                    },
                    error: function () {
                        XFunction.RenderMessage('error', 'Có lỗi trong quá trình lấy nhóm sản phẩm!');
                        return false;
                    }
                    //▲Add - TrungNC3 - 06/10/2017 - Thêm Nhóm SP & Hình thức xuất
                });
            },
            error: function () {
                XFunction.RenderMessage('error', 'Có lỗi trong quá trình lấy thiết bị!');
                return false;
            }

        });
        // });        
    };
    function contruct_135_136xx() {
        $areaChiTiet.show(); $areaDowloadAndImport.show();
        $('#FileSupport').attr('multiple', 'multiple');
        var DataImages = [];
        function readURL(input) {

            //if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                //$('#blah').attr('src', e.target.result);
            }

            reader.readAsDataURL(input);
            //}
        }
        function endFile(name) {
            var extension = name.split('.').pop().toLowerCase();
            if ($.inArray(extension, ['jpg', 'png', 'gif', 'jpeg']) == -1) {
                return false;
            }
            else {
                return true;
            }
        }
        $('#FileSupport').change(function (event) {
            //$('#WaitDialog').modal('show');
            var tmppath = URL.createObjectURL(event.target.files[0]);
            var files = event.target.files;
            DataImages = [];
            //$.each(files, function (index, item) {
            //    //readURL(item);
            //    item.columIns = 1;
            //    DataImages.push({
            //        'fileName': item.name,
            //        'fileData': item
            //    });
            //});
            ////$('#FileSupport').val('');
            //$.each(DataImages, function (index, item) {
            //    //readURL(item.fileData);
            //    $('#FileSupport').val(item.fileData);
            //});
            //console.log(DataImages);
            //console.log($('#FileSupport')[0].files);
            //$('#WaitDialog').modal('hide');
        });
        $btnSend.on('click', function () {
            var data = new FormData();
            var selectedFiles = $("#uploadDetails")[0].files;
            if (selectedFiles.length == 0) {
                e.preventDefault();
                $('#myModalUpload').modal('hide');
                XFunction.RenderMessage('error', 'Không có file để lưu');
                return;
            }
            $.each(selectedFiles, function (index, item) {
                data.append(selectedFiles[index].name, selectedFiles[index]);
            });
            var requestdetailId = $('#btnuploadDetails').attr('data-value');
            var rowline = $('#btnuploadDetails').attr('data-id');
            $.ajax({
                type: "POST",
                url: "/Requests/SaveUploadedFileDetail?RequsetDetailId=" + requestdetailId,
                contentType: false,
                processData: false,
                data: data,
                success: function (result) {
                    $('#myModalUpload').modal('hide');
                    if (result.error == 0) {
                        var fileNames = $.parseJSON(result.Message);
                        var stringImage = '';
                        $.each(fileNames, function (index1, item1) {
                            var duoi = item1.split('.')[1].toLowerCase();
                            if ($.inArray(duoi, ['jpg', 'png', 'jpeg', 'gif']) !== -1) {
                                stringImage += '<a href="' + item1 + '" target="_blank"><i class="fa fa-picture-o"></i>new' + (index1 + 1) + '   </a>   ||';
                            }
                            else if ($.inArray(duoi, ['tar', 'zip', 'rar', '7z', 'iso']) !== -1) {
                                stringImage += '<a href="' + item1 + '" dowload><i class="fa fa-file-archive-o"></i>new' + (index1 + 1) + '    </a>   ||';
                            } else {
                                stringImage += '<a href="' + item1 + '" dowload><i class="fa fa-file-excel-o"></i>new' + (index1 + 1) + '    </a>   ||';
                            }
                        });
                        var dataRow = hot.getDataAtRowProp(rowline, 'Images');
                        hot.setDataAtRowProp(rowline, 'Images', dataRow + stringImage, 'not');
                        XFunction.RenderMessage('success', 'Lưu ' + fileNames.length + ' file thành công');
                    } else {
                        XFunction.RenderMessage('error', 'Lưu file không thành công xem lại file upload');
                    }
                },
                error: function () {
                    $('#myModalUpload').modal('hide');
                    XFunction.RenderMessage('error', 'Lưu file không thành công xem lại file upload');
                }
            });
            e.preventDefault();
        });
    };
    function contruct_134() {
        $areaChiTiet.show(); $areaDowloadAndImport.hide();
        var dataSourceServiceName = [''];
        var dataSourceService = [];
        $.get('/Requests/GetTranderService', function (respone) {
            if (respone !== '' && respone !== null && respone !== undefined && respone.length > 0) {
                dataSourceService = respone;
                $.each(respone, function (index, item) {
                    dataSourceServiceName.push(item.Name);
                });
            }
        });
        var dataHandsontable = [];
        function contructdata() {
            dataHandsontable.push({
                'ColHtml_1': '',
                'DataFiles_1': '',
                'ListNameFile_1': '',

                'ColHtml_2': '',
                'DataFiles_2': '',
                'ListNameFile_2': '',

                'ColHtml_3': '',
                'DataFiles_3': '',
                'ListNameFile_3': '',

                'ColHtml_4': '',
                'DataFiles_4': '',
                'ListNameFile_4': '',

                'ColHtml_5': '',
                'DataFiles_5': '',
                'ListNameFile_5': '',

                'ColHtml_6': '',
                'DataFiles_6': '',
                'ListNameFile_6': '',

                'ColHtml_7': '',
                'DataFiles_7': '',
                'ListNameFile_7': ''
            })
        }; contructdata();
        var dataTempFile = "";
        function readURL(input) {
            //console.log(input);
            //var reader = new FileReader();
            //console.log(input);
            //reader.onload = function (e) {
            //    //console.log(e.target.result);
            //    var win = window.open(e.target.result, '_blank');
            //    if (win) {
            //        win.focus();
            //    } else {
            //        alert('Please allow popups for this site');
            //    }
            //}
            //console.log(input.mozFullPath);
            //reader.readAsDataURL(input);
            var tmppath = URL.createObjectURL(input);
            var win = window.open(tmppath, '_blank');
            if (win) {
                win.focus();
            } else {
                alert('Please allow popups for this site');
            }
        }
        function endFile(name) {
            var extension = name.split('.').pop().toLowerCase();
            if ($.inArray(extension, ['jpg', 'png', 'gif', 'jpeg']) == -1) {
                return false;
            }
            else {
                return true;
            }
        }
        function checkTime(time) {
            var trueTime = time.split(':');
            if (trueTime.length == 2  && time.length <=5)
            {                                                                
                var hh = time.split(':')[0];
                var mm = time.split(':')[1];
                if (Number.isInteger(parseInt(hh)) == true && Number.isInteger(parseInt(mm)) == true) {
                    if (parseInt(hh) < 0 || parseInt(hh) > 23) {
                        return -2;
                    }
                    else if (parseInt(mm) < 0 || parseInt(mm) > 59) {
                        return -3;
                    }
                    else return 1;
                }
                else {
                    return -1;
                }
            }
            else {
                return -1;
            }
        }
        var actionRendererUpload_1 = function (instance, td, row, col, prop, value, cellProperties) {

            if (prop == 'button_1') {
                var valid = instance.getDataAtRowProp(row, 'typeKn');
                var $button = '';
                var $buttonX = '';
                if (valid === null || valid === '' || valid === undefined) {
                    $button = '';
                    $buttonX = '';
                } else {
                    $button = $('<i id="r' + row + '" data-value="' + row + '" class="fa fa-cloud-upload" aria-hidden="true" style="color:green"></i>');
                    $button.click(function () {
                        var row = $(this).attr('data-value');
                        $('#uploadDetails').attr('data-value', row).attr('data-id', 'ColHtml_1');
                        $('#uploadDetails').val('');
                        $('#uploadDetails').trigger('click');
                    });
                    $buttonX = $('<i d="rx' + row + '" data-value="' + row + '" class="fa fa-trash" aria-hidden="true" style="color:red" title="Xóa hình"></i>');
                    $buttonX.click(function () {
                        var rowline = $(this).attr('data-value');
                        var rowCol = 'ColHtml_1';
                        $.each(dataHandsontable, function (index, item) {
                            if (rowline == index) {
                                var dataFiles = [];
                                var listHtml = [];
                                var lisDataFilesName = [];
                                item.DataFiles_1 = dataFiles;
                                item.ColHtml_1 = listHtml.join(' <br> ');
                                item.ListNameFile_1 = lisDataFilesName.join(',');
                            }
                        });
                        hot.render();
                    });
                }
                $buttonX != '' ?
                    $(td).empty().append($button).append(' ').append($buttonX) :
                    $(td).empty().append('');

            } else {
                $(td).empty().append('');
            }
        };
        var actionRendererUpload_2 = function (instance, td, row, col, prop, value, cellProperties) {
            if (prop == 'button_2') {
                var valid = instance.getDataAtRowProp(row, 'typeKn');
                var $button = '';
                var $buttonX = '';
                if (valid === null || valid === '' || valid === undefined) {
                    $button = '';
                } else {
                    $button = $('<i id="r' + row + '" data-value="' + row + '" class="fa fa-cloud-upload" aria-hidden="true" style="color:green"></i>');
                    $button.click(function () {
                        var row = $(this).attr('data-value');
                        $('#uploadDetails').attr('data-value', row).attr('data-id', 'ColHtml_2');
                        $('#uploadDetails').val('');
                        $('#uploadDetails').trigger('click');
                    }); $buttonX = $('<i d="rx' + row + '" data-value="' + row + '" class="fa fa-trash" aria-hidden="true" style="color:red" title="Xóa hình"></i>');
                    $buttonX.click(function () {
                        var rowline = $(this).attr('data-value');
                        var rowCol = 'ColHtml_2';
                        $.each(dataHandsontable, function (index, item) {
                            if (rowline == index) {
                                var dataFiles = [];
                                var listHtml = [];
                                var lisDataFilesName = [];
                                item.DataFiles_2 = dataFiles;
                                item.ColHtml_2 = listHtml.join(' <br> ');
                                item.ListNameFile_2 = lisDataFilesName.join(',');
                            }
                        });
                        hot.render();
                    });
                }
                $buttonX != '' ?
                    $(td).empty().append($button).append(' ').append($buttonX) :
                    $(td).empty().append('');
            } else {
                $(td).empty().append('');
            }
        };
        var actionRendererUpload_3 = function (instance, td, row, col, prop, value, cellProperties) {
            if (prop == 'button_3') {
                var valid = instance.getDataAtRowProp(row, 'typeKn');
                var $button = '';
                var $buttonX = '';
                if (valid === null || valid === '' || valid === undefined) {
                    $button = '';
                } else {
                    $button = $('<i id="r' + row + '" data-value="' + row + '" class="fa fa-cloud-upload" aria-hidden="true" style="color:green"></i>');
                    $button.click(function () {
                        var row = $(this).attr('data-value');
                        $('#uploadDetails').attr('data-value', row).attr('data-id', 'ColHtml_3');
                        $('#uploadDetails').val('');
                        $('#uploadDetails').trigger('click');
                    }); $buttonX = $('<i d="rx' + row + '" data-value="' + row + '" class="fa fa-trash" aria-hidden="true" style="color:red" title="Xóa hình"></i>');
                    $buttonX.click(function () {
                        var rowline = $(this).attr('data-value');
                        var rowCol = 'ColHtml_3';
                        $.each(dataHandsontable, function (index, item) {
                            if (rowline == index) {
                                var dataFiles = [];
                                var listHtml = [];
                                var lisDataFilesName = [];
                                item.DataFiles_3 = dataFiles;
                                item.ColHtml_3 = listHtml.join(' <br> ');
                                item.ListNameFile_3 = lisDataFilesName.join(',');
                            }
                        });
                        hot.render();
                    });
                }
                $buttonX != '' ?
                    $(td).empty().append($button).append(' ').append($buttonX) :
                    $(td).empty().append('');
            } else {
                $(td).empty().append('');
            }
        };
        var actionRendererUpload_4 = function (instance, td, row, col, prop, value, cellProperties) {
            if (prop == 'button_4') {
                var valid = instance.getDataAtRowProp(row, 'typeKn');
                var $button = '';
                var $buttonX = '';
                if (valid === null || valid === '' || valid === undefined) {
                    $button = '';
                } else {
                    $button = $('<i id="r' + row + '" data-value="' + row + '" class="fa fa-cloud-upload" aria-hidden="true" style="color:green"></i>');
                    $button.click(function () {
                        var row = $(this).attr('data-value');
                        $('#uploadDetails').attr('data-value', row).attr('data-id', 'ColHtml_4');
                        $('#uploadDetails').val('');
                        $('#uploadDetails').trigger('click');
                    }); $buttonX = $('<i d="rx' + row + '" data-value="' + row + '" class="fa fa-trash" aria-hidden="true" style="color:red" title="Xóa hình"></i>');
                    $buttonX.click(function () {
                        var rowline = $(this).attr('data-value');
                        var rowCol = 'ColHtml_4';
                        $.each(dataHandsontable, function (index, item) {
                            if (rowline == index) {
                                var dataFiles = [];
                                var listHtml = [];
                                var lisDataFilesName = [];
                                item.DataFiles_4 = dataFiles;
                                item.ColHtml_4 = listHtml.join(' <br> ');
                                item.ListNameFile_4 = lisDataFilesName.join(',');
                            }
                        });
                        hot.render();
                    });
                }
                $buttonX != '' ?
                    $(td).empty().append($button).append(' ').append($buttonX) :
                    $(td).empty().append('');
            } else {
                $(td).empty().append('');
            }
        };
        var actionRendererUpload_5 = function (instance, td, row, col, prop, value, cellProperties) {
            if (prop == 'button_5') {
                var valid = instance.getDataAtRowProp(row, 'typeKn');
                var $button = '';
                var $buttonX = '';
                if (valid === null || valid === '' || valid === undefined) {
                    $button = '';
                } else {
                    $button = $('<i id="r' + row + '" data-value="' + row + '" class="fa fa-cloud-upload" aria-hidden="true" style="color:green"></i>');
                    $button.click(function () {
                        var row = $(this).attr('data-value');
                        $('#uploadDetails').attr('data-value', row).attr('data-id', 'ColHtml_5');
                        $('#uploadDetails').val('');
                        $('#uploadDetails').trigger('click');
                    });
                    $buttonX = $('<i d="rx' + row + '" data-value="' + row + '" class="fa fa-trash" aria-hidden="true" style="color:red" title="Xóa hình"></i>');
                    $buttonX.click(function () {
                        var rowline = $(this).attr('data-value');
                        var rowCol = 'ColHtml_5';
                        $.each(dataHandsontable, function (index, item) {
                            if (rowline == index) {
                                var dataFiles = [];
                                var listHtml = [];
                                var lisDataFilesName = [];
                                item.DataFiles_5 = dataFiles;
                                item.ColHtml_5 = listHtml.join(' <br> ');
                                item.ListNameFile_5 = lisDataFilesName.join(',');
                            }
                        });
                        hot.render();
                    });
                }
                $buttonX != '' ?
                    $(td).empty().append($button).append(' ').append($buttonX) :
                    $(td).empty().append('');
            } else {
                $(td).empty().append('');
            }
        };
        var actionRendererUpload_6 = function (instance, td, row, col, prop, value, cellProperties) {
            if (prop == 'button_6') {
                var valid = instance.getDataAtRowProp(row, 'typeKn');
                var $button = '';
                var $buttonX = '';
                if (valid === null || valid === '' || valid === undefined) {
                    $button = '';
                } else {
                    $button = $('<i id="r' + row + '" data-value="' + row + '" class="fa fa-cloud-upload" aria-hidden="true" style="color:green"></i>');
                    $button.click(function () {
                        var row = $(this).attr('data-value');
                        $('#uploadDetails').attr('data-value', row).attr('data-id', 'ColHtml_6');
                        $('#uploadDetails').val('');
                        $('#uploadDetails').trigger('click');
                    });
                    $buttonX = $('<i d="rx' + row + '" data-value="' + row + '" class="fa fa-trash" aria-hidden="true" style="color:red" title="Xóa hình"></i>');
                    $buttonX.click(function () {
                        var rowline = $(this).attr('data-value');
                        var rowCol = 'ColHtml_6';
                        $.each(dataHandsontable, function (index, item) {
                            if (rowline == index) {
                                var dataFiles = [];
                                var listHtml = [];
                                var lisDataFilesName = [];
                                item.DataFiles_6 = dataFiles;
                                item.ColHtml_6 = listHtml.join(' <br> ');
                                item.ListNameFile_6 = lisDataFilesName.join(',');
                            }
                        });
                        hot.render();
                    });
                }
                $buttonX != '' ?
                    $(td).empty().append($button).append(' ').append($buttonX) :
                    $(td).empty().append('');
            } else {
                $(td).empty().append('');
            }
        };
        var actionRendererUpload_7 = function (instance, td, row, col, prop, value, cellProperties) {
            if (prop == 'button_7') {
                var valid = instance.getDataAtRowProp(row, 'typeKn');
                var $button = '';
                var $buttonX = '';
                if (valid === null || valid === '' || valid === undefined) {
                    $button = '';
                } else {
                    $button = $('<i id="r' + row + '" data-value="' + row + '" class="fa fa-cloud-upload" aria-hidden="true" style="color:green"></i>');
                    $button.click(function () {
                        var row = $(this).attr('data-value');
                        $('#uploadDetails').attr('data-value', row).attr('data-id', 'ColHtml_7');
                        $('#uploadDetails').val('');
                        $('#uploadDetails').trigger('click');
                    });
                    $buttonX = $('<i d="rx' + row + '" data-value="' + row + '" class="fa fa-trash" aria-hidden="true" style="color:red" title="Xóa hình"></i>');
                    $buttonX.click(function () {
                        var rowline = $(this).attr('data-value');
                        var rowCol = 'ColHtml_7';
                        $.each(dataHandsontable, function (index, item) {
                            if (rowline == index) {
                                var dataFiles = [];
                                var listHtml = [];
                                var lisDataFilesName = [];
                                item.DataFiles_7 = dataFiles;
                                item.ColHtml_7 = listHtml.join(' <br> ');
                                item.ListNameFile_7 = lisDataFilesName.join(',');
                            }
                        });
                        hot.render();
                    });
                }
                $buttonX != '' ?
                    $(td).empty().append($button).append(' ').append($buttonX) :
                    $(td).empty().append('');
            } else {
                $(td).empty().append('');
            }
        };
        $('#uploadDetails').on('change', function () {
            var rowline = $(this).attr('data-value');
            var rowCol = $(this).attr('data-id');
            var selectedFiles = $(this)[0].files;
            $.each(dataHandsontable, function (index, item) {
                if (rowline == index) {
                    var dataFiles = [];
                    var listHtml = [];
                    var lisDataFilesName = [];
                    $.each(selectedFiles, function (index, item) {

                        var d = new Date();
                        var n = d.getTime();
                        selectedFiles[index].nameNew = n.toString() + '_' + selectedFiles[index].name;

                        //console.log(selectedFiles[index], selectedFiles[index].name);

                        dataFiles.push(selectedFiles[index]);
                        lisDataFilesName.push(selectedFiles[index].nameNew);
                        var tmppath = URL.createObjectURL(selectedFiles[index]);
                        if (endFile(selectedFiles[index].nameNew)) {
                            listHtml.push('<a href="' + tmppath + '" target="_blank" class="renderlink" data-id="' + rowline + '" data-value="' + selectedFiles[index].nameNew + '" ><i class="fa fa-picture-o"></i> ' + selectedFiles[index].nameNew + '   </a>');
                        } else {
                            listHtml.push('<a href="' + tmppath + '" download="' + selectedFiles[index].nameNew + '" class="renderlink" data-id="' + rowline + '" data-value="' + selectedFiles[index].nameNew + '"  ><i class="fa fa-file-excel-o"></i> ' + selectedFiles[index].nameNew + '    </a>');
                        }
                    });
                    if (rowCol == 'ColHtml_1') {
                        item.DataFiles_1 = dataFiles;
                        item.ColHtml_1 = listHtml.join(' <br> ');
                        item.ListNameFile_1 = lisDataFilesName.join(',');
                    } else if (rowCol == 'ColHtml_2') {
                        item.DataFiles_2 = dataFiles;
                        item.ColHtml_2 = listHtml.join(' <br> ');
                        item.ListNameFile_2 = lisDataFilesName.join(',');
                    } else if (rowCol == 'ColHtml_3') {
                        item.DataFiles_3 = dataFiles;
                        item.ColHtml_3 = listHtml.join(' <br> ');
                        item.ListNameFile_3 = lisDataFilesName.join(',');
                    } else if (rowCol == 'ColHtml_4') {
                        item.DataFiles_4 = dataFiles;
                        item.ColHtml_4 = listHtml.join(' <br> ');
                        item.ListNameFile_4 = lisDataFilesName.join(',');
                    } else if (rowCol == 'ColHtml_5') {
                        item.DataFiles_5 = dataFiles;
                        item.ColHtml_5 = listHtml.join(' <br> ');
                        item.ListNameFile_5 = lisDataFilesName.join(',');
                    } else if (rowCol == 'ColHtml_6') {
                        item.DataFiles_6 = dataFiles;
                        item.ColHtml_6 = listHtml.join(' <br> ');
                        item.ListNameFile_6 = lisDataFilesName.join(',');
                    } else if (rowCol == 'ColHtml_7') {
                        item.DataFiles_7 = dataFiles;
                        item.ColHtml_7 = listHtml.join(' <br> ');
                        item.ListNameFile_7 = lisDataFilesName.join(',');
                    }

                }
            });
            hot.render();
            $(this).val('');
            //console.log(rowline, rowCol);
        });
        function strip_tags(input, allowed) {
            var tags = /<\/?([a-z][a-z0-9]*)\b[^>]*>/gi,
                commentsAndPhpTags = /<!--[\s\S]*?-->|<\?(?:php)?[\s\S]*?\?>/gi;

            // making sure the allowed arg is a string containing only tags in lowercase (<a><b><c>)
            allowed = (((allowed || "") + "").toLowerCase().match(/<[a-z][a-z0-9]*>/g) || []).join('');

            return input.replace(commentsAndPhpTags, '').replace(tags, function ($0, $1) {
                return allowed.indexOf('<' + $1.toLowerCase() + '>') > -1 ? $0 : '';
            });
        }
        function safeHtmlRenderer(instance, td, row, col, prop, value, cellProperties) {
            var escaped = Handsontable.helper.stringify(value);
            escaped = strip_tags(escaped, '<em><b><strong><a><big><i><br>');
            td.innerHTML = escaped;
            td.style.textAlign = 'left';
            return td;
        }
        var dataShopFull = [], dataShopName = [];
        $.get('/Requests/GetShopByRegion', { regionId: 0 }, function (data) {
            dataShopFull = data;
            $.each(data, function (index, item) {
                dataShopName.push(item.WarehouseCode + '--' + item.WarehouseName);
            });
            var dataVitriCAM = ['1','2','3','4','5','6','7','8','9','10','Khác'];

            var setting = function () {
                return {
                    //=================================Data=======
                    data: dataHandsontable,
                    //================================Cols=======
                    //maxCols: 22,
                    //minCols: 22,
                    //startCols: 22,
                    minSpareCols: 0,
                    allowInsertColumn: false,
                    allowRemoveColumn: false,
                    autoColumnSize: true,
                    autoWrapCol: true,
                    columnSorting: false,
                    //colWidths: 'undefined',
                    copyColsLimit: 22,
                    currentColClassName: 'currentCol', //currentCol
                    fixedColumnsLeft: 0,
                    manualColumnMove: false,
                    manualColumnResize: true,
                    viewportColumnRenderingOffset: 22,
                    sortIndicator: true,
                    //================================Rows=======
                    allowInsertRow: true,
                    allowRemoveRow: true,
                    autoRowSize: true,
                    autoWrapRow: true,
                    copyRowsLimit: 1000,
                    currentRowClassName: 'currentRow',
                    fixedRowsTop: 0,
                    manualRowMove: false,
                    manualRowResize: true,
                    rowHeaders: true,
                    minSpareRows: 10,
                    //startRows: 10,
                    //viewportRowRenderingOffset : 'auto',
                    //maxRows: 'Infinity',
                    //minRows: 'Infinity',
                    //================================Oder=======
                    allowInvalid: false,
                    //stretchH: 'all',
                    commentedCellClassName: 'htCommentCell',
                    comments: true,
                    contextMenu: true,
                    copyable: true,
                    customBorders: false,
                    debug: false,
                    disableVisualSelection: true,
                    enterBeginsEditingBoolean: true,
                    fillHandle: true,
                    outsideClickDeselects: true,
                    fragmentSelection: false,
                    groups: false,
                    invalidCellClassName: 'htInvalid',
                    mergeCells: false,
                    multiSelect: true,
                    noWordWrapClassName: 'htNoWrap',
                    placeholder: false,
                    placeholderCellClassName: 'htPlaceholder',
                    readOnlyCellClassName: 'htDimmed',
                    search: false,
                    trimWhitespace: true,
                    undo: true,
                    formulas: true,
                    wordWrap: true,
                    copyPaste: false,
                    hiddenColumns: {
                        indicators: true
                    },
                    //====================================Oder ==============================================
                    colHeaders: [
                        'Loại khiếu nại',
                        'Nhà vận chuyển',
                        'Nội dung tình huống cụ thể claim', 'Shop đề xuất hướng đền bù',
                        'File ->', 'Lệnh điều động nội bộ',
                        'Mã vận đơn shop/ Kho nhận hàng',
                        'File ->', 'Hình vận đơn Đã đồng kiểm',
                        'File ->', 'File Biên bản làm việc',
                        'File ->', 'File thùng hàng nhận',
                        'File ->', 'Hình chụp hiện trạng',
                        'File ->', 'Hình hóa đơn nhập hàng',
                        'File ->', 'Hình Jobcard (Phiếu biên nhận Bảo hành/Dịch vụ)',
                        'Vị trí CAM shop gửi',
                        'Vị trí khác',
                        'Ngày chuyển/nhận hàng shop gửi',
                        'Thời gian chuyển/nhận hàng shop gửi (bắt đầu)',
                        'Thời gian chuyển/nhận hàng shop gửi (kết thúc)',
                        'Vị trí CAM shop nhận',
                        'Vị trí khác',
                        'Ngày chuyển/nhận hàng shop nhận',
                        'Thời gian chuyển/nhận hàng shop nhận (bắt đầu)',
                        'Thời gian chuyển/nhận hàng shop nhận (kết thúc)',
                        //'Paste Links ->', 'Links Camera',
                        //'Thời gian chuyển hàng/nhận hàng',
                        'Tên shop gửi hàng',
                        'Ghi chú'
                    ],
                    columns: [
                        { data: 'typeKn', type: 'dropdown', width: 150, source: ['', 'Hàng LCNB shop', 'Hàng Bảo hành'], className: 'htLeft' },
                        { data: "Transporters", type: 'dropdown', width: 150, source: dataSourceServiceName },
                        { data: "NoiDungCuTheClaim", type: 'text', className: 'htLeft' },
                        { data: "HuongDenBu", type: 'text', className: 'htLeft' },
                        { data: "button_7", renderer: actionRendererUpload_7, readOnly: true },
                        { data: "ColHtml_7", renderer: safeHtmlRenderer, readOnly: true, className: 'htLeft' },
                        { data: "MaBillNhanHang", type: 'text', className: 'htLeft' },
                        { data: "button_1", renderer: actionRendererUpload_1, readOnly: true },
                        { data: 'ColHtml_1', renderer: safeHtmlRenderer, readOnly: true, className: 'htLeft' },
                        { data: "button_2", renderer: actionRendererUpload_2, readOnly: true },
                        { data: 'ColHtml_2', renderer: safeHtmlRenderer, className: 'htLeft', readOnly: true },
                        { data: "button_6", renderer: actionRendererUpload_6, readOnly: true },
                        { data: 'ColHtml_6', renderer: safeHtmlRenderer, className: 'htLeft', readOnly: true },
                        { data: "button_3", renderer: actionRendererUpload_3, readOnly: true },
                        { data: 'ColHtml_3', renderer: safeHtmlRenderer, className: 'htLeft', readOnly: true },
                        { data: "button_4", renderer: actionRendererUpload_4, readOnly: true },
                        { data: 'ColHtml_4', renderer: safeHtmlRenderer, className: 'htLeft', readOnly: true },
                        { data: "button_5", renderer: actionRendererUpload_5, readOnly: true },
                        { data: 'ColHtml_5', renderer: safeHtmlRenderer, className: 'htLeft', readOnly: true },

                        { data: "ViTriCamShopGui", type: 'autocomplete', strict: false, source: dataVitriCAM, className: 'htLeft' },
                        { data: "ViTriCamShopGuiKhac", type: 'text', className: 'htLeft' },
                        { data: 'NgayChuyenHangShopGui', type: 'date',dateFormat: 'DD/MM/YYYY', correctFormat: true, allowInvalid: false, className: 'htLeft',allowInvalid: true },
                        { data: "TgianChuyenHangShopGuiTu", type: 'text' , className: 'htLeft' },
                        { data: 'TgianChuyenHangShopGuiDen', type: 'text', className: 'htLeft' },
                        { data: "ViTriCamShopNhan", type: 'autocomplete', strict: false, source: dataVitriCAM, className: 'htLeft' },
                        { data: "ViTriCamShopNhanKhac", type: 'text', className: 'htLeft' },
                        { data: 'NgayChuyenHangShopNhan', type: 'date',dateFormat: 'DD/MM/YYYY', correctFormat: true, allowInvalid: false, className: 'htLeft',allowInvalid: true },
                        { data: "TgianChuyenHangShopNhanTu", type: 'text', className: 'htLeft' },
                        { data: 'TgianChuyenHangShopNhanDen', type: 'text', className: 'htLeft' },
                        //{ data: 'ThoiGianChuyenHang', type: 'text', className: 'htLeft' },
                        { data: "Shops", type: 'autocomplete', source: dataShopName, strict: false, className: 'htLeft' },
                        { data: 'note', type: 'text', className: 'htLeft' },
                    ],
                    beforeChange: function (changes, source) {
                        if (source == 'not') return;
                        for (i = 0; i < changes.length; i++) {
                            var row = changes[i][0], col = changes[i][1], newValue = changes[i][3], oldValue = changes[i][2];
                            if (col === 'TgianChuyenHangShopGuiTu'
                                || col === 'TgianChuyenHangShopGuiDen'
                                || col === 'TgianChuyenHangShopNhanTu'
                                || col === 'TgianChuyenHangShopNhanDen') {
                                if (checkTime(newValue) == -1 )
                                {
                                    hot.setDataAtRowProp(row, col, oldValue, 'not');
                                    XFunction.RenderMessage('error', 'Thời gian sai định dạng HH:MM!');
                                    return false;
                                }
                                if (checkTime(newValue) == -2) {
                                    hot.setDataAtRowProp(row, col, oldValue, 'not');
                                    XFunction.RenderMessage('error', 'Giờ từ 0h đến 23h!');
                                    return false;
                                }
                                if (checkTime(newValue) == -3) {
                                    hot.setDataAtRowProp(row, col, oldValue, 'not');
                                    XFunction.RenderMessage('error', 'Phút từ 0p đến 59p!');
                                    return false;
                                }
                            }
                        }
                        hot.render();
                    },
                    afterChange: function (changes, source) {
                        if (!changes || source == 'not') {
                            return;
                        }
                        var instance = this;
                        changes.forEach(function (change) {
                            var row = change[0];
                            var col = change[1];
                            var newValue = change[3];
                            var cellProperties, options;
                            if (col == 'PastLink') {
                                if (newValue == '' || newValue == null || newValue == undefined) {
                                    hot.setDataAtRowProp(row, 'Links', '', 'not');
                                } else {
                                    hot.setDataAtRowProp(row, 'Links', newValue, 'not');
                                }
                            }
                            if (col == 'NgayChuyenHangShopGui')
                            {
                                var now = new Date();

                                function toDate(dateStr) {
                                    const [day, month, year] = dateStr.split('/')
                                    return new Date(year, month - 1, day)
                                }
                                var datenhap = toDate(newValue);
                                if(datenhap > now)
                                {
                                    hot.setDataAtRowProp(row, 'NgayChuyenHangShopGui', '', 'not');
                                    XFunction.RenderMessage('error', 'Phải chọn ngày nhỏ hơn hoặc bằng ngày hiện tại !');
                                }
                            }
                            if (col == 'NgayChuyenHangShopNhan') {
                                
                                var now = new Date();

                                function toDate(dateStr) {
                                    const [day, month, year] = dateStr.split('/')
                                    return new Date(year, month - 1, day)
                                }
                                var datenhap = toDate(newValue);
                                if(datenhap > now)
                                {
                                    hot.setDataAtRowProp(row, 'NgayChuyenHangShopNhan', '', 'not');
                                    XFunction.RenderMessage('error', 'Phải chọn ngày nhỏ hơn hoặc bằng ngày hiện tại !');
                                }
                            }
                            if (col == 'ViTriCamShopGui') {
                                var dataCheckGui = ['1','2','3','4','5','6','7','8','9','10','Khác'];
                                var flagGui = 0;
                                $.each(dataCheckGui, function(index, item){
                                    if(item === newValue)
                                    {
                                        flagGui ++;
                                    }
                                });
                                //console.log(hot.version)
                                if(flagGui == 0)
                                {
                                    hot.setDataAtRowProp(row, 'ViTriCamShopGui', '', 'not');
                                    XFunction.RenderMessage('error', 'Giá trị nhập không đúng !'); return;
                                }
                                if(newValue !== 'Khác')
                                {
                                    hot.setDataAtRowProp(row, 'ViTriCamShopGuiKhac', '', 'not');
                                }
                                
                            }
                            if (col == 'ViTriCamShopNhan') {
                                var dataCheckNhan = ['1','2','3','4','5','6','7','8','9','10','Khác'];
                                var flagGui = 0;
                                $.each(dataCheckNhan, function(index, item){
                                    if(item === newValue)
                                    {
                                        flagGui ++;
                                    }
                                });
                                if(flagGui = 0)
                                {
                                    hot.setDataAtRowProp(row, 'ViTriCamShopNhan', '', 'not');
                                    XFunction.RenderMessage('error', 'Giá trị nhập không đúng !'); return;
                                }
                                if(newValue !== 'Khác')
                                {
                                    hot.setDataAtRowProp(row, 'ViTriCamShopNhanKhac', '', 'not');
                                }
                            }
                            if (col == 'ViTriCamShopGuiKhac') {
                                var flagCHECH = hot.getDataAtRowProp(row, 'ViTriCamShopGui');
                                if(flagCHECH !== 'Khác')
                                {
                                    hot.setDataAtRowProp(row, 'ViTriCamShopGuiKhac', '', 'not');
                                    XFunction.RenderMessage('error', 'Không được nhập mục này !'); return;
                                }
                            }
                            if (col == 'ViTriCamShopNhanKhac') {
                                var flagCHECH2 = hot.getDataAtRowProp(row, 'ViTriCamShopNhan');
                                if(flagCHECH2 !== 'Khác')
                                {
                                    hot.setDataAtRowProp(row, 'ViTriCamShopNhanKhac', '', 'not');
                                    XFunction.RenderMessage('error', 'Không được nhập mục này !'); return;
                                }
                            }
                            //▼ LuanNT44 - 14/06/2019 - loại 134 - Thêm điều kiện shop gửi
                            if (col == 'Shops') {
                                var flagShop = newValue;
                                var tmp = 0;
                                $.each(dataShopFull,function(index,item){
                                    var Fshop = item.WarehouseCode + '--' + item.WarehouseName;
                                    if(flagShop == Fshop)
                                    {
                                        tmp = 1;
                                    }
                                });
                                //console.log(flagShop)
                                if(tmp == 0)
                                {
                                    hot.setDataAtRowProp(row, 'Shops', '', 'not');
                                    XFunction.RenderMessage('error', 'Nhập shop không đúng !'); return;
                                }
                            }
                            //▲ LuanNT44 - 14/06/2019 - loại 134 - Thêm điều kiện shop gửi
                        });
                        instance.render();
                    },
                };
            };
            hot = new Handsontable(container, setting());
            
        });
        
        $btnSend.on('click', function () {
            //console.log(hot); return;
            var data = new FormData();

            var dataReturn = [];
            var dataAll = [];
            var dataCheck = [];
            var dataShop = [];
            dataAll = $.grep(hot.getData(), function (item, index) {
                return (item.typeKn !== null && item.typeKn !== '' && item.typeKn !== undefined)
                    || (item.Transporters !== null && item.Transporters !== '' && item.Transporters !== undefined);
            });

            if (dataAll.length == 0) {
                XFunction.RenderMessage('error', 'Dữ liệu chi tiết chưa đầy đủ! Vui lòng nhập đầy đủ chi tiết!'); return;
            }
            dataCheck = $.grep(hot.getData(), function (item, index) {
                return (item.typeKn !== null && item.typeKn !== '' && item.typeKn !== undefined)
                    && (item.Transporters !== null && item.Transporters !== '' && item.Transporters !== undefined)
            });

            if (dataCheck.length == 0) {
                XFunction.RenderMessage('error', 'Vui lòng nhập đầy đủ thông tin cột loại khiếu nại và nhà vận chuyển!'); return;
            }

            var dataInvlidLCNB = [];
            var dataInvalidBH = [];
            var dataInvalidRequ = [];
            var requiredLCNB = ['ListNameFile_1', 'ListNameFile_2', 'ListNameFile_3', 'ListNameFile_4', 'ListNameFile_6', 'ListNameFile_7'];
            var requiredBH = ['ListNameFile_1', 'ListNameFile_2', 'ListNameFile_3', 'ListNameFile_5', 'ListNameFile_6'];
            var requiredCol = ['typeKn', 'Transporters'];
            var InvalidNoiDungCuTheClaim = [], InvalidHuongDenBu = [], InvalidMaBillNhanHang = []
            var viTriCaMShopGui = [], viTriCaMShopNhan = [], ngayChuyenHangShopGui = [], ngayChuyenHangShopNhan = [], tgianChuyenHangShopGuiTu = [], tgianChuyenHangShopNhanTu = [];
            var ViTriCamShopGuiKhacCheck = [], ViTriCamShopNhanKhacCheck = [] ;

            //▼ LuanNT44 - 21/06/2019 - loại 134 - Thêm điều kiện shop gửi
            var flagShopGui = 0;
            $.each(dataAll, function (index, item) {
                var shops = item.Shops ;
                if (shops !== '' && shops !== null && shops !== undefined) {
                    var timshop = $.grep(dataShopFull, function (element, cout) {
                        return element.WarehouseCode + '--' + element.WarehouseName == shops;
                    });
                    if (timshop.length == 0) {
                        flagShopGui += 1;
                    }
                }
                
            });

            if(flagShopGui > 0)
            {
                XFunction.RenderMessage('error', 'Shop gửi không hợp lệ ! vui lòng chọn lại !!'); return;
            }
            //▲ LuanNT44 - 21/06/2019 - loại 134 - Thêm điều kiện shop gửi
            $.each(dataAll, function (index, item) {
                //▼ LuanNT44 - 14/06/2019 - loại 134 - Thêm điều kiện shop gửi
                var fshop = item.Shops; //console.log(fshop);
                var shops = '';
                if (fshop == '' || fshop == null || fshop == undefined) {
                    shops = '';
                }
                else
                {
                    shops = fshop.split('--')[0];
                }
                //if (shops == '' || shops == null || shops == undefined) {
                //    shops = '';
                //}
                //else {

                //    var timshop = $.grep(dataShopFull, function (element, cout) {
                //        return element.WarehouseCode + '--' + element.WarehouseName == shops;
                //    });
                //    if (timshop.length > 0) {
                //        shops = timshop[0].WarehouseCode;
                //    } else {
                //        shops = '';
                //    }
                //}
                //▲ LuanNT44 - 14/06/2019 - loại 134 - Thêm điều kiện shop gửi
                dataReturn.push({
                    row: index,
                    note: item.note == null || item.note == '' || item.note == undefined ? '' : item.note,
                    typeKn: item.typeKn,
                    Transporters: $.grep(dataSourceService, function (element, cout) {
                        return item.Transporters == element.Name;
                    })[0].Code,
                    ListNameFile_1: item.ListNameFile_1 === null || item.ListNameFile_1 === '' || item.ListNameFile_1 === undefined ? '' : item.ListNameFile_1,
                    ListNameFile_2: item.ListNameFile_2 === null || item.ListNameFile_2 === '' || item.ListNameFile_2 === undefined ? '' : item.ListNameFile_2,
                    ListNameFile_3: item.ListNameFile_3 === null || item.ListNameFile_3 === '' || item.ListNameFile_3 === undefined ? '' : item.ListNameFile_3,
                    ListNameFile_4: item.ListNameFile_4 === null || item.ListNameFile_4 === '' || item.ListNameFile_4 === undefined ? '' : item.ListNameFile_4,
                    ListNameFile_5: item.ListNameFile_5 === null || item.ListNameFile_5 === '' || item.ListNameFile_5 === undefined ? '' : item.ListNameFile_5,
                    ListNameFile_6: item.ListNameFile_6 === null || item.ListNameFile_6 === '' || item.ListNameFile_6 === undefined ? '' : item.ListNameFile_6,
                    Links: item.Links === null || item.Links === '' || item.Links === undefined ? '' : item.Links,
                    NoiDungCuTheClaim: item.NoiDungCuTheClaim === null || item.NoiDungCuTheClaim === '' || item.NoiDungCuTheClaim === undefined ? '' : item.NoiDungCuTheClaim,
                    HuongDenBu: item.HuongDenBu === null || item.HuongDenBu === '' || item.HuongDenBu === undefined ? '' : item.HuongDenBu,
                    ListNameFile_7: item.ListNameFile_7 === null || item.ListNameFile_7 === '' || item.ListNameFile_7 === undefined ? '' : item.ListNameFile_7,
                    MaBillNhanHang: item.MaBillNhanHang === null || item.MaBillNhanHang === '' || item.MaBillNhanHang === undefined ? '' : item.MaBillNhanHang,
                    Shops: shops,
                    ThoiGianChuyenHang: item.ThoiGianChuyenHang == '' || item.ThoiGianChuyenHang == null || item.ThoiGianChuyenHang == undefined ? null : item.ThoiGianChuyenHang,
                    ViTriCamShopGui: item.ViTriCamShopGui == '' || item.ViTriCamShopGui == null || item.ViTriCamShopGui == undefined ? null : item.ViTriCamShopGui,
                    ViTriCamShopNhan: item.ViTriCamShopNhan == '' || item.ViTriCamShopNhan == null || item.ViTriCamShopNhan == undefined ? null : item.ViTriCamShopNhan,
                    ViTriCamShopGuiKhac: item.ViTriCamShopGuiKhac == '' || item.ViTriCamShopGuiKhac == null || item.ViTriCamShopGuiKhac == undefined ? null : item.ViTriCamShopGuiKhac,
                    ViTriCamShopNhanKhac: item.ViTriCamShopNhanKhac == '' || item.ViTriCamShopNhanKhac == null || item.ViTriCamShopNhanKhac == undefined ? null : item.ViTriCamShopNhanKhac,
                    NgayChuyenHangShopGui: item.NgayChuyenHangShopGui == '' || item.NgayChuyenHangShopGui == null || item.NgayChuyenHangShopGui == undefined ? null : item.NgayChuyenHangShopGui,
                    NgayChuyenHangShopNhan: item.NgayChuyenHangShopNhan == '' || item.NgayChuyenHangShopNhan == null || item.NgayChuyenHangShopNhan == undefined ? null : item.NgayChuyenHangShopNhan,
                    GioChuyenHangShopGuiTu: item.TgianChuyenHangShopGuiTu == '' || item.TgianChuyenHangShopGuiTu == null || item.TgianChuyenHangShopGuiTu == undefined ? null : item.TgianChuyenHangShopGuiTu.split(':')[0],
                    PhutChuyenHangShopGuiTu: item.TgianChuyenHangShopGuiTu == '' || item.TgianChuyenHangShopGuiTu == null || item.TgianChuyenHangShopGuiTu == undefined ? null : item.TgianChuyenHangShopGuiTu.split(':')[1],
                    GioChuyenHangShopNhanTu: item.TgianChuyenHangShopNhanTu == '' || item.TgianChuyenHangShopNhanTu == null || item.TgianChuyenHangShopNhanTu == undefined ? null : item.TgianChuyenHangShopNhanTu.split(':')[0],
                    PhutChuyenHangShopNhanTu: item.TgianChuyenHangShopNhanTu == '' || item.TgianChuyenHangShopNhanTu == null || item.TgianChuyenHangShopNhanTu == undefined ? null : item.TgianChuyenHangShopNhanTu.split(':')[1],
                    GioChuyenHangShopGuiDen: item.TgianChuyenHangShopGuiDen == '' || item.TgianChuyenHangShopGuiDen == null || item.TgianChuyenHangShopGuiDen == undefined ? null : item.TgianChuyenHangShopGuiDen.split(':')[0],
                    PhutChuyenHangShopGuiDen: item.TgianChuyenHangShopGuiDen == '' || item.TgianChuyenHangShopGuiDen == null || item.TgianChuyenHangShopGuiDen == undefined ? null : item.TgianChuyenHangShopGuiDen.split(':')[1],
                    GioChuyenHangShopNhanDen: item.TgianChuyenHangShopNhanDen == '' || item.TgianChuyenHangShopNhanDen == null || item.TgianChuyenHangShopNhanDen == undefined ? null : item.TgianChuyenHangShopNhanDen.split(':')[0],
                    PhutChuyenHangShopNhanDen: item.TgianChuyenHangShopNhanDen == '' || item.TgianChuyenHangShopNhanDen == null || item.TgianChuyenHangShopNhanDen == undefined ? null : item.TgianChuyenHangShopNhanDen.split(':')[1],
                });
                if (item.DataFiles_1 !== '' && item.DataFiles_1 !== null && item.DataFiles_1 !== undefined && item.DataFiles_1.length > 0) {
                    $.each(item.DataFiles_1, function (cout, element) {
                        data.append(element.nameNew, element);
                    });
                }
                if (item.DataFiles_2 !== '' && item.DataFiles_2 !== null && item.DataFiles_2 !== undefined && item.DataFiles_2.length > 0) {
                    $.each(item.DataFiles_2, function (cout, element) {
                        data.append(element.nameNew, element);
                    });
                }
                if (item.DataFiles_3 !== '' && item.DataFiles_3 !== null && item.DataFiles_3 !== undefined && item.DataFiles_3.length > 0) {
                    $.each(item.DataFiles_3, function (cout, element) {
                        data.append(element.nameNew, element);
                    });
                }
                if (item.DataFiles_4 !== '' && item.DataFiles_4 !== null && item.DataFiles_4 !== undefined && item.DataFiles_4.length > 0) {
                    $.each(item.DataFiles_4, function (cout, element) {
                        data.append(element.nameNew, element);
                    });
                }
                if (item.DataFiles_5 !== '' && item.DataFiles_5 !== null && item.DataFiles_5 !== undefined && item.DataFiles_5.length > 0) {
                    $.each(item.DataFiles_5, function (cout, element) {
                        data.append(element.nameNew, element);
                    });
                }
                if (item.DataFiles_6 !== '' && item.DataFiles_6 !== null && item.DataFiles_6 !== undefined && item.DataFiles_6.length > 0) {
                    $.each(item.DataFiles_6, function (cout, element) {
                        data.append(element.nameNew, element);
                    });
                }
                if (item.DataFiles_7 !== '' && item.DataFiles_7 !== null && item.DataFiles_7 !== undefined && item.DataFiles_7.length > 0) {
                    $.each(item.DataFiles_7, function (cout, element) {
                        data.append(element.nameNew, element);
                    });
                }
                var checkRequid = true;
                $.each(requiredCol, function (cout, element) {
                    if (item[element] === null || item[element] === '' || item[element] === undefined) {
                        checkRequid = false;
                    }
                });
                if (checkRequid == false) {
                    dataInvalidRequ.push(index);
                }


                if (item.typeKn == 'Hàng LCNB shop') {
                    var checkLCNB = true;
                    $.each(requiredLCNB, function (cout, element) {
                        if (item[element] === null || item[element] === '' || item[element] === undefined) {
                            checkLCNB = false;
                        }
                    });
                    if (checkLCNB == false) {
                        dataInvlidLCNB.push(index);
                    }
                } else if (item.typeKn == 'Hàng Bảo hành') {
                    var checkBh = true;
                    $.each(requiredBH, function (cout, element) {
                        if (item[element] === null || item[element] === '' || item[element] === undefined) {
                            checkBh = false;
                        }
                    });
                    if (checkBh == false) {
                        dataInvalidBH.push(index);
                    }
                }
                if (item.ViTriCamShopGui == '' || item.ViTriCamShopGui == null || item.ViTriCamShopGui == undefined) {
                    viTriCaMShopGui.push(index + 1);
                }
                else if(item.ViTriCamShopGui === 'Khác')
                {
                    if (item.ViTriCamShopGuiKhac == '' || item.ViTriCamShopGuiKhac == null || item.ViTriCamShopGuiKhac == undefined) {
                        ViTriCamShopGuiKhacCheck.push(index + 1);
                    }
                }
                if (item.ViTriCamShopNhan == '' || item.ViTriCamShopNhan == null || item.ViTriCamShopNhan == undefined) {
                    viTriCaMShopNhan.push(index + 1);
                }
                else if(item.ViTriCamShopNhan === 'Khác')
                {
                    if (item.ViTriCamShopNhanKhac == '' || item.ViTriCamShopNhanKhac == null || item.ViTriCamShopNhanKhac == undefined) {
                        ViTriCamShopNhanKhacCheck.push(index + 1);
                    }
                }
                
                if (item.NgayChuyenHangShopGui == '' || item.NgayChuyenHangShopGui == null || item.NgayChuyenHangShopGui == undefined) {
                    ngayChuyenHangShopGui.push(index + 1);
                }
                if (item.NgayChuyenHangShopNhan == '' || item.NgayChuyenHangShopNhan == null || item.NgayChuyenHangShopNhan == undefined) {
                    ngayChuyenHangShopNhan.push(index + 1);
                }
                if (item.TgianChuyenHangShopGuiTu == '' || item.TgianChuyenHangShopGuiTu == null || item.TgianChuyenHangShopGuiTu == undefined) {
                    tgianChuyenHangShopGuiTu.push(index + 1);
                }
                if (item.TgianChuyenHangShopNhanTu == '' || item.TgianChuyenHangShopNhanTu == null || item.TgianChuyenHangShopNhanTu == undefined) {
                    tgianChuyenHangShopNhanTu.push(index + 1);
                }

                if (item.NoiDungCuTheClaim == '' || item.NoiDungCuTheClaim == null || item.NoiDungCuTheClaim == undefined) {
                    InvalidNoiDungCuTheClaim.push(index + 1);
                }
                if (item.HuongDenBu == '' || item.HuongDenBu == null || item.HuongDenBu == undefined) {
                    InvalidHuongDenBu.push(index + 1);
                }
                if (item.MaBillNhanHang == '' || item.MaBillNhanHang == null || item.MaBillNhanHang == undefined) {
                    InvalidMaBillNhanHang.push(index + 1);
                }
                if (item.Shops == '' || item.Shops == null || item.Shops == undefined) {
                    dataShop.push(index + 1);
                }
            });
            if (viTriCaMShopGui.length > 0) {
                XFunction.RenderMessage('error', 'Chưa nhâp vị trí CAM shop gửi!'); return;
            }
            if (ViTriCamShopGuiKhacCheck.length > 0) {
                XFunction.RenderMessage('error', 'Chưa nhâp vị trí CAM khác shop gửi!'); return;
            }
            if (ngayChuyenHangShopGui.length > 0) {
                XFunction.RenderMessage('error', 'Chưa nhâp ngày chuyển hàng shop gửi!'); return;
            }
            if (tgianChuyenHangShopGuiTu.length > 0) {
                XFunction.RenderMessage('error', 'Chưa nhâp thời gian chuyển hàng shop gửi!'); return;
            }
            if (viTriCaMShopNhan.length > 0) {
                XFunction.RenderMessage('error', 'Chưa nhâp vị trí CAM shop nhận!'); return;
            }
            if (ViTriCamShopNhanKhacCheck.length > 0) {
                XFunction.RenderMessage('error', 'Chưa nhâp vị trí CAM khác shop nhận!'); return;
            }
            if (ngayChuyenHangShopNhan.length > 0) {
                XFunction.RenderMessage('error', 'Chưa nhâp ngày chuyển hàng shop nhận!'); return;
            }
            if (tgianChuyenHangShopNhanTu.length > 0) {
                XFunction.RenderMessage('error', 'Chưa nhâp thời gian chuyển hàng shop nhận!'); return;
            }

            if (dataInvalidRequ.length > 0) {
                XFunction.RenderMessage('error', 'Vui lòng nhập đầy đủ thông tin cột loại khiếu nại và nhà vận chuyển!'); return;
            }
            if (dataInvlidLCNB.length > 0) {
                XFunction.RenderMessage('error', ' Loại LCNB phải import đầy đủ dữ liệu vào : <br> ' +
                    'Hình vận đơn Đã đồng kiểm. <br/>' +
                    'File Biên bản làm việc. <br/>' +
                    'File thùng hàng nhận. <br/>' +
                    'Hình chụp hiện trạng. <br/>' +
                    'Hình hóa đơn nhập hàng. <br/>' +
                    'File lệnh điều động nội bộ. <br/>');
                return;
            }
            if (dataInvalidBH.length > 0) {
                XFunction.RenderMessage('error', 'Loại Bảo hành phải import đầy đủ dữ liệu vào : <br> ' +
                    'Hình vận đơn Đã đồng kiểm. <br/>' +
                    'File Biên bản làm việc. <br/>' +
                    'File thùng hàng nhận. <br/>' +
                    'Hình chụp hiện trạng. <br/>' +
                    'Hình Jobcard (Phiếu biên nhận Bảo hành/Dịch vụ). <br/>');
                return;
            }
            if (InvalidNoiDungCuTheClaim.length > 0) {
                XFunction.RenderMessage('error', 'Vui lòng nhập đầy đủ thông tin nội dung tình huống cụ thể claim! Xem lại dòng ' + $.unique(InvalidNoiDungCuTheClaim).join(','));
                return false;
            }
            if (InvalidHuongDenBu.length > 0) {
                XFunction.RenderMessage('error', 'Vui lòng nhập đầy đủ thông tin shop đề xuất hướng đền bù! Xem lại dòng ' + $.unique(InvalidHuongDenBu).join(','));
                return false;
            }
            if (InvalidMaBillNhanHang.length > 0) {
                XFunction.RenderMessage('error', 'Vui lòng nhập đầy đủ thông tin mã vận đơn shop/ Kho nhận hàng! Xem lại dòng ' + $.unique(InvalidMaBillNhanHang).join(','));
                return false;
            }
            if (dataShop.length > 0) {
                XFunction.RenderMessage('error', 'Chưa chọn shop gửi. Xem lại dòng ' + $.unique(dataShop).join(',')); return;
            }
            //console.log(dataReturn); return;
            data.append("Details", JSON.stringify(dataReturn));
            data.append("DetailsLimited", JSON.stringify([]));
            data.append("Description", catagoryInfo.Description);
            data.append("TitleRequest", $('#Title').val());
            data.append("typeId", catagoryInfo.Id);

            data.append("TimeFutureFinish", $('#TimeFutureFinish').val());
            data.append("Cc", $('#Cc').val());
            data.append("sender", $('#sender').val());
            data.append("fileUpload", $('#fileUpload').val());
            data.append("dateFrom", $('#dateFrom').val());
            data.append("dateTo", $('#dateTo').val());
            //data.append("schedule", $('#schedule').val());
            data.append("timeSend", $('#timeSend').val());
            data.append("Message", $('#Message').val());
            //console.log(dataReturn); return;
            $('#myModalWatting').modal('show');
            $.ajax({
                async: false, //ChuongNT3 - 01/03/2019 - đổng bộ ajax
                type: "POST",
                url: "/Requests/CreateClaim",
                contentType: false,
                processData: false,
                data: data,
                success: function (result) {
                    var win = window.open('/Home', '_self');
                },
                error: function () {
                    $('#myModalWatting').modal('hide');
                    XFunction.RenderMessage('error', 'Dung lượng file upload quá lớn');
                    return;
                    //var win = window.open('/Home', '_self');
                }
            });

        });
    };
    function contruct_143() {
        $areaChiTiet.show(); $areaDowloadAndImport.hide();
        var dataSourceServiceName = [''];
        var dataSourceService = [];
        var dataShopFull = [];
        var dataShopName = [];

        $.get('/Requests/GetTranderService', function (respone) {
            if (respone !== '' && respone !== null && respone !== undefined && respone.length > 0) {
                dataSourceService = respone;
                $.each(respone, function (index, item) {
                    dataSourceServiceName.push(item.Name);
                });
            }
        });
        var dataHandsontable = [];
        function contructdata() {
            dataHandsontable.push({
                'ColHtml_1': '',
                'DataFiles_1': '',
                'ListNameFile_1': '',

                'ColHtml_2': '',
                'DataFiles_2': '',
                'ListNameFile_2': '',

                'ColHtml_3': '',
                'DataFiles_3': '',
                'ListNameFile_3': '',

                'ColHtml_4': '',
                'DataFiles_4': '',
                'ListNameFile_4': '',

                'ColHtml_5': '',
                'DataFiles_5': '',
                'ListNameFile_5': ''
            })
        }; contructdata();
        var dataTempFile = "";
        function readURL(input) {
            //console.log(input);
            //var reader = new FileReader();
            //console.log(input);
            //reader.onload = function (e) {
            //    //console.log(e.target.result);
            //    var win = window.open(e.target.result, '_blank');
            //    if (win) {
            //        win.focus();
            //    } else {
            //        alert('Please allow popups for this site');
            //    }
            //}
            //console.log(input.mozFullPath);
            //reader.readAsDataURL(input);
            var tmppath = URL.createObjectURL(input);
            var win = window.open(tmppath, '_blank');
            if (win) {
                win.focus();
            } else {
                alert('Please allow popups for this site');
            }
        }
        function endFile(name) {
            var extension = name.split('.').pop().toLowerCase();
            if ($.inArray(extension, ['jpg', 'png', 'gif', 'jpeg']) == -1) {
                return false;
            }
            else {
                return true;
            }
        }

        //▼	Edit - VietMXH - 09/09/2020 - Fix Claim NVC==================================================
        var f__ActionRendererUpload = function (instance, td, row, col, prop, value, cellProperties) {
            $(td).empty().append('');
            if (['button_1', 'button_2', 'button_3', 'button_4', 'button_5', 'button_6'].indexOf(prop.toString()) > -1) {
                var valid = instance.getDataAtRowProp(row, 'typeKn');
                var $button = '', $buttonX = '';
                if (!!valid) {
                    var l__ColHtml = '';
                    switch (prop) {
                        case 'button_1':
                            l__ColHtml = 'ColHtml_1';
                            break;
                        case 'button_2':
                            l__ColHtml = 'ColHtml_2';
                            break;
                        case 'button_3':
                            l__ColHtml = 'ColHtml_3';
                            break;
                        case 'button_4':
                            l__ColHtml = 'ColHtml_4';
                            break;
                        case 'button_5':
                            l__ColHtml = 'ColHtml_5';
                            break;
                        case 'button_6':
                            l__ColHtml = 'ColHtml_6';
                            break;
                        default:
                    }

                    $button = $('<i id="r' + row + '" data-value="' + row + '" class="fa fa-upload" style="color:green"></i>');
                    $button.click(function () {
                        var row = $(this).attr('data-value');
                        $('#uploadDetails').attr('data-value', row).attr('data-id', l__ColHtml);
                        $('#uploadDetails').val('');
                        $('#uploadDetails').trigger('click');
                    });
                    $buttonX = $('<i d="rx' + row + '" data-value="' + row + '" class="fa fa-times" style="color:red" title="Xóa hình"></i>');
                    $buttonX.click(function () {
                        var rowline = $(this).attr('data-value');
                        var rowCol = l__ColHtml;
                        $.each(dataHandsontable, function (index, item) {
                            if (rowline == index) {
                                var dataFiles = [], listHtml = [], lisDataFilesName = [];

                                switch (prop) {
                                    case 'button_1':
                                        item.DataFiles_1 = dataFiles;
                                        item.ColHtml_1 = listHtml.join(' <br> ');
                                        item.ListNameFile_1 = lisDataFilesName.join(',');
                                        break;
                                    case 'button_2':
                                        item.DataFiles_2 = dataFiles;
                                        item.ColHtml_2 = listHtml.join(' <br> ');
                                        item.ListNameFile_2 = lisDataFilesName.join(',');
                                        break;
                                    case 'button_3':
                                        item.DataFiles_3 = dataFiles;
                                        item.ColHtml_3 = listHtml.join(' <br> ');
                                        item.ListNameFile_3 = lisDataFilesName.join(',');
                                        break;
                                    case 'button_4':
                                        item.DataFiles_4 = dataFiles;
                                        item.ColHtml_4 = listHtml.join(' <br> ');
                                        item.ListNameFile_4 = lisDataFilesName.join(',');
                                        break;
                                    case 'button_5':
                                        item.DataFiles_5 = dataFiles;
                                        item.ColHtml_5 = listHtml.join(' <br> ');
                                        item.ListNameFile_5 = lisDataFilesName.join(',');
                                        break;
                                    case 'button_6':
                                        item.DataFiles_6 = dataFiles;
                                        item.ColHtml_6 = listHtml.join(' <br> ');
                                        item.ListNameFile_6 = lisDataFilesName.join(',');
                                        break;
                                    default:
                                }
                            }
                        });
                        hot.render();
                    });
                    if ($buttonX != '') {
                        $(td).empty().append($button).append(' ').append($buttonX);
                    }
                }
            }
        };
        //▲	Edit - VietMXH - 09/09/2020 - Fix Claim NVC==================================================

        $('#uploadDetails').on('change', function () {
            var rowline = $(this).attr('data-value');
            var rowCol = $(this).attr('data-id');
            var selectedFiles = $(this)[0].files;
            $.each(dataHandsontable, function (index, item) {
                if (rowline == index) {
                    var dataFiles = [];
                    var listHtml = [];
                    var lisDataFilesName = [];
                    $.each(selectedFiles, function (index, item) {
                        var d = new Date();
                        var n = d.getTime();
                        selectedFiles[index].nameNew = n.toString() + '_' + selectedFiles[index].name;

                        //console.log(selectedFiles[index], selectedFiles[index].name);

                        dataFiles.push(selectedFiles[index]);
                        lisDataFilesName.push(selectedFiles[index].nameNew);
                        var tmppath = URL.createObjectURL(selectedFiles[index]);
                        if (endFile(selectedFiles[index].nameNew)) {
                            listHtml.push('<a href="' + tmppath + '" target="_blank" class="renderlink" data-id="' + rowline + '" data-value="' + selectedFiles[index].nameNew + '" ><i class="fa fa-picture-o"></i> ' + selectedFiles[index].nameNew + '   </a>');
                        } else {
                            listHtml.push('<a href="' + tmppath + '" download="' + selectedFiles[index].nameNew + '" class="renderlink" data-id="' + rowline + '" data-value="' + selectedFiles[index].nameNew + '"  ><i class="fa fa-file-excel-o"></i> ' + selectedFiles[index].nameNew + '    </a>');
                        }
                    });
                    if (rowCol == 'ColHtml_1') {
                        item.DataFiles_1 = dataFiles;
                        item.ColHtml_1 = listHtml.join(' <br> ');
                        item.ListNameFile_1 = lisDataFilesName.join(',');
                    } else if (rowCol == 'ColHtml_2') {
                        item.DataFiles_2 = dataFiles;
                        item.ColHtml_2 = listHtml.join(' <br> ');
                        item.ListNameFile_2 = lisDataFilesName.join(',');
                    } else if (rowCol == 'ColHtml_3') {
                        item.DataFiles_3 = dataFiles;
                        item.ColHtml_3 = listHtml.join(' <br> ');
                        item.ListNameFile_3 = lisDataFilesName.join(',');
                    } else if (rowCol == 'ColHtml_4') {
                        item.DataFiles_4 = dataFiles;
                        item.ColHtml_4 = listHtml.join(' <br> ');
                        item.ListNameFile_4 = lisDataFilesName.join(',');
                    } else if (rowCol == 'ColHtml_5') {
                        item.DataFiles_5 = dataFiles;
                        item.ColHtml_5 = listHtml.join(' <br> ');
                        item.ListNameFile_5 = lisDataFilesName.join(',');
                    } else if (rowCol == 'ColHtml_6') {
                        item.DataFiles_6 = dataFiles;
                        item.ColHtml_6 = listHtml.join(' <br> ');
                        item.ListNameFile_6 = lisDataFilesName.join(',');
                    }
                }
            });
            hot.render();
            $(this).val('');
            //console.log(rowline, rowCol);
        });
        function strip_tags(input, allowed) {
            var tags = /<\/?([a-z][a-z0-9]*)\b[^>]*>/gi,
                commentsAndPhpTags = /<!--[\s\S]*?-->|<\?(?:php)?[\s\S]*?\?>/gi;

            // making sure the allowed arg is a string containing only tags in lowercase (<a><b><c>)
            allowed = (((allowed || "") + "").toLowerCase().match(/<[a-z][a-z0-9]*>/g) || []).join('');

            return input.replace(commentsAndPhpTags, '').replace(tags, function ($0, $1) {
                return allowed.indexOf('<' + $1.toLowerCase() + '>') > -1 ? $0 : '';
            });
        }
        function safeHtmlRenderer(instance, td, row, col, prop, value, cellProperties) {
            var escaped = Handsontable.helper.stringify(value);
            escaped = strip_tags(escaped, '<em><b><strong><a><big><i><br>'); //be sure you only allow certain HTML tags to avoid XSS threats (you should also remove unwanted HTML attributes)
            td.innerHTML = escaped;
            td.style.textAlign = 'left';
            return td;
        }
        $.get('/Requests/GetShopByRegion', { regionId: 0 }, function (data) {
            dataShopFull = data;
            $.each(dataShopFull, function (index, item) {
                dataShopName.push(item.WarehouseCode + '--' + item.WarehouseName);
            });
            var setting = function () {

                //▼	Edit - VietMXH - 09/09/2020 - Fix Claim NVC==================================================
                return {
                    //=================================Data=======
                    data: dataHandsontable,
                    //================================Cols=======
                    minSpareCols: 0,
                    allowInsertColumn: false,
                    allowRemoveColumn: false,
                    autoColumnSize: true,
                    autoWrapCol: true,
                    columnSorting: false,
                    copyColsLimit: 18,
                    currentColClassName: 'currentCol', //currentCol
                    fixedColumnsLeft: 0,
                    manualColumnMove: false,
                    manualColumnResize: true,
                    viewportColumnRenderingOffset: 18,
                    sortIndicator: true,
                    //================================Rows=======
                    allowInsertRow: true,
                    allowRemoveRow: true,
                    autoRowSize: true,
                    autoWrapRow: true,
                    copyRowsLimit: 1000,
                    currentRowClassName: 'currentRow',
                    fixedRowsTop: 0,
                    manualRowMove: false,
                    manualRowResize: true,
                    rowHeaders: true,
                    minSpareRows: 10,
                    //================================Oder=======
                    allowInvalid: false,
                    commentedCellClassName: 'htCommentCell',
                    comments: true,
                    contextMenu: true,
                    copyable: true,
                    customBorders: false,
                    debug: false,
                    disableVisualSelection: true,
                    enterBeginsEditingBoolean: true,
                    fillHandle: true,
                    outsideClickDeselects: true,
                    fragmentSelection: false,
                    groups: false,
                    invalidCellClassName: 'htInvalid',
                    mergeCells: false,
                    multiSelect: true,
                    noWordWrapClassName: 'htNoWrap',
                    placeholder: false,
                    placeholderCellClassName: 'htPlaceholder',
                    readOnlyCellClassName: 'htDimmed',
                    search: false,
                    trimWhitespace: true,
                    undo: true,
                    formulas: true,
                    wordWrap: true,
                    copyPaste: false,
                    //====================================Oder ==============================================
                    colHeaders: [
                        'Loại khiếu nại',
                        'Nhà vận chuyển',
                        'File ->', 'Hình vận đơn Đã đồng kiểm',
                        'File ->', 'File Biên bản làm việc',
                        'File ->', 'File thùng hàng nhận',
                        'File ->', 'Hình chụp hiện trạng',
                        'File ->', 'Hình hóa đơn nhập hàng',
                        'File ->', 'Hình Jobcard (Phiếu biên nhận Bảo hành/Dịch vụ)',
                        //'Paste Links ->', 'Links Camera',
                        'Thời gian chuyển hàng/nhận hàng',
                        'Tên Shop gửi hàng',
                        'Ghi chú'
                    ],
                    columns: [
                        { data: 'typeKn', type: 'dropdown', width: 150, source: ['', 'Hàng LCNB shop', 'Hàng Bảo hành'], className: 'htLeft' },
                        { data: "Transporters", type: 'dropdown', width: 150, source: dataSourceServiceName },

                        //▼	Edit - VietMXH - 09/09/2020 - Fix Claim NVC==================================================
                        { data: "button_1", renderer: f__ActionRendererUpload, readOnly: true },
                        { data: 'ColHtml_1', renderer: safeHtmlRenderer, readOnly: true, className: 'htLeft' },
                        { data: "button_2", renderer: f__ActionRendererUpload, readOnly: true },
                        { data: 'ColHtml_2', renderer: safeHtmlRenderer, className: 'htLeft', readOnly: true },
                        { data: "button_6", renderer: f__ActionRendererUpload, readOnly: true },
                        { data: 'ColHtml_6', renderer: safeHtmlRenderer, className: 'htLeft', readOnly: true },
                        { data: "button_3", renderer: f__ActionRendererUpload, readOnly: true },
                        { data: 'ColHtml_3', renderer: safeHtmlRenderer, className: 'htLeft', readOnly: true },
                        { data: "button_4", renderer: f__ActionRendererUpload, readOnly: true },
                        { data: 'ColHtml_4', renderer: safeHtmlRenderer, className: 'htLeft', readOnly: true },
                        { data: "button_5", renderer: f__ActionRendererUpload, readOnly: true },
                        { data: 'ColHtml_5', renderer: safeHtmlRenderer, className: 'htLeft', readOnly: true },
                        //▲	Edit - VietMXH - 09/09/2020 - Fix Claim NVC==================================================

                        //{ data: 'PastLink', type: 'text', className: 'htLeft', width: 200 },
                        //{
                        //    data: 'LinkView', type: 'text', className: 'htLeft',
                        //    renderer: function (instance, td, row, col, prop, value, cellProperties) {
                        //        var links = instance.getDataAtRowProp(row, 'Links');
                        //        var escaped = Handsontable.helper.stringify(value);
                        //        if (links == '' || links == null || links == undefined) {
                        //            escaped = '';
                        //        } else {
                        //            var listLink = links.split(',');
                        //            var listLinkView = [];
                        //            $.each(listLink, function (index, item) {
                        //                listLinkView.push('<a target="_blank" href="' + item + '">' + item + '</a>');
                        //            });
                        //            escaped = listLinkView.join('<br>')
                        //        }
                        //        escaped = strip_tags(escaped, '<em><b><strong><a><big><i><br>'); //be sure you only allow certain HTML tags to avoid XSS threats (you should also remove unwanted HTML attributes)
                        //        td.innerHTML = escaped;
                        //        td.style.textAlign = 'left';
                        //        return td;
                        //    }
                        //},
                        { data: 'ThoiGianChuyenHang', type: 'text', className: 'htLeft' },
                        { data: "Shops", type: 'autocomplete', source: dataShopName, strict: false, className: 'htLeft', width: 350 },
                        { data: 'note', type: 'text', width: 500, className: 'htLeft' },
                    ],
                    afterChange: function (changes, source) {
                        if (!changes || source == 'not') {
                            return;
                        }
                        var instance = this;
                        changes.forEach(function (change) {
                            var row = change[0];
                            var col = change[1];
                            var newValue = change[3];
                            var cellProperties, options;
                            if (col == 'PastLink') {
                                if (newValue == '' || newValue == null || newValue == undefined) {
                                    hot.setDataAtRowProp(row, 'Links', '', 'not');
                                } else {
                                    hot.setDataAtRowProp(row, 'Links', newValue, 'not');
                                }
                            }
                        });
                        instance.render();
                    },
                };
                //▲	Edit - VietMXH - 09/09/2020 - Fix Claim NVC==================================================

            };
            hot = new Handsontable(container, setting());
        });

        $btnSend.on('click', function () {
            var data = new FormData();

            var dataReturn = [];
            var dataAll = [];
            var dataCheck = [];
            dataAll = $.grep(hot.getData(), function (item, index) {
                return (item.typeKn !== null && item.typeKn !== '' && item.typeKn !== undefined)
                    || (item.Transporters !== null && item.Transporters !== '' && item.Transporters !== undefined);
            });

            if (dataAll.length == 0) {
                XFunction.RenderMessage('error', 'Dữ liệu chi tiết chưa đầy đủ! Vui lòng nhập đầy đủ chi tiết!'); return;
            }
            dataCheck = $.grep(hot.getData(), function (item, index) {
                return (item.typeKn !== null && item.typeKn !== '' && item.typeKn !== undefined)
                    && (item.Transporters !== null && item.Transporters !== '' && item.Transporters !== undefined);
            });

            if (dataCheck.length == 0) {
                XFunction.RenderMessage('error', 'Vui lòng nhập đầy đủ thông tin cột loại khiếu nại và nhà vận chuyển!'); return;
            }
            var dataShop = [];
            var dataInvlidLCNB = [];
            var dataInvalidBH = [];
            var dataInvalidRequ = [];
            var InvalidThoiGianChuyenHang = [];
            var requiredLCNB = ['ListNameFile_1', 'ListNameFile_2', 'ListNameFile_3', 'ListNameFile_4', 'ListNameFile_6'];
            var requiredBH = ['ListNameFile_1', 'ListNameFile_2', 'ListNameFile_3', 'ListNameFile_5', 'ListNameFile_6'];
            var requiredCol = ['typeKn', 'Transporters'];

            $.each(dataAll, function (index, item) {
                var shops = item.Shops;
                if (shops == '' || shops == null || shops == undefined) {
                    shops = '';
                }
                else {
                    var timshop = $.grep(dataShopFull, function (element, cout) {
                        return element.WarehouseCode + '--' + element.WarehouseName == shops;
                    });
                    if (timshop.length > 0) {
                        shops = timshop[0].WarehouseCode;
                    } else {
                        shops = '';
                    }
                }
                dataReturn.push({
                    row: index,
                    note: item.note == null || item.note == '' || item.note == undefined ? '' : item.note,
                    typeKn: item.typeKn,
                    Transporters: $.grep(dataSourceService, function (element, cout) {
                        return item.Transporters == element.Name;
                    })[0].Code,
                    ListNameFile_1: item.ListNameFile_1 === null || item.ListNameFile_1 === '' || item.ListNameFile_1 === undefined ? '' : item.ListNameFile_1,
                    ListNameFile_2: item.ListNameFile_2 === null || item.ListNameFile_2 === '' || item.ListNameFile_2 === undefined ? '' : item.ListNameFile_2,
                    ListNameFile_3: item.ListNameFile_3 === null || item.ListNameFile_3 === '' || item.ListNameFile_3 === undefined ? '' : item.ListNameFile_3,
                    ListNameFile_4: item.ListNameFile_4 === null || item.ListNameFile_4 === '' || item.ListNameFile_4 === undefined ? '' : item.ListNameFile_4,
                    ListNameFile_5: item.ListNameFile_5 === null || item.ListNameFile_5 === '' || item.ListNameFile_5 === undefined ? '' : item.ListNameFile_5,
                    ListNameFile_6: item.ListNameFile_6 === null || item.ListNameFile_6 === '' || item.ListNameFile_6 === undefined ? '' : item.ListNameFile_6,
                    Links: item.Links === null || item.Links === '' || item.Links === undefined ? '' : item.Links,
                    Shops: shops,
                    ThoiGianChuyenHang: item.ThoiGianChuyenHang == '' || item.ThoiGianChuyenHang == null || item.ThoiGianChuyenHang == undefined ? null : item.ThoiGianChuyenHang,

                });
                if (item.DataFiles_1 !== '' && item.DataFiles_1 !== null && item.DataFiles_1 !== undefined && item.DataFiles_1.length > 0) {
                    $.each(item.DataFiles_1, function (cout, element) {
                        data.append(element.nameNew, element);
                    });
                }
                if (item.DataFiles_2 !== '' && item.DataFiles_2 !== null && item.DataFiles_2 !== undefined && item.DataFiles_2.length > 0) {
                    $.each(item.DataFiles_2, function (cout, element) {
                        data.append(element.nameNew, element);
                    });
                }
                if (item.DataFiles_3 !== '' && item.DataFiles_3 !== null && item.DataFiles_3 !== undefined && item.DataFiles_3.length > 0) {
                    $.each(item.DataFiles_3, function (cout, element) {
                        data.append(element.nameNew, element);
                    });
                }
                if (item.DataFiles_4 !== '' && item.DataFiles_4 !== null && item.DataFiles_4 !== undefined && item.DataFiles_4.length > 0) {
                    $.each(item.DataFiles_4, function (cout, element) {
                        data.append(element.nameNew, element);
                    });
                }
                if (item.DataFiles_5 !== '' && item.DataFiles_5 !== null && item.DataFiles_5 !== undefined && item.DataFiles_5.length > 0) {
                    $.each(item.DataFiles_5, function (cout, element) {
                        data.append(element.nameNew, element);
                    });
                }
                if (item.DataFiles_6 !== '' && item.DataFiles_6 !== null && item.DataFiles_6 !== undefined && item.DataFiles_6.length > 0) {
                    $.each(item.DataFiles_6, function (cout, element) {
                        data.append(element.nameNew, element);
                    });
                }
                if (item.ThoiGianChuyenHang == '' || item.ThoiGianChuyenHang == null || item.ThoiGianChuyenHang == undefined) {
                    InvalidThoiGianChuyenHang.push(index + 1);
                }
                var checkRequid = true;
                $.each(requiredCol, function (cout, element) {
                    if (item[element] === null || item[element] === '' || item[element] === undefined) {
                        checkRequid = false;
                    }
                });
                if (checkRequid == false) {
                    dataInvalidRequ.push(index);
                }
                if (item.Shops == '' || item.Shops == null || item.Shops == undefined) {
                    dataShop.push(index + 1);
                }


                if (item.typeKn == 'Hàng LCNB shop') {
                    var checkLCNB = true;
                    $.each(requiredLCNB, function (cout, element) {
                        if (item[element] === null || item[element] === '' || item[element] === undefined) {
                            checkLCNB = false;
                        }
                    });
                    if (checkLCNB == false) {
                        dataInvlidLCNB.push(index);
                    }
                } else if (item.typeKn == 'Hàng Bảo hành') {
                    var checkBh = true;
                    $.each(requiredBH, function (cout, element) {
                        if (item[element] === null || item[element] === '' || item[element] === undefined) {
                            checkBh = false;
                        }
                    });
                    if (checkBh == false) {
                        dataInvalidBH.push(index);
                    }
                }
            });
            if (InvalidThoiGianChuyenHang.length > 0) {
                XFunction.RenderMessage('error', 'Vui lòng nhập đầy đủ thông tin cột thời gian chuyển hàng/nhận hàng!'); return;
            }

            if (dataInvalidRequ.length > 0) {
                XFunction.RenderMessage('error', 'Vui lòng nhập đầy đủ thông tin cột loại khiếu nại và nhà vận chuyển!'); return;
            }
            if (dataInvlidLCNB.length > 0) {
                XFunction.RenderMessage('error', ' Loại LCNB phải import đầy đủ dữ liệu vào : <br> ' +
                    'Hình vận đơn Đã đồng kiểm. <br/>' +
                    'File Biên bản làm việc. <br/>' +
                    'File thùng hàng nhận. <br/>' +
                    'Hình chụp hiện trạng. <br/>' +
                    'Hình hóa đơn nhập hàng. <br/>');
                return;
            }
            if (dataInvalidBH.length > 0) {
                XFunction.RenderMessage('error', 'Loại Bảo hành phải import đầy đủ dữ liệu vào : <br> ' +
                    'Hình vận đơn Đã đồng kiểm. <br/>' +
                    'File Biên bản làm việc. <br/>' +
                    'File thùng hàng nhận. <br/>' +
                    'Hình chụp hiện trạng. <br/>' +
                    'Hình Jobcard (Phiếu biên nhận Bảo hành/Dịch vụ). <br/>');
                return;
            }
            if (dataShop.length > 0) {
                XFunction.RenderMessage('error', 'Chưa chọn shop gửi. Xem lại dòng ' + $.unique(dataShop).join(',')); return;
            }

            data.append("Details", JSON.stringify(dataReturn));
            data.append("DetailsLimited", JSON.stringify([]));
            data.append("Description", catagoryInfo.Description);
            data.append("TitleRequest", $('#Title').val());
            data.append("typeId", catagoryInfo.Id);

            data.append("TimeFutureFinish", $('#TimeFutureFinish').val());
            data.append("Cc", $('#Cc').val());
            data.append("sender", $('#sender').val());
            data.append("fileUpload", $('#fileUpload').val());
            data.append("dateFrom", $('#dateFrom').val());
            data.append("dateTo", $('#dateTo').val());
            //data.append("schedule", $('#schedule').val());
            data.append("timeSend", $('#timeSend').val());
            data.append("Message", $('#Message').val());

            $('#myModalWatting').modal('show');

            $.ajax({
                async: false, //ChuongNT3 - 01/03/2019 - đổng bộ ajax
                type: "POST",
                url: "/Requests/CreateClaim",
                contentType: false,
                processData: false,
                data: data,
                success: function (result) {
                    var win = window.open('/Home', '_self');
                },
                error: function () {
                    $('#myModalWatting').modal('hide');
                    XFunction.RenderMessage('error', 'Dung lượng file upload quá lớn');
                    return;
                    //var win = window.open('/Home', '_self');
                }
            });

        });
    };
    function contruct_150() {
        $('head').append('<link href="/assets/plugins/magnificpopup/magnificpopup.css" rel="stylesheet" />');
        $('head').append('<script src="/assets/plugins/magnificpopup/magnificpopup.js"></script>');
        $('.zoom-gallery').magnificPopup({
            delegate: 'a',
            type: 'image',
            closeOnContentClick: false,
            closeBtnInside: false,
            mainClass: 'mfp-with-zoom mfp-img-mobile',
            //image: {
            //    verticalFit: true,
            //    titleSrc: function(item) {
            //        return item.el.attr('title') + ' &middot; <a class="image-source-link" href="'+item.el.attr('data-source')+'" target="_blank">image source</a>';
            //    }
            //},
            gallery: {
                enabled: true
            },
            zoom: {
                enabled: true,
                duration: 300, // don't foget to change the duration also in CSS
                opener: function (element) {
                    return element.find('img');
                }
            }
        });
        $areaChiTiet.show(); $areaDowloadAndImport.hide();
        var dataSourceServiceName = [''];
        var dataSourceService = [];
        var dataShopFull = [];
        var dataShopName = [];
        var dataHandsontable = [];
        var dataTempFile = "";
        function readURL(input) {
            var tmppath = URL.createObjectURL(input);
            var win = window.open(tmppath, '_blank');
            if (win) {
                win.focus();
            } else {
                alert('Please allow popups for this site');
            }
        }
        function endFile(name) {
            var extension = name.split('.').pop().toLowerCase();
            if ($.inArray(extension, ['jpg', 'png', 'gif', 'jpeg']) == -1) {
                return false;
            }
            else {
                return true;
            }
        }
        var actionRendererUpload_1 = function (instance, td, row, col, prop, value, cellProperties) {

            if (prop == 'button_1') {
                var valid = instance.getDataAtRowProp(row, 'Shop');
                var CameraCount = instance.getDataAtRowProp(row, 'NumberCamera');
                var $button = '';
                var $buttonX = '';
                if ((valid === null || valid === '' || valid === undefined) || (CameraCount === null || CameraCount === '' || valid === undefined)) {
                    $button = '';
                    $buttonX = '';
                } else {
                    $button = $('<i id="r' + row + '" data-value="' + row + '" class="fa fa-upload" style="color:green"></i>');
                    $button.click(function () {
                        var row = $(this).attr('data-value');
                        $('#uploadDetails').attr('data-value', row).attr('data-id', 'ColHtml_1');
                        $('#uploadDetails').val('');
                        $('#uploadDetails').trigger('click');
                    });
                    $buttonX = $('<i d="rx' + row + '" data-value="' + row + '" class="fa fa-times" style="color:red" title="Xóa hình"></i>');
                    $buttonX.click(function () {
                        var rowline = $(this).attr('data-value');
                        var rowCol = 'ColHtml_1';
                        $.each(dataHandsontable, function (index, item) {
                            if (rowline == index) {
                                var dataFiles = [];
                                var listHtml = [];
                                var lisDataFilesName = [];
                                item.DataFiles_1 = dataFiles;
                                item.ColHtml_1 = listHtml.join(' <br> ');
                                item.ListNameFile_1 = lisDataFilesName.join(',');
                            }
                        });
                        hot.render();
                    });
                }
                $buttonX != '' ?
                    $(td).empty().append($button).append(' ').append($buttonX) :
                    $(td).empty().append('');

            } else {
                $(td).empty().append('');
            }
        };
        $('#uploadDetails').on('change', function () {
            var rowline = $(this).attr('data-value');
            var rowCol = $(this).attr('data-id');
            var selectedFiles = $(this)[0].files;
            $.each(dataHandsontable, function (index, item) {
                if (rowline == index) {
                    var dataFiles = [];
                    var listHtml = [];
                    var lisDataFilesName = [];

                    $.each(selectedFiles, function (index, item) {
                        var extension = selectedFiles[index].name.split('.').pop().toLowerCase();
                        if ($.inArray(extension, ['jpg', 'png', 'gif', 'jpeg']) == -1) {

                            XFunction.RenderMessage('error', 'Hình ảnh không hợp lệ định dạng!'); return;
                        }
                        var d = new Date();
                        var n = d.getTime();
                        selectedFiles[index].nameNew = n.toString() + '_' + selectedFiles[index].name;

                        dataFiles.push(selectedFiles[index]);
                        lisDataFilesName.push(selectedFiles[index].nameNew);
                        var tmppath = URL.createObjectURL(selectedFiles[index]);
                        if (endFile(selectedFiles[index].nameNew)) {
                            listHtml.push(tmppath);
                        } else {
                            listHtml.push(tmppath);
                        }
                    });
                    if (rowCol == 'ColHtml_1') {
                        item.DataFiles_1 = dataFiles;
                        item.ColHtml_1 = listHtml.join('<br>');
                        item.ListNameFile_1 = lisDataFilesName.join(',');
                    }
                }
            });
            hot.render();
            $(this).val('');

        });
        function strip_tags(input, allowed) {
            var tags = /<\/?([a-z][a-z0-9]*)\b[^>]*>/gi,
                commentsAndPhpTags = /<!--[\s\S]*?-->|<\?(?:php)?[\s\S]*?\?>/gi;

            // making sure the allowed arg is a string containing only tags in lowercase (<a><b><c>)
            allowed = (((allowed || "") + "").toLowerCase().match(/<[a-z][a-z0-9]*>/g) || []).join('');

            return input.replace(commentsAndPhpTags, '').replace(tags, function ($0, $1) {
                return allowed.indexOf('<' + $1.toLowerCase() + '>') > -1 ? $0 : '';
            });
        }
        function safeHtmlRenderer(instance, td, row, col, prop, value, cellProperties) {
            if (prop == 'ColHtml_1') {
                var Images_1 = instance.getDataAtRowProp(row, 'ColHtml_1');
                var $button = ''
                if (Images_1 == '' || Images_1 == null || Images_1 == undefined) {
                    $button = '';
                } else {
                    var images = Images_1.toString().split('<br>');
                    var stringImage = '';
                    $.each(images, function (index1, item1) {
                        if (item1 === '' || item1 === undefined || item1 === null) {
                            item1 = '';
                        } else {
                            if ($.inArray(item1, ['jpg', 'png', 'jpeg', 'gif']) !== -1) {
                                stringImage += '<a href="' + item1 + '"><img width="30" height="30" src="' + item1 + '"></a> ';
                            } else if ($.inArray(item1, ['tar', 'zip', 'rar', '7z', 'iso']) !== -1) {
                                stringImage += '<a href="' + item1 + '"><img width="30" height="30" src="' + item1 + '"></a> ';
                            } else {
                                stringImage += '<a href="' + item1 + '"><img width="30" height="30" src="' + item1 + '"></a> ';
                            }
                        }
                    });
                    $button = stringImage;
                }
                $(td).empty().append($button);
            } else {
                $(td).empty().append('');
            }
            td.style.textAlign = 'left';
        };
        //---------- Lấy danh sách loại lỗi
        var ObjectErrorFull = [], ObjectErrorName = [];
        var GetCameraErrorList = function () {
            $.get('/Requests/GetCameraErrorList', function (data) {
                ObjectErrorFull = data;
                $.each(data, function (index, item) {
                    ObjectErrorName.push(item.Name);
                });
            });
        };
        GetCameraErrorList();
        $.get('/Requests/GetShopByRegion', { regionId: 0 }, function (data) {
            dataShopFull = data;
            $.each(dataShopFull, function (index, item) {
                dataShopName.push(item.WarehouseCode + '--' + item.WarehouseName);
            });

            //▼	Edit - VietMXH - 12/02/2020 - CL Camera==================================================
            var setting = function () {
                return {
                    //=================================Data=======
                    data: dataHandsontable,
                    //================================Cols=======
                    maxCols: 18,
                    minCols: 18,
                    startCols: 18,
                    minSpareCols: 0,
                    allowInsertColumn: false,
                    allowRemoveColumn: false,
                    autoColumnSize: true,
                    autoWrapCol: true,
                    columnSorting: false,
                    copyColsLimit: 18,
                    currentColClassName: 'currentCol', //currentCol
                    fixedColumnsLeft: 0,
                    manualColumnMove: false,
                    manualColumnResize: true,
                    viewportColumnRenderingOffset: 18,
                    sortIndicator: true,
                    //================================Rows=======
                    allowInsertRow: true,
                    allowRemoveRow: true,
                    autoRowSize: true,
                    autoWrapRow: true,
                    copyRowsLimit: 1000,
                    currentRowClassName: 'currentRow',
                    fixedRowsTop: 0,
                    manualRowMove: false,
                    manualRowResize: true,
                    rowHeaders: true,
                    minSpareRows: 10,
                    //================================Oder=======
                    allowInvalid: false,
                    stretchH: 'all',
                    commentedCellClassName: 'htCommentCell',
                    comments: true,
                    contextMenu: true,
                    copyable: true,
                    customBorders: false,
                    debug: false,
                    disableVisualSelection: true,
                    enterBeginsEditingBoolean: true,
                    fillHandle: true,
                    outsideClickDeselects: true,
                    fragmentSelection: false,
                    groups: false,
                    invalidCellClassName: 'htInvalid',
                    mergeCells: false,
                    multiSelect: true,
                    noWordWrapClassName: 'htNoWrap',
                    placeholder: false,
                    placeholderCellClassName: 'htPlaceholder',
                    readOnlyCellClassName: 'htDimmed',
                    search: false,
                    trimWhitespace: true,
                    undo: true,
                    formulas: true,
                    wordWrap: true,
                    copyPaste: false,
                    //====================================Oder ==============================================
                    colHeaders: [
                        'Shop', 'Số camera', 'Upload hình', 'Hình đã upload', 'Loại', 'Mô tả'
                    ],
                    columns: [
                        { data: 'Shop', type: 'autocomplete', source: dataShopName, className: 'htLeft', width: 300 },
                        { data: "NumberCamera", type: 'dropdown', source: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', 'Outdoor', 'Counting'], width: 150, className: 'htLeft' },
                        { data: "button_1", renderer: actionRendererUpload_1, readOnly: true },
                        { data: 'ColHtml_1', renderer: safeHtmlRenderer, readOnly: true, className: 'htLeft' },
                        { data: "TypeError", type: 'dropdown', source: ObjectErrorName, width: 200 },
                        { data: 'NoteError', type: 'text', className: 'htLeft' }
                    ],
                    afterChange: function (changes, source) {
                        if (!changes) {
                            return;
                        }
                        var instance = this;
                        changes.forEach(function (change) {
                            var row = change[0];
                            var col = change[1];
                            var OldValue = change[2];
                            var newValue = change[3];
                            var cellProperties, options;

                            if (col == 'Shop' && newValue !== '' && newValue !== null && newValue !== '') {
                                //-------------
                                var reportRecipients = hot.getDataAtCol(0);
                                var AA = $.grep(reportRecipients, function (value, number) {
                                    return value != '' && value != null && value != undefined;
                                });
                                var recipientsArray = AA.sort();
                                var reportRecipientsDuplicate = [];
                                for (var i = 0; i < recipientsArray.length - 1; i++) {
                                    if (recipientsArray[i + 1] != recipientsArray[i]) {
                                        reportRecipientsDuplicate.push([i]);
                                    }
                                }
                                if (reportRecipientsDuplicate.length >= 1) {
                                    hot.setDataAtCell(row, 0, OldValue, 'not');
                                    XFunction.RenderMessage('error', 'Chỉ được chọn cùng 1 shop!'); return;
                                }
                            }
                        });
                    },
                    beforeChange: function (changes, source) {
                        if (source == 'not') return;
                        for (i = 0; i < changes.length; i++) {
                            var row = changes[i][0], col = changes[i][1];
                            if (col === 'NumberCamera') {
                                var nameData = hot.getDataAtRowProp(row, 'Shop');
                                if (nameData == null || nameData == '' || nameData == undefined) {
                                    XFunction.RenderMessage('error', 'Vui lòng chọn shop trước thao tác!');
                                    return false;
                                }
                                return true;
                            }
                            if (col === 'TypeError') {
                                var nameData = hot.getDataAtRowProp(row, 'Shop');
                                if (nameData == null || nameData == '' || nameData == undefined) {
                                    XFunction.RenderMessage('error', 'Vui lòng chọn shop trước thao tác!');
                                    return false;
                                }
                                return true;
                            }
                            if (col === 'NoteError') {
                                var nameData = hot.getDataAtRowProp(row, 'Shop');
                                if (nameData == null || nameData == '' || nameData == undefined) {
                                    XFunction.RenderMessage('error', 'Vui lòng chọn shop trước thao tác!');
                                    return false;
                                }
                                return true;
                            }
                        }
                    },
                };
            };
            //▲	Edit - VietMXH - 12/02/2020 - CL Camera==================================================
            hot = new Handsontable(container, setting());
        });

        $btnSend.on('click', function () {
            var data = new FormData();
            var dataAll = [], dataOjbectFail = [];
            var dataReturn = [];
            var dataInvalidRequ = [];
            var requiredCol = ['Shop', 'NumberCamera', 'ColHtml_1', 'TypeError', 'NoteError'];
            dataAll = $.grep(hot.getData(), function (item, index) {
                return (item.Shop !== null && item.Shop !== '' && item.Shop !== undefined)
                    && (item.NumberCamera !== null && item.NumberCamera !== '' && item.NumberCamera !== undefined)
                    && (item.ColHtml_1 !== null && item.ColHtml_1 !== '' && item.ColHtml_1 !== undefined)
                    && (item.TypeError !== null && item.TypeError !== '' && item.TypeError !== undefined)
                    && (item.NoteError !== null && item.NoteError !== '' && item.NoteError !== undefined);
            });
            if (dataAll.length == 0) {
                XFunction.RenderMessage('error', 'Dữ liệu chi tiết chưa đầy đủ! Vui lòng nhập đầy đủ chi tiết!'); return;
            }
            $.each(hot.getData(), function (index, item) {
                if (item.Shop !== null && item.Shop !== '' && item.Shop !== undefined
                    && ((item.NumberCamera == null || item.NumberCamera == '' || item.NumberCamera == undefined)
                        || (item.ColHtml_1 == null || item.ColHtml_1 == '' || item.ColHtml_1 == undefined)
                        || (item.TypeError == null || item.TypeError == '' || item.TypeError == undefined)
                        || (item.NoteError == null || item.NoteError == '' || item.NoteError == undefined))
                ) {
                    dataOjbectFail.push(index);
                }
            });
            if (dataOjbectFail.length > 0) {
                XFunction.RenderMessage('error', 'Dữ liệu chi tiết chưa đầy đủ! Vui lòng nhập đầy đủ chi tiết!'); return;
            }
            var dataShop = [], dataCamera = [], dataImages = [], dataLoaiLoi = [];
            var ShopTitle = "";
            $.each(dataAll, function (index, item) {

                var shops = item.Shop;
                if (shops == '' || shops == null || shops == undefined) {
                    dataShop.push(index + 1);
                }
                else {
                    var timshop = $.grep(dataShopFull, function (element, cout) {
                        return element.WarehouseCode + '--' + element.WarehouseName == shops;
                    });
                    if (timshop.length > 0) {
                        shops = timshop[0].WarehouseCode;
                        ShopTitle = timshop[0].WarehouseName;
                    } else {
                        dataShop.push(index + 1);
                    }
                }
                //--------- Check số camera
                if ($.inArray(['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', 'Outdoor', 'Counting'], item.NumberCamera) != -1) {
                    dataCamera.push(index + 1);
                }
                //---------- Check ảnh
                if (item.ColHtml_1 == '' || item.ColHtml_1 == null || item.ColHtml_1 == undefined) {
                    dataImages.push(index + 1);
                }
                //---------- Check loại lỗi
                var TypeError = item.TypeError;
                if (TypeError == '' || TypeError == null || TypeError == undefined) {
                    dataLoaiLoi.push(index + 1);
                }
                else {
                    var TypeErrorName = $.grep(ObjectErrorFull, function (element, cout) {
                        return element.Name == TypeError;
                    });
                    if (TypeErrorName.length > 0) {
                        TypeError = TypeErrorName[0].Code;
                    } else {
                        dataLoaiLoi.push(index + 1);
                    }
                }
                dataReturn.push({
                    row: index,
                    NumberCamera: item.NumberCamera,
                    note: item.NoteError == null || item.NoteError == '' || item.NoteError == undefined ? '' : item.NoteError,
                    ListNameFile_1: item.ListNameFile_1 === null || item.ListNameFile_1 === '' || item.ListNameFile_1 === undefined ? '' : item.ListNameFile_1,
                    Shops: shops,
                    TypeError: TypeError
                });
                if (item.DataFiles_1 !== '' && item.DataFiles_1 !== null && item.DataFiles_1 !== undefined && item.DataFiles_1.length > 0) {
                    $.each(item.DataFiles_1, function (cout, element) {
                        data.append(element.nameNew, element);
                    });
                }
                var checkRequid = true;
                $.each(requiredCol, function (cout, element) {
                    if (item[element] === null || item[element] === '' || item[element] === undefined) {
                        checkRequid = false;
                    }
                });
                if (checkRequid == false) {
                    dataInvalidRequ.push(index);
                }
            });
            if (dataShop.length > 0) {
                XFunction.RenderMessage('error', 'Shop không được rỗng hoặc không hợp lệ! Xem lại dòng ' + dataShop.join(',')); return;
            }
            if (dataCamera.length > 0) {
                XFunction.RenderMessage('error', 'Số lượng camera không hợp lệ! Xem lại dòng ' + dataCamera.join(',')); return;
            }
            if (dataImages.length > 0) {
                XFunction.RenderMessage('error', 'Hình ảnh camera không được rỗng! Xem lại dòng ' + dataImages.join(',')); return;
            }
            if (dataLoaiLoi.length > 0) {
                XFunction.RenderMessage('error', 'Loại lỗi không hợp lệ! Xem lại dòng ' + dataLoaiLoi.join(',')); return;
            }
            if (dataInvalidRequ.length > 0) {
                XFunction.RenderMessage('error', 'Vui lòng nhập đầy đủ thông tin trên lưới!'); return;
            }

            data.append("Details", JSON.stringify(dataReturn));
            data.append("DetailsLimited", JSON.stringify([]));
            data.append("Description", catagoryInfo.Description);

            var categories = $('#Title').val().split('-')[0];
            var date = $('#Title').val().split('-')[1];

            data.append("TitleRequest", categories + '- ' + ShopTitle + ' -' + date);
            data.append("typeId", catagoryInfo.Id);

            data.append("TimeFutureFinish", $('#TimeFutureFinish').val());
            data.append("Cc", $('#Cc').val());
            data.append("sender", $('#sender').val());
            data.append("fileUpload", $('#fileUpload').val());
            data.append("dateFrom", $('#dateFrom').val());
            data.append("dateTo", $('#dateTo').val());
            //data.append("schedule", $('#schedule').val());
            data.append("timeSend", $('#timeSend').val());
            data.append("Message", $('.note-editable').text());
            $('#myModalWatting').modal('show');

            $.ajax({
                type: "POST",
                url: "/Requests/CreateCameraMonitoring",
                contentType: false,
                processData: false,
                data: data,
                success: function (result) {
                    var win = window.open('/Home', '_self');
                },
                error: function () {
                    $('#myModalWatting').modal('hide');
                    XFunction.RenderMessage('error', 'Dung lượng file upload quá lớn');
                    return;
                    //var win = window.open('/Home', '_self');
                }
            });

        });
    };
    function contruct_152() {
        $('.compose-message').hide();
        $('#detail').show();
        $('#sum-total').hide();  // not support dowload file
        $('#handsontableEx').css('overflow', 'hidden');
        $areaDowloadAndImport.show();
        var data_GroupProduct = [], data_GroupProductName = [];//▼ Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
        $.get('/Requests/GetDevices', {
            type: 23
        }, function (data) {
            dataProduct_HcCreate = data;
            $.each(data, function (index, item) {
                if (
                    //item.ItemId == 301 || item.ItemId == 302 || item.ItemId == 303 || item.ItemId == 304 || item.ItemId == 309 || item.ItemId == 771 || item.ItemId == 772|| item.ItemId == 862 //Eit - ThuongNM2 - 05.07.2018 Thêm sản phẩm 862 - Nón tai bèo
                    item.ItemId == 299 || item.ItemId == 301 || item.ItemId == 303 || item.ItemId == 304 || item.ItemId == 792 || item.ItemId == 926 || item.ItemId == 862  // LuanNT44-10/10/2019-152-note: Thuytv4 yc update lại các mã sp cần load --update 17/10/2019
                    ) {
                    arrNameProduct_HcCreate.push(item.ItemName);
                }
            });
        });

        $.get('/Requests/GetShopByRegion', {
            regionId: 0
        }, function (data) {
            dataDept_HcCreate = data;
            $.each(data, function (index, item) {
                arrNameShopDept.push(item.WarehouseCode + '--' + item.WarehouseCodeB1 + '--' + item.WarehouseName);
            });
            //Edit - NgoanHT - 08/01/2018 - loại 152 - đưa hàm vào trong hàm cha
            $.post('/Requests/Get_OrganizationHierachiesAddress', null, function (data) { //NgoanHT - 25/10/2017 - 152 - Sửa
                if (data !== null && data !== '' && data !== undefined) //NgoanHT - 25/10/2017 - 152 - Thêm
                {
                    $.each(data, function (index, item) {
                        dataDept_HcCreate.push({ WarehouseCode: item.OrganizationHierachyCode, WarehouseCodeB1: item.OrganizationHierachyCode, WarehouseName: item.OrganizationHierachyName }) //NgoanHT - 25/10/2017 - 152 - Thêm - L2
                        arrNameShopDept.push(item.OrganizationHierachyCode + '--' + item.OrganizationHierachyCode + '--' + item.OrganizationHierachyName)
                    });
                }  //NgoanHT - 25/10/2017 - 152 - Thêm
            });
        });
        //Edit - NgoanHT - 08/01/2018 - loại 152 - đưa hàm vào trong hàm cha
        $.get('/Requests/GetLimitedValue', { type: 23 }, function (data) { dataLimitedHcCreate = data; });
        //▼ Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
        $.get('/Requests/GroupProduct_Get', function (data) {
            data_GroupProduct = data;
            if (data.length > 0) {
                $.each(data, function (index, item) {
                    data_GroupProductName.push(item.MaNhom + '--' + item.TenNhom);
                });
            };
        });
        //▼ Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
        $.ajax({
            url: "/Requests/GetAllInventoryProductHC",
            type: "get",
            async: false,
            success: function (respon) {
                dataInventoryHC = respon;
            }
        });
        //=========== Load lưới
        var setting = function () {
            return {
                data: dataHcCreateHandsontable,
                // minCols: 12,
                // startCols: 9,
                minSpareCols: 0,
                allowInsertColumn: false,
                allowRemoveColumn: false,
                autoColumnSize: true,
                autoWrapCol: true,
                columnSorting: false,
                // colWidths: [300, 270, 100],
                // copyColsLimit: 9,
                currentColClassName: 'currentCol', //currentCol
                fixedColumnsLeft: 0,
                manualColumnMove: false,
                manualColumnResize: true,
                // viewportColumnRenderingOffset: 9,
                sortIndicator: true,
                //================================Rows=======
                allowInsertRow: true,
                allowRemoveRow: true,
                autoRowSize: true,
                autoWrapRow: true,
                copyRowsLimit: 1000,
                currentRowClassName: 'currentRow',
                fixedRowsTop: 0,
                manualRowMove: false,
                manualRowResize: true,
                rowHeaders: true,
                minSpareRows: 10,
                startRows: 10,
                //viewportRowRenderingOffset : 'auto',
                //maxRows: dataMkoMkoHandsontable+1,
                //minRows: dataMkoMkoHandsontable+1,
                //================================Oder=======
                allowInvalid: false,
                stretchH: 'all',
                commentedCellClassName: 'htCommentCell',
                comments: true,
                contextMenu: true,
                copyable: true,
                customBorders: false,
                debug: false,
                disableVisualSelection: true,
                enterBeginsEditingBoolean: true,
                fillHandle: true,
                outsideClickDeselects: true,
                fragmentSelection: false,
                groups: false,
                invalidCellClassName: 'htInvalid',
                mergeCells: false,
                multiSelect: true,
                noWordWrapClassName: 'htNoWrap',
                placeholder: false,
                placeholderCellClassName: 'htPlaceholder',
                readOnlyCellClassName: 'htDimmed',
                search: false,
                trimWhitespace: true,
                undo: true,
                formulas: true,
                wordWrap: true,
                //▼ Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                colHeaders: ['Tên shop nhận hàng', 'Tên nhóm sản phẩm', 'Tên mặt hàng', 'Nhóm hàng', "Số lượng tồn kho", 'Đơn vị tính', 'Đơn giá', 'SL áo size S', 'SL áo size M'
                    , 'SL áo size L', 'SL áo size XL', 'SL áo size XXL', 'Thành tiền', 'Ghi chú'
                ],
                columns: [
                    { data: 'Shop', type: 'autocomplete', className: 'htCenter', source: arrNameShopDept, width: 400 },
                    { data: "GroupProduct", type: 'autocomplete', source: data_GroupProductName, strict: false, className: 'htLeft', width: 300 },//▼Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                    { data: 'ItemName', type: 'autocomplete', className: 'htCenter', source: arrNameProduct_HcCreate, width: 400 },
                    { data: 'GroupName', type: 'text', className: 'htCenter', readOnly: 'true' },
                    { data: "InventoryNumber", readOnly: true, className: 'htLeft', type: 'numeric', format: '0,0' },
                    { data: 'Unit', type: 'text', className: 'htCenter', readOnly: 'true' },
                    { data: "Price", type: 'numeric', format: '0,0', readOnly: true },
                    { data: 'QuantytiSize_S', type: 'numeric', className: 'htCenter', format: '0,0' },
                    { data: 'QuantytiSize_M', type: 'numeric', className: 'htCenter', format: '0,0' },
                    { data: 'QuantytiSize_L', type: 'numeric', className: 'htCenter', format: '0,0' },
                    { data: 'QuantytiSize_XL', type: 'numeric', className: 'htCenter', format: '0,0' },
                    {
                        data: 'QuantytiSize_XXL', type: 'numeric', className: 'htCenter', format: '0,0',
                        renderer: function (instance, td, row, col, prop, value) {
                            if (col === 11 && row === dataHcCreateHandsontable.length - 1) {//▼Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                                td.style.fontWeight = 'bold';
                                td.style.textAlign = 'right';
                                td.style.color = 'green';
                                value = 'Tổng tiền:';
                            }
                            Handsontable.NumericRenderer.apply(this, arguments);
                        }, width: 90,
                    },
                    {
                        data: 'SumPrice', type: 'text', className: 'htCenter', readOnly: 'true', format: '0,0',
                        renderer: function (instance, td, row, col, prop, value) {
                            if (col === 12 && row === dataHcCreateHandsontable.length - 1) {//▼Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                                td.style.fontWeight = 'bold';
                                td.style.color = 'green';
                                sum = 0;
                                $.each(dataHcCreateHandsontable, function (index, item) {
                                    if (item.SumPrice !== "" && item.SumPrice !== undefined && item.SumPrice !== null && !isNaN(item.SumPrice)) {
                                        sum += parseInt(item.SumPrice);
                                    } else {
                                        sum += 0;
                                    }
                                });
                                value = sum;
                            }
                            Handsontable.NumericRenderer.apply(this, arguments);
                        }
                    },
                    { data: 'Note', type: 'text', className: 'htCenter' }
                ],
                beforeChange: function (changes, source) {
                    if (source === 'not')
                        return;
                    changes.forEach(function (change) {
                        var row = change[0], column = change[1], newValue = change[3];
                        if (column == 'Note') {
                            var thietbi = hot.getDataAtCell(row, 2);//▼Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                            if (thietbi !== "" && thietbi !== undefined && thietbi !== null) {
                                return true;
                            } else {
                                return false;
                            }
                        };
                    });
                },
                afterChange: function (changes, source) {
                    if (!changes)
                        return;
                    var instance = this;//▼Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                    changes.forEach(function (change) {
                        var row = change[0], colunm = change[1], newVal = change[3];
                        var cellProperties, options;
                        //▼Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                        if (colunm == "GroupProduct") {
                            if (newVal != '' && newVal != null && newVal != undefined) {
                                var ItemArr = $.grep(dataProduct_HcCreate, function (item, index) {
                                    return (item.MaNhomSP + '--' + item.TenNhomSP) == newVal;
                                });
                                if (ItemArr.length > 0) {
                                    var ItemArrName = [];
                                    $.each(ItemArr, function (index, item) {
                                        ItemArrName.push(item.ItemName);
                                    });
                                    if (ItemArrName.length > 0) {
                                        cellProperties = instance.getCellMeta(row, 2);
                                        cellProperties.source = ItemArrName;
                                    }
                                    else {
                                        cellProperties = instance.getCellMeta(row, 2);
                                        cellProperties.source = [];
                                        hot.setDataAtRowProp(row, 'GroupName', '', 'not');
                                        hot.setDataAtRowProp(row, 'InventoryNumber', '', 'not');
                                        hot.setDataAtRowProp(row, 'Unit', '', 'not');
                                        hot.setDataAtRowProp(row, 'Price', '', 'not');
                                        hot.setDataAtRowProp(row, 'QuantytiSize_S', '', 'not');
                                        hot.setDataAtRowProp(row, 'QuantytiSize_M', '', 'not');
                                        hot.setDataAtRowProp(row, 'QuantytiSize_L', '', 'not');
                                        hot.setDataAtRowProp(row, 'QuantytiSize_XL', '', 'not');
                                        hot.setDataAtRowProp(row, 'QuantytiSize_XXL', '', 'not');
                                        hot.setDataAtRowProp(row, 'SumPrice', '', 'not');
                                        hot.setDataAtRowProp(row, 'Note', '', 'not');
                                    }
                                }
                                else {
                                    cellProperties = instance.getCellMeta(row, 2);
                                    cellProperties.source = [];
                                    hot.setDataAtRowProp(row, 'GroupName', '', 'not');
                                    hot.setDataAtRowProp(row, 'InventoryNumber', '', 'not');
                                    hot.setDataAtRowProp(row, 'Unit', '', 'not');
                                    hot.setDataAtRowProp(row, 'Price', '', 'not');
                                    hot.setDataAtRowProp(row, 'QuantytiSize_S', '', 'not');
                                    hot.setDataAtRowProp(row, 'QuantytiSize_M', '', 'not');
                                    hot.setDataAtRowProp(row, 'QuantytiSize_L', '', 'not');
                                    hot.setDataAtRowProp(row, 'QuantytiSize_XL', '', 'not');
                                    hot.setDataAtRowProp(row, 'QuantytiSize_XXL', '', 'not');
                                    hot.setDataAtRowProp(row, 'SumPrice', '', 'not');
                                    hot.setDataAtRowProp(row, 'Note', '', 'not');
                                };
                            };
                        };
                        //▲Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính

                        if (colunm == 'ItemName' && newVal != '' && newVal != undefined && newVal != null) {
                            var ShopName = hot.getDataAtRowProp(row, 'Shop');
                            if (ShopName == '' || ShopName == undefined || ShopName == null) {
                                XFunction.RenderMessage('error', 'Chọn shop trước khi chọn sản phẩm!');
                                hot.setDataAtRowProp(row, 'ItemName', '', 'not');
                                return false;
                            };
                            var datas = $.grep(hot.getData(), function (value, posi) {
                                return value.Shop != undefined && value.Shop != null && value.Shop != ''
                                    && value.Shop == ShopName && value.ItemName == newVal
                            });
                            if (datas.length > 1) {
                                XFunction.RenderMessage('error', 'Mặt hàng [' + newVal + '] cho shop [' + ShopName + '] đã đặt trên lưới trước đó. Vui lòng chọn mặt hàng khác!');
                                hot.setDataAtRowProp(row, 'ItemName', '', 'not');
                                hot.setDataAtRowProp(row, 'GroupName', '', 'not');
                                hot.setDataAtRowProp(row, 'InventoryNumber', '', 'not');
                                hot.setDataAtRowProp(row, 'Unit', '', 'not');
                                hot.setDataAtRowProp(row, 'Price', '', 'not');
                                hot.setDataAtRowProp(row, 'QuantytiSize_S', '', 'not');
                                hot.setDataAtRowProp(row, 'QuantytiSize_M', '', 'not');
                                hot.setDataAtRowProp(row, 'QuantytiSize_L', '', 'not');
                                hot.setDataAtRowProp(row, 'QuantytiSize_XL', '', 'not');
                                hot.setDataAtRowProp(row, 'QuantytiSize_XXL', '', 'not');
                                hot.setDataAtRowProp(row, 'SumPrice', '', 'not');
                                hot.setDataAtRowProp(row, 'Note', '', 'not');
                                return false;
                            } else {
                                var Wa = $.grep(dataDept_HcCreate, function (value, number) {
                                    return (value.WarehouseCode + '--' + value.WarehouseCodeB1 + '--' + value.WarehouseName) == ShopName;
                                });
                                var MaShop = [];
                                if (Wa.length > 0) {
                                    MaShop = Wa[0].WarehouseCodeB1;
                                }

                                var timthietbi = $.grep(dataProduct_HcCreate, function (item, index) {
                                    return item.ItemName === newVal;
                                });
                                if (timthietbi != null && timthietbi != undefined && timthietbi != '') {
                                    var Soluongtonkho = $.grep(dataInventoryHC, function (value, number) {
                                        return value.ShopCode == MaShop && value.MaSP == timthietbi[0].ItemCode;
                                    });
                                    if (Soluongtonkho.length > 0) {
                                        hot.setDataAtRowProp(row, 'InventoryNumber', Soluongtonkho[0].SL, 'not');
                                    }
                                    else {
                                        hot.setDataAtRowProp(row, 'InventoryNumber', 0, 'not');
                                    }

                                    hot.setDataAtRowProp(row, 'GroupName', timthietbi[0].GroupName, 'not');
                                    hot.setDataAtRowProp(row, 'Unit', timthietbi[0].Unit, 'not');
                                    hot.setDataAtRowProp(row, 'Price', timthietbi[0].Price, 'not');
                                    hot.setDataAtRowProp(row, 'QuantytiSize_S', 0, 'not');
                                    hot.setDataAtRowProp(row, 'QuantytiSize_M', 0, 'not');
                                    hot.setDataAtRowProp(row, 'QuantytiSize_L', 0, 'not');
                                    hot.setDataAtRowProp(row, 'QuantytiSize_XL', 0, 'not');
                                    hot.setDataAtRowProp(row, 'QuantytiSize_XXL', 0, 'not');
                                    hot.setDataAtRowProp(row, 'SumPrice', 0, 'not');
                                    //▼Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                                    var group_Item = hot.getDataAtRowProp(row, 'GroupProduct');
                                    var dataNhomSanPham = $.grep(data_GroupProduct, function (item, index) {
                                        return timthietbi[0].MaNhomSP == item.MaNhom;
                                    });
                                    console.log(dataNhomSanPham.length > 0 && (group_Item === null || group_Item === '' || group_Item === undefined));
                                    if (dataNhomSanPham.length > 0 && (group_Item === null || group_Item === '' || group_Item === undefined)) {
                                        hot.setDataAtRowProp(row, 'GroupProduct', (dataNhomSanPham[0].MaNhom + '--' + dataNhomSanPham[0].TenNhom), 'not');
                                    }
                                    else {
                                        hot.setDataAtRowProp(row, 'GroupProduct', group_Item, 'not');
                                    };
                                    //▼Add - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                                    return true;
                                } else {
                                    return false;
                                }
                            };
                        }
                        if (colunm == 'ItemName' && (newVal == '' || newVal != undefined || newVal != null)) {
                            hot.setDataAtRowProp(row, 'GroupName', '', 'not');
                            hot.setDataAtRowProp(row, 'InventoryNumber', '', 'not');
                            hot.setDataAtRowProp(row, 'Unit', '', 'not');
                            hot.setDataAtRowProp(row, 'Price', '', 'not');
                            hot.setDataAtRowProp(row, 'QuantytiSize_S', '', 'not');
                            hot.setDataAtRowProp(row, 'QuantytiSize_M', '', 'not');
                            hot.setDataAtRowProp(row, 'QuantytiSize_L', '', 'not');
                            hot.setDataAtRowProp(row, 'QuantytiSize_XL', '', 'not');
                            hot.setDataAtRowProp(row, 'QuantytiSize_XXL', '', 'not');
                            hot.setDataAtRowProp(row, 'SumPrice', '', 'not');
                            hot.setDataAtRowProp(row, 'Note', '', 'not');
                        }

                        if (colunm === 'QuantytiSize_S' || colunm === 'QuantytiSize_M' || colunm === 'QuantytiSize_L'
                            || colunm === 'QuantytiSize_XL' || colunm === 'QuantytiSize_XXL') {
                            //▼  - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                            var thiet_bi = hot.getDataAtCell(row, 2);
                            if (thiet_bi != undefined && thiet_bi != null && thiet_bi != '') {
                                var a_S = Number(hot.getDataAtCell(row, 7)),
                                    a_M = Number(hot.getDataAtCell(row, 8)),
                                    a_L = Number(hot.getDataAtCell(row, 9)),
                                    a_XL = Number(hot.getDataAtCell(row, 10)),
                                    a_XXL = Number(hot.getDataAtCell(row, 11)),
                                    price = Number(hot.getDataAtCell(row, 6)),
                                    //▼  - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                                    sum_price;
                                //=== Thiết lập giá trị mặc đinh cho các cột số lượng và giá tiền
                                if (a_S === '' || a_S === undefined || a_S === null || isNaN(a_S)) {
                                    a_S = 0;
                                    hot.setDataAtCell(row, 7, 0, 'not')//▼  - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                                };
                                if (a_M === '' || a_M === undefined || a_M === null || isNaN(a_M)) {
                                    a_M = 0;
                                    hot.setDataAtCell(row, 8, 0, 'not')//▼  - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                                }
                                if (a_L === '' || a_L === undefined || a_L === null || isNaN(a_L)) {
                                    a_L = 0;
                                    hot.setDataAtCell(row, 9, 0, 'not')//▼  - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                                }
                                if (a_XL === '' || a_XL === undefined || a_XL === null || isNaN(a_XL)) {
                                    a_XL = 0;
                                    hot.setDataAtCell(row, 10, 0, 'not')//▼  - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                                }
                                if (a_XXL === '' || a_XXL === undefined || a_XXL === null || isNaN(a_XXL)) {
                                    a_XXL = 0;
                                    hot.setDataAtCell(row, 10, 0, 'not')
                                }
                                if (price === '' || price === undefined || price === null || isNaN(price)) {
                                    price = 0;
                                    hot.setDataAtCell(row, 6, 0, 'not')//▼  - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                                }
                                //====
                                sum_price = (a_S + a_M + a_L + a_XL + a_XXL) * price;

                                if (sum_price !== '' && sum_price !== null && sum_price !== undefined && !isNaN(sum_price))
                                    hot.setDataAtCell(row, 12, sum_price, 'not');//▼  - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                                else
                                    hot.setDataAtCell(row, 12, 0, 'not');//▼  - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                            } else {
                                return false;
                            };
                        };
                        if (colunm == 'Shop' && (newVal == '' || newVal == undefined || newVal == null)) {
                            hot.setDataAtRowProp(row, 'ItemName', '', 'not');
                            hot.setDataAtRowProp(row, 'GroupName', '', 'not');
                            hot.setDataAtRowProp(row, 'InventoryNumber', '', 'not');
                            hot.setDataAtRowProp(row, 'Unit', '', 'not');
                            hot.setDataAtRowProp(row, 'Price', '', 'not');
                            hot.setDataAtRowProp(row, 'QuantytiSize_S', '', 'not');
                            hot.setDataAtRowProp(row, 'QuantytiSize_M', '', 'not');
                            hot.setDataAtRowProp(row, 'QuantytiSize_L', '', 'not');
                            hot.setDataAtRowProp(row, 'QuantytiSize_XL', '', 'not');
                            hot.setDataAtRowProp(row, 'QuantytiSize_XXL', '', 'not');
                            hot.setDataAtRowProp(row, 'SumPrice', '', 'not');
                            hot.setDataAtRowProp(row, 'Note', '', 'not');
                        };
                    });
                }
            };
        };
        hot = new Handsontable(container, setting());

        //=========== Import file excel
        function contructExecl152() {
            var X = XLSX;
            function fixdata(data) {
                var o = "", l = 0, w = 10240;
                for (; l < data.byteLength / w; ++l) o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w, l * w + w)));
                o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w)));
                return o;
            }
            function to_json(workbook) {
                var result = {};
                workbook.SheetNames.forEach(function (sheetName) {
                    var roa = X.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);
                    if (roa.length > 0) {
                        result[sheetName] = roa;
                    }
                });
                return result;
            }
            $('#FileSupport').change(function (event) {
                var fileValid = false;
                fileValid = Validater.endFile($('#FileSupport').val());
                if (fileValid) {
                    var files = event.target.files;
                    var f = files[0];
                    {
                        var reader = new FileReader();
                        var name = f.name;
                        reader.onload = function (e) {
                            var data = e.target.result;
                            var arr = fixdata(data);
                            wb = X.read(btoa(arr), { type: 'base64' });
                            var wb;
                            var output = to_json(wb);
                            var dataH = [];
                            if (output.Sheet_Import !== null && output.Sheet_Import !== '' && output.Sheet_Import !== undefined) {
                                var dataHcCreate = [];
                                // tao du lieu day du
                                $.each(output.Sheet_Import, function (index, item) {
                                    dataHcCreate.push({
                                        'Shop': item["Mã Shop B1"],
                                        'ItemID': item["Mã hàng"],
                                        'Quantity_S': ($.isNumeric(item['Số lượng áo size S']) == true || item['Số lượng áo size S'] > 0) ? item['Số lượng áo size S'] : 0,
                                        'Quantity_M': ($.isNumeric(item['Số lượng áo size M']) == true || item['Số lượng áo size M'] > 0) ? item['Số lượng áo size M'] : 0,
                                        'Quantity_L': ($.isNumeric(item['Số lượng áo size L']) == true || item['Số lượng áo size L'] > 0) ? item['Số lượng áo size L'] : 0,
                                        'Quantity_XL': ($.isNumeric(item['Số lượng áo size XL']) == true || item['Số lượng áo size XL'] > 0) ? item['Số lượng áo size XL'] : 0,
                                        'Quantity_XXL': ($.isNumeric(item['Số lượng áo size XXL']) == true || item['Số lượng áo size XXL'] > 0) ? item['Số lượng áo size XXL'] : 0,
                                        'Note': item['Ghi chú'],
                                    });
                                });
                                //kiem tra nhap day du thong tin
                                var colnameRe = ["Shop", "ItemID"];
                                var dataInvalidRe = [];
                                var dataInvalidShopCode = [];
                                var dataShopAndItemInvalid = [];
                                var dataProductInvalid = [];
                                var dataProductNameInvalid = [];
                                var dataQuantityInvalid = [];
                                $.each(dataHcCreate, function (index, item) {
                                    // kiem tra day du du lieu
                                    var check = true;
                                    $.each(colnameRe, function (count, element) {
                                        if (item[element] === null || item[element] === '' || item[element] === undefined) {
                                            check = false;
                                        }
                                    });
                                    if (check == false) {
                                        dataInvalidRe.push((index + 2));
                                        XFunction.RenderMessage('error', 'Lỗi Import!!! Phải nhập đầy đủ thông tin trên lưới');
                                        return false;
                                    }
                                    // kiem tra sai shop
                                    var dataShop = $.grep(dataDept_HcCreate, function (itemShop, indexShop) {
                                        return itemShop.WarehouseCodeB1 === item.Shop;
                                    });
                                    if (dataShop.length == 0) {
                                        dataInvalidShopCode.push((index + 2))
                                    }
                                    // kiem tra sai ma mat hang
                                    var dataProduct = $.grep(dataProduct_HcCreate, function (itemProduct, indexProduct) {
                                        return itemProduct.ItemId == item.ItemID;
                                    });
                                    if (dataProduct.length == 0) {
                                        dataProductInvalid.push((index + 2))
                                    }
                                    // kiem tra số lượng 
                                    if ($.isNumeric(item.Quantity_S) === false && item.Quantity_S < 0
                                        && $.isNumeric(item.Quantity_M) === false && item.Quantity_M < 0
                                        && $.isNumeric(item.Quantity_L) === false && item.Quantity_L < 0
                                        && $.isNumeric(item.Quantity_XL) === false && item.Quantity_XL < 0
                                        && $.isNumeric(item.Quantity_XXL) === false && item.Quantity_XXL < 0) {
                                        dataQuantityInvalid.push((index + 2));
                                    }
                                    //kiem tra trung shop va san pham
                                    var dataShopItem = $.grep(dataHcCreate, function (itemShop, indexShop) {
                                        return itemShop.Shop == item.Shop && itemShop.ItemID == item.ItemID;
                                    });
                                    if (dataShopItem.length > 1) {
                                        dataShopAndItemInvalid.push((index + 2));
                                    }
                                });
                                // bao loi ra man hinh tao
                                if (dataInvalidRe.length > 0) {
                                    XFunction.RenderMessage('error', 'Lỗi Import!!! Dữ liệu nhập chưa đầy đủ! Vui lòng xem lại dòng ' + dataInvalidRe.join(',') + ' !'); return false;
                                }
                                if (dataInvalidShopCode.length > 0) {
                                    XFunction.RenderMessage('error', 'Lỗi Import!!! Mã shop B1 không tồn tại! Vui lòng xem lại dòng ' + dataInvalidShopCode.join(',') + ' !'); return false;
                                }
                                if (dataProductInvalid.length > 0) {
                                    XFunction.RenderMessage('error', 'Lỗi Import!!! Mặt hàng không tồn tại! Vui lòng xem lại dòng ' + dataProductInvalid.join(',') + ' !'); return false;
                                }
                                if (dataQuantityInvalid.length > 0) {
                                    XFunction.RenderMessage('error', 'Lỗi Import!!! Số lượng phải là kiểu số và lớn hơn hoặc bằng 0! Vui lòng xem lại dòng ' + dataQuantityInvalid.join(',') + ' !'); return false;
                                }
                                if (dataShopAndItemInvalid.length > 0) {
                                    XFunction.RenderMessage('error', 'Lỗi Import!!! Tồn tại shop trùng mặt hàng! Vui lòng xem lại dòng ' + dataShopAndItemInvalid.join(',') + ' !'); return false;
                                }
                                //gan du lieu cho luoi
                                $.each(dataHcCreate, function (index, item) {
                                    var shopInfo = $.grep(dataDept_HcCreate, function (itemShopInfo, indexShopInfo) {
                                        return itemShopInfo.WarehouseCodeB1 == item.Shop;
                                    });
                                    var productInfo = $.grep(dataProduct_HcCreate, function (itemPropInfo, indexProInfo) {
                                        return itemPropInfo.ItemId == item.ItemID;
                                    });
                                    var SL = 0;
                                    var Soluongtonkho = $.grep(dataInventoryHC, function (value, number) {
                                        return value.ShopCode == shopInfo[0].WarehouseCodeB1 && value.MaSP == productInfo[0].ItemCode;
                                    });
                                    if (Soluongtonkho.length > 0) {
                                        SL = Soluongtonkho[0].SL;
                                    }
                                    else {
                                        SL = 0;
                                    }

                                    if (shopInfo.length == 0) {
                                        return false;
                                    }
                                    if (productInfo.length == 0) {
                                        return false;
                                    }
                                    else {
                                        dataH.push(
                                            {
                                                'Shop': shopInfo[0].WarehouseCode + '--' + shopInfo[0].WarehouseCodeB1 + '--' + shopInfo[0].WarehouseName,
                                                'GroupProduct': productInfo.MaNhom + '--' + productInfo.TenNhom,//▼  - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                                                'ItemId': item.ItemID,
                                                'ItemName': productInfo[0].ItemName,
                                                'GroupId': productInfo[0].GroupId,
                                                'GroupName': productInfo[0].GroupName,
                                                'InventoryNumber': SL,
                                                'QuantytiSize_S': item.Quantity_S,
                                                'QuantytiSize_M': item.Quantity_M,
                                                'QuantytiSize_L': item.Quantity_L,
                                                'QuantytiSize_XL': item.Quantity_XL,
                                                'QuantytiSize_XXL': item.Quantity_XXL,
                                                'Price': productInfo[0].Price,
                                                'SumPrice': (Number(item.Quantity_S) + Number(item.Quantity_M) + Number(item.Quantity_L) + Number(item.Quantity_XL) + Number(item.Quantity_XXL))
                                                    * productInfo[0].Price,
                                                'Unit': productInfo[0].Unit,
                                                'Note': item.Note,
                                            });
                                    }
                                });
                            }
                            dataHcCreateHandsontable = [];
                            dataHcCreateHandsontable = dataH;
                            hot.loadData(dataHcCreateHandsontable);
                            hot.render();
                        };
                        reader.readAsArrayBuffer(f);
                    }
                }
                $('#FileSupport').val('');
            });
        }
        contructExecl152();

        $btnSend.click(function () {
            var myData = hot.getData(0, 0, hot.getData().length, 12), datas = [], dataCheckLimitedHcCreate = [], Shop = [];
            $('#DetailsLimited').val(JSON.stringify([]));
            $.each(myData, function (index, item) {
                if (item[0] != null && item[0] != undefined && item[0] != "") {
                    var Shop_tam = item[0].split('--')
                    Shop.push(Shop_tam[0])
                }
                if (item[2] != null && item[2] != undefined && item[2] != "") {//▼  - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                    var timkiemthietbi = $.grep(dataProduct_HcCreate, function (element, index) {
                        return element.ItemName === item[2] &&//▼  - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                            (item[7] > 0 || item[8] > 0 || item[9] > 0 || item[10] > 0 || item[11] > 0);//▼  - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                    });
                    var timkiemShop = $.grep(dataDept_HcCreate, function (element, index) {
                        return (element.WarehouseCode + '--' + element.WarehouseCodeB1 + '--' + element.WarehouseName) === item[0];
                    });
                    if (timkiemthietbi != null && timkiemthietbi != undefined && timkiemthietbi.length > 0
                        && timkiemShop != null && timkiemShop != undefined && timkiemShop.length > 0) {
                        var myData_new = {
                            'ShopCode': timkiemShop[0].WarehouseCode.split("--")[0],
                            'ItemId': timkiemthietbi[0].ItemId,
                            'ItemName': timkiemthietbi[0].ItemName,
                            'GroupId': timkiemthietbi[0].GroupId,
                            'GroupName': timkiemthietbi[0].ItemName,
                            //▼  - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                            'InventoryNumber': item[4],
                            'Quantity_S': item[7],
                            'Quantity_M': item[8],
                            'Quantity_L': item[9],
                            'Quantity_XL': item[10],
                            'Quantity_XXL': item[11],
                            'Price': timkiemthietbi[0].Price,
                            'Sum': item[12],
                            'Unit': timkiemthietbi[0].Unit,
                            'Note': item[13],
                            //▼  - TrungNC3 - 11/10/2017 - Thêm Cột mã nhóm sản phẩm vào nhóm yêu cầu Hành chính
                        };
                        datas.push(myData_new);
                    }
                }
            });
            //==== Get định mức của shop trong lưới thuộc loại 'Dụng cụ, đồ dùng'
            var checkVuot = $.each(dataLimitedHcCreate, function (index, item) {
                $.grep(newdatas, function (value, posi) {
                    return value.ShopCode == item.MaShop && item.MaNhom == 4 //== Lấy ta loại 'Dụng cụ, đồ dùng'
                });
            });

            //==== Gôm tất cả shop giống nhau lại làm một
            var newdatas = JSON.parse(JSON.stringify(datas));
            for (var i = 0; i < newdatas.length; i++) {
                for (var j = newdatas.length - 1; j > i; j--) {
                    if (newdatas[j].ShopCode == newdatas[i].ShopCode) {
                        newdatas[i].Sum += newdatas[j].Sum;
                        newdatas[i].Quantity_S += newdatas[j].Quantity_S;
                        newdatas[i].Quantity_M += newdatas[j].Quantity_M;
                        newdatas[i].Quantity_L += newdatas[j].Quantity_L;
                        newdatas[i].Quantity_XL += newdatas[j].Quantity_XL;
                        newdatas[i].Quantity_XXL += newdatas[j].Quantity_XXL;
                        newdatas.splice(j, 1);
                    }
                };
            };
            //===== Kiểm tra định mức
            if (checkVuot != undefined && checkVuot != null && checkVuot.length > 0) {
                $.each(newdatas, function (index, item) {
                    $.grep(checkVuot, function (value, posi) {
                        if (item.ShopCode == value.MaShop) {
                            var Tong = item.Sum;
                            if (Tong > value.DinhMuc) {
                                XFunction.RenderMessage('error', 'Shop ' + item.ShopCode + ' đã sử dụng quá định mức cho phép của mình.');
                                return false
                            }
                            else {
                                return true;
                            }
                        };
                    });
                });
            }
            if (checkVuot == undefined || checkVuot == null || checkVuot.length == 0) {
                //var Tong = 0;
                //$.each(newdatas, function (index, item) {
                //    Tong += item.Sum;
                //})
                $('#DetailsLimited').val(JSON.stringify(datas));
            }

            $.get('/Requests/Request_GetSimilar_CurrentUser', { TypeId: 152, Warehouse: Shop.toString() }, function (data) {
                if (data !== undefined && data !== null && data !== '' && data.length > 0) {
                    var req = '';
                    $.each(data, function (index, item) {
                        req += item.Id + ', ';
                    });
                    XFunction.RenderMessage('error', 'Hiện tại trong tháng đang có ' + data.length + ' yêu cầu ' + req + ' đặt hàng chưa hoàn tất <br/> Nên không được tạo thêm cho đến khi các yêu cầu kia hoàn tất hoặc qua tháng mới');
                    return false;
                }

                if (datas.length == 0) {
                    XFunction.RenderMessage('error', 'Chi tiết không được để trống <br/>Xin hãy nhập chi tiết vào bảng chi tiết');
                    return false;
                }
                else {
                    $('#Details').val(JSON.stringify(datas));
                    //$('#DetailsLimited').val(JSON.stringify([]));
                    $('#Description').val(catagoryInfo.Description);
                    $('#TitleRequest').val($('#Title').val());
                    $('#typeId').val(catagoryInfo.Id);
                    var form = $("form#form-create");
                    form.attr("action", "/Requests/Create");
                    form.submit();
                    $('#WaitDialog').modal('show');
                    return true;
                }
            });
        });
    };
    function contruct_42() {
        $areaChiTiet.show(); $areaDowloadAndImport.hide();// vùng chi tiết call Log
        var container1 = $$('handsontableEx'), hot1,
            container2 = $$('handsontableEx2'), hot2,
            container3 = $$('handsontableEx3'), hot3,
            container4 = $$('handsontableEx4'), hot4;
        hiddenForm = function () {
            $('#sum-total').hide();
            $('#sum-total1').show();
            $('#sum-total2').show();
            $('#form-BaoVe').hide();
            $('#DateRating').hide();
            $('#captionHot3').hide();
            $('#captionHot4').hide();
            $('#handsontableEx3').hide();
            $('#handsontableEx4').hide();
            $('#Security-Company').hide();
        }; hiddenForm();

        var dataTrangThaiDuyet = [], dataTable1_All = [], dataTable2_All = [], dataTable1Name = [], dataTable2Name = [], dataCalenderDefault = [], dataWorkingContent = [];

        function nam_nhuan(year) {
            if (year % 100 == 0) {
                if (year % 400 == 0) {
                    return 1;
                }
                else {
                    return 0;
                }
            }
            else if (year % 4 == 0) {
                return 1;
            }
            else {
                return 0;
            }
        }

        //Lấy thông tin SM/PSM tạo callLog  
        $.get('/Requests/GetEmps', { ShopCode: '0' }, function (data) {
            $.get('/Requests/Get_AssessmentType', { Group: '' }, function (respone) {

                dataTable1_All = $.grep(respone, function (item, index) {
                    return item.Group === 'AssessmentType';
                });
                dataTable2_All = $.grep(respone, function (item, index) {
                    return item.Group === 'TVAssessmentType';
                });

                $.each(dataTable1_All, function (index, item) {
                    dataTable1Name.push(item.Name);
                });
                $.each(dataTable2_All, function (index, item) {
                    dataTable2Name.push(item.Name);
                });
                dataDefault = function () {
                    dataTrangThaiDuyet = [{ Code: '1', Name: 'Đánh giá Tạp vụ khoán gọn hoặc shop tự vệ sinh' }, { Code: '2', Name: 'Đánh giá bảo vệ (sử dụng cho bảo vệ dịch vụ)' }];
                }; dataDefault();

                function getStatus() {
                    $('#status').multiselect({
                        includeSelectAllOption: true,
                        buttonWidth: '100%',
                        allSelectedText: 'Chọn tất cả',
                        selectAllText: 'Chọn tất cả',
                        maxHeight: 100
                    });
                    var data = [];
                    $.each(dataTrangThaiDuyet, function (index, item) {
                        data.push({
                            label: item.Name,
                            value: item.Code
                        });
                    });
                    $('#status').multiselect('dataprovider', data);
                }
                getStatus();

                //Tạo biến ngày tháng
                var now = new Date();
                var monthNow = now.getMonth() + 1;
                var yearNow = now.getFullYear();
                var dateNow = now.getDate();

                var firstDay = new Date(now.getFullYear(), now.getMonth(), 1);
                $('#txtDateRating').val(firstDay.toDateInputValue());

                var dataPSM = $.grep(data, function (item, index) {
                    return item.text.split(' - ')[2] === nameNotCode;
                });
                contructData = function () {
                    dataCalenderDefault = [{
                        Name: dateNow + '/' + monthNow + '/' + yearNow, checkAll: null,
                        Ngay1: null, Ngay2: null, Ngay3: null, Ngay4: null, Ngay5: null,
                        Ngay6: null, Ngay7: null, Ngay8: null, Ngay9: null, Ngay10: null,
                        Ngay11: null, Ngay12: null, Ngay13: null, Ngay14: null, Ngay15: null,
                        Ngay16: null, Ngay17: null, Ngay18: null, Ngay19: null, Ngay20: null,
                        Ngay21: null, Ngay22: null, Ngay23: null, Ngay24: null, Ngay25: null,
                        Ngay26: null, Ngay27: null, Ngay28: null, Ngay29: null, Ngay30: null,
                        Ngay31: null
                    }];
                    dataCalenderDefault1 = [{
                        Name: null, checkAll: null,
                        Ngay1: null, Ngay2: null, Ngay3: null, Ngay4: null, Ngay5: null, Ngay6: null, Ngay7: null, Ngay8: null, Ngay9: null, Ngay10: null,
                        Ngay11: null, Ngay12: null, Ngay13: null, Ngay14: null, Ngay15: null, Ngay16: null, Ngay17: null, Ngay18: null, Ngay19: null, Ngay20: null,
                        Ngay21: null, Ngay22: null, Ngay23: null, Ngay24: null, Ngay25: null, Ngay26: null, Ngay27: null, Ngay28: null, Ngay29: null, Ngay30: null, Ngay31: null
                    }];
                    dataWorkingContent = [{ Name: null, Property1: null, Property2: null, Property3: null, Property4: null, Property5: null, Note: null }];
                    dataWorkingSecurity = [{ Name: null, Property1: null, Property2: null, Note: null }];
                };
                contructData();
                var setting1 = function () {
                    return {
                        data: dataCalenderDefault,
                        //================================Colunms=======
                        maxCols: 32,
                        minCols: 32,
                        colWidths: 'undefined',
                        currentColClassName: 'currentCol', //currentCol
                        //================================Rows=======
                        currentRowClassName: 'currentRow',
                        rowHeaders: true,
                        //startRows: 4,
                        //viewportRowRenderingOffset : 'auto',
                        //================================Oder=======
                        stretchH: 'all',
                        undo: true,
                        minRows: 3,
                        maxRows: 3,
                        mergeCells: [{ row: 2, col: 1, rowspan: 1, colspan: 32 },],
                        colHeaders:
                            ['Ngày/Tháng', 'Chọn tất cả', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
                                '11', '12', '13', '14', '15', '16', '17', '18', '19', '20',
                                '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31'],
                        columns: [
                            {
                                data: 'Name', width: 200, type: 'date',
                                renderer: function (instance, td, row, col, prop, value) {
                                    var $textDefault = '';
                                    if (row > 0) {
                                        //Handsontable.TextRenderer.apply(this, arguments);
                                        if (row == 1) {
                                            $textDefault = 'Quản lý xác nhận';
                                            td.style.verticalAlign = 'middle';
                                        }
                                        if (row == 2) {
                                            $textDefault = 'Tổng ngày công:';
                                            td.style.verticalAlign = 'middle';
                                            td.style.fontWeight = 'bold';
                                            td.style.color = 'green';
                                        }
                                        $(td).empty().append($textDefault);
                                    }
                                    else {
                                        Handsontable.AutocompleteRenderer.apply(this, arguments);
                                    }
                                }
                            },
                            {
                                data: 'checkAll', type: 'checkbox', width: 80, checkedTemplate: 1, uncheckedTemplate: 0,
                                renderer: function (instance, td, row, col, prop, value) {
                                    if (row === 2) {
                                        td.style.fontWeight = 'bold';
                                        td.style.color = 'green';
                                        td.style.textAlign = 'left';

                                        var Column = ["Name", "checkAll", "Ngay1", "Ngay2", "Ngay3", "Ngay4", "Ngay5"
                                            , "Ngay6", "Ngay7", "Ngay8", "Ngay9", "Ngay10"
                                            , "Ngay11", "Ngay12", "Ngay13", "Ngay14", "Ngay15"
                                            , "Ngay16", "Ngay17", "Ngay18", "Ngay19", "Ngay20"
                                            , "Ngay21", "Ngay22", "Ngay23", "Ngay24", "Ngay25"
                                            , "Ngay26", "Ngay27", "Ngay28", "Ngay29", "Ngay30", "Ngay31"];
                                        var DataTab1 = [];
                                        var ii = '';
                                        var sum = 0;

                                        $.each(dataCalenderDefault, function (index, item) {
                                            $.each(Column, function (count, element) {
                                                if (item[element] == 1 && index == 1) {
                                                    DataTab1.push({ vitricot: count, ngay: element });
                                                }
                                            });
                                        });
                                        if (DataTab1.length > 0) {
                                            sum = DataTab1.length - 1;
                                        }
                                        value = sum;
                                        Handsontable.NumericRenderer.apply(this, arguments);
                                    }
                                    else {
                                        Handsontable.CheckboxRenderer.apply(this, arguments);
                                    }
                                }
                            },
                            { data: 'Ngay1', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay2', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay3', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay4', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay5', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay6', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay7', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay8', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay9', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay10', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay11', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay12', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay13', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay14', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay15', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay16', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay17', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay18', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay19', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay20', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay21', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay22', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay23', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay24', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay25', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay26', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay27', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay28', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay29', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay30', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay31', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                        ],//Tạo view bảng

                        afterChange: function (changes, source) {
                            if (!changes || source == 'not') {
                                return;
                            }
                            var instance = this;
                            changes.forEach(function (change) {
                                var row = change[0], col = change[1], newValue = change[3];
                                if (col == "Name") {
                                    var dateFix = newValue.split('/')[1].toString() + '/' + newValue.split('/')[0].toString() + '/' + newValue.split('/')[2].toString();
                                    var dateChange = new Date(dateFix);
                                    var monthChange = dateChange.getMonth() + 1;
                                    var yearChange = dateChange.getFullYear();
                                    var dateChange = dateChange.getDate();
                                    var checkNhuanAfter = nam_nhuan(yearChange);
                                    if (monthChange === 2 && checkNhuanAfter === 1) {
                                        instance.updateSettings({
                                            cells: function (row, col, prop) {
                                                var cellProperties = {};
                                                if (col === 31 || col === 32) {
                                                    cellProperties.readOnly = true;
                                                }
                                                return cellProperties;
                                            }
                                        });
                                    }
                                    if (monthChange === 2 && checkNhuanAfter === 0) {
                                        instance.updateSettings({
                                            cells: function (row, col, prop) {
                                                var cellProperties = {};
                                                if (col === 30 || col === 31 || col === 32) {
                                                    cellProperties.readOnly = true;
                                                }
                                                return cellProperties;
                                            }
                                        });
                                    }
                                    if (monthChange === 4 || monthChange === 6 || monthChange === 9 || monthChange === 11) {
                                        instance.updateSettings({
                                            cells: function (row, col, prop) {
                                                var cellProperties = {};
                                                if (col === 32) {
                                                    cellProperties.readOnly = true;
                                                }
                                                return cellProperties;
                                            }
                                        });
                                    };
                                };
                                if (col === 'checkAll') {
                                    var checkNgay = instance.getDataAtCell(0, 0);
                                    var dateFix1 = checkNgay.split('/')[1].toString() + '/' + checkNgay.split('/')[0].toString() + '/' + checkNgay.split('/')[2].toString();
                                    var dateChange1 = new Date(dateFix1);
                                    var monthChange1 = dateChange1.getMonth() + 1;
                                    var yearChange1 = dateChange1.getFullYear();
                                    var dateChange1 = dateChange1.getDate();
                                    var checkNhuanAfter1 = nam_nhuan(yearChange1);
                                    if (newValue === 1) {
                                        instance.setDataAtRowProp(row, 'Ngay1', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay2', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay3', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay4', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay5', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay6', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay7', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay8', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay9', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay10', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay11', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay12', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay13', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay14', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay15', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay16', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay17', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay18', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay19', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay20', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay21', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay22', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay23', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay24', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay25', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay26', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay27', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay28', 1, 'edit');
                                        if (monthChange1 === 2 && checkNhuanAfter === 1) {
                                            instance.setDataAtRowProp(row, 'Ngay29', 1, 'edit');
                                            instance.setDataAtRowProp(row, 'Ngay30', 0, 'edit');
                                            instance.setDataAtRowProp(row, 'Ngay31', 0, 'edit');
                                        } else if (monthChange1 === 2 && checkNhuanAfter === 0) {
                                            instance.setDataAtRowProp(row, 'Ngay29', 0, 'edit');
                                            instance.setDataAtRowProp(row, 'Ngay30', 0, 'edit');
                                            instance.setDataAtRowProp(row, 'Ngay31', 0, 'edit');
                                        } else if (monthChange1 === 4 || monthChange1 === 6 || monthChange1 === 9 || monthChange1 === 11) {
                                            instance.setDataAtRowProp(row, 'Ngay29', 1, 'edit');
                                            instance.setDataAtRowProp(row, 'Ngay30', 1, 'edit');
                                            instance.setDataAtRowProp(row, 'Ngay31', 0, 'edit');
                                        } else {
                                            instance.setDataAtRowProp(row, 'Ngay29', 1, 'edit');
                                            instance.setDataAtRowProp(row, 'Ngay30', 1, 'edit');
                                            instance.setDataAtRowProp(row, 'Ngay31', 1, 'edit');
                                        };
                                    }
                                    else {
                                        instance.setDataAtRowProp(row, 'Ngay1', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay2', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay3', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay4', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay5', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay6', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay7', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay8', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay9', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay10', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay11', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay12', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay13', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay14', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay15', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay16', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay17', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay18', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay19', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay20', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay21', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay22', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay23', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay24', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay25', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay26', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay27', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay28', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay29', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay30', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay31', 0, 'edit');
                                    }
                                }
                            });
                        },
                        cells: function (row, col, prop) {
                            var cellProperties = {};
                            if (row > 0 && col == 0) {
                                cellProperties.readOnly = true;
                            }
                            var checkNhuan = nam_nhuan(yearNow);

                            if (checkNhuan == 1) {
                                if (monthNow === 2 && (col === 31 || col === 32)) {
                                    cellProperties.readOnly = true;
                                }
                            }
                            else if (checkNhuan == 0) {
                                if (monthNow === 2 && (col === 30 || col === 31 || col === 32)) {
                                    cellProperties.readOnly = true;
                                }
                            }
                            else if ((monthNow === 4 || monthNow === 6 || monthNow === 9 || monthNow === 11) && col === 32) {
                                cellProperties.readOnly = true;
                            }
                            return cellProperties;
                        }
                    }
                };
                //===============RENDERER LUOI
                hot1 = new Handsontable(container1, setting1());

                var setting2 = function () {
                    return {
                        data: dataWorkingContent,
                        //================================Colunms=======
                        maxCols: 7,
                        minCols: 6,
                        columnSorting: false,
                        colWidths: 'undefined',
                        currentColClassName: 'currentCol', //currentCol
                        //================================Rows=======
                        copyRowsLimit: 1000,
                        currentRowClassName: 'currentRow',
                        //================================Oder=======
                        allowInvalid: false,
                        stretchH: 'all',
                        commentedCellClassName: 'htCommentCell',
                        comments: true,
                        contextMenu: false,
                        customBorders: false,
                        noWordWrapClassName: 'htNoWrap',
                        placeholder: false,
                        placeholderCellClassName: 'htPlaceholder',
                        readOnlyCellClassName: 'htDimmed',
                        search: false,
                        undo: true,
                        formulas: true,
                        wordWrap: true,
                        minRows: 32,
                        maxRows: 32,
                        colHeaders: ['Nội dung công việc', 'Tốt', 'Khá', 'Hoàn thành', 'Trung bình', 'Không hoàn thành', 'Ghi chú'],
                        columns: [
                            {
                                data: 'Name', readOnly: true, width: 275,
                                renderer: function (instance, td, row, col, prop, value) {
                                    var $textDefault = '';
                                    $.each(dataTable1Name, function (index, item) {
                                        if (row == index) {
                                            $textDefault = item;
                                        };
                                    });
                                    if (row === 0) {
                                        td.style.fontWeight = 'bold';
                                        td.style.color = 'green';
                                        td.style.backgroundColor = '#DDDDDD'
                                    }
                                    if (row === 5) {
                                        td.style.fontWeight = 'bold';
                                        td.style.color = 'green';
                                        td.style.backgroundColor = '#DDDDDD'
                                    }
                                    if (row === 19) {
                                        td.style.fontWeight = 'bold';
                                        td.style.color = 'green';
                                        td.style.backgroundColor = '#DDDDDD'
                                    }
                                    if (row === 25) {
                                        td.style.fontWeight = 'bold';
                                        td.style.color = 'green';
                                        td.style.backgroundColor = '#DDDDDD'
                                    }
                                    td.style.textAlign = 'left';
                                    $(td).empty().append($textDefault);
                                }
                            },
                            {
                                data: 'Property1', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0, width: 100//,
                                //renderer: function (instance, td, row, col, prop, value) {
                                //    if (row === 0 || row === 5 || row === 19 || row === 25) {
                                //        Handsontable.TextRenderer.apply(this, arguments);
                                //    }
                                //    else {
                                //        Handsontable.CheckboxRenderer.apply(this, arguments);
                                //    }
                                //}
                            },
                            {
                                data: 'Property2', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0, width: 100//,
                                //renderer: function (instance, td, row, col, prop, value) {
                                //    if (row === 0 || row === 5 || row === 19 || row === 25) {
                                //        Handsontable.TextRenderer.apply(this, arguments);
                                //    }
                                //    else {
                                //        Handsontable.CheckboxRenderer.apply(this, arguments);
                                //    }
                                //}
                            },
                            {
                                data: 'Property3', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0, width: 100//,
                                //renderer: function (instance, td, row, col, prop, value) {
                                //    if (row === 0 || row === 5 || row === 19 || row === 25) {
                                //        Handsontable.TextRenderer.apply(this, arguments);
                                //    }
                                //    else {
                                //        Handsontable.CheckboxRenderer.apply(this, arguments);
                                //    }
                                //}
                            },
                            {
                                data: 'Property4', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0, width: 100//,
                                //renderer: function (instance, td, row, col, prop, value) {
                                //    if (row === 0 || row === 5 || row === 19 || row === 25) {
                                //        Handsontable.TextRenderer.apply(this, arguments);
                                //    }
                                //    else {
                                //        Handsontable.CheckboxRenderer.apply(this, arguments);
                                //    }
                                //}
                            },
                            {
                                data: 'Property5', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0, width: 150//,
                                //renderer: function (instance, td, row, col, prop, value) {
                                //    if (row === 0 || row === 5 || row === 19 || row === 25) {
                                //        Handsontable.TextRenderer.apply(this, arguments);
                                //    }
                                //    else {
                                //        Handsontable.CheckboxRenderer.apply(this, arguments);
                                //    }
                                //}
                            },
                            { data: 'Note', width: 30, type: 'text', width: 250 },
                        ],//Tạo view bảng

                        beforeChange: function (changes, source) {
                            if (source == 'not') return;
                            for (i = 0; i < changes.length; i++) {
                                var row = changes[i][0], col = changes[i][1];
                                if (col === 'Property1') {
                                    var value = changes[i][3];
                                    if (value == true) {
                                        hot2.setDataAtCell(row, 2, null, 'not');
                                        hot2.setDataAtCell(row, 3, null, 'not');
                                        hot2.setDataAtCell(row, 4, null, 'not');
                                        hot2.setDataAtCell(row, 5, null, 'not');
                                        if (row === 0) {
                                            for (i = 1; i < 5; i++) {
                                                hot2.setDataAtCell(i, 1, 1, 'not');
                                                hot2.setDataAtCell(i, 2, null, 'not');
                                                hot2.setDataAtCell(i, 3, null, 'not');
                                                hot2.setDataAtCell(i, 4, null, 'not');
                                                hot2.setDataAtCell(i, 5, null, 'not');
                                            }
                                            hot2.selectCell(5, 1, 5, 1);
                                        }
                                        if (row === 5) {
                                            for (i = 6; i < 19; i++) {
                                                hot2.setDataAtCell(i, 1, 1, 'not');
                                                hot2.setDataAtCell(i, 2, null, 'not');
                                                hot2.setDataAtCell(i, 3, null, 'not');
                                                hot2.setDataAtCell(i, 4, null, 'not');
                                                hot2.setDataAtCell(i, 5, null, 'not');
                                            }
                                            hot2.selectCell(19, 1, 19, 1);
                                        }
                                        if (row === 19) {
                                            for (i = 20; i < 25; i++) {
                                                hot2.setDataAtCell(i, 1, 1, 'not');
                                                hot2.setDataAtCell(i, 2, null, 'not');
                                                hot2.setDataAtCell(i, 3, null, 'not');
                                                hot2.setDataAtCell(i, 4, null, 'not');
                                                hot2.setDataAtCell(i, 5, null, 'not');
                                            }
                                            hot2.selectCell(25, 1, 25, 1);
                                        }
                                        if (row === 25) {
                                            for (i = 26; i < 32; i++) {
                                                hot2.setDataAtCell(i, 1, 1, 'not');
                                                hot2.setDataAtCell(i, 2, null, 'not');
                                                hot2.setDataAtCell(i, 3, null, 'not');
                                                hot2.setDataAtCell(i, 4, null, 'not');
                                                hot2.setDataAtCell(i, 5, null, 'not');
                                            }
                                        }
                                    }
                                    else if (value == false) {
                                        if (row === 0) {
                                            for (i = 1; i < 5; i++) {
                                                hot2.setDataAtCell(i, 1, 0, 'not');
                                            }
                                        }
                                        if (row === 5) {
                                            for (i = 6; i < 19; i++) {
                                                hot2.setDataAtCell(i, 1, 0, 'not');
                                            }
                                        }
                                        if (row === 19) {
                                            for (i = 20; i < 25; i++) {
                                                hot2.setDataAtCell(i, 1, 0, 'not');
                                            }
                                        }
                                        if (row === 25) {
                                            for (i = 26; i < 32; i++) {
                                                hot2.setDataAtCell(i, 1, 0, 'not');
                                            }
                                        }
                                    }
                                    return true;
                                }
                                if (col === 'Property2') {
                                    var value = changes[i][3];
                                    if (value == true) {
                                        hot2.setDataAtCell(row, 1, null, 'not');
                                        hot2.setDataAtCell(row, 3, null, 'not');
                                        hot2.setDataAtCell(row, 4, null, 'not');
                                        hot2.setDataAtCell(row, 5, null, 'not');

                                        if (row === 0) {
                                            for (i = 1; i < 5; i++) {
                                                hot2.setDataAtCell(i, 1, null, 'not');
                                                hot2.setDataAtCell(i, 2, 1, 'not');
                                                hot2.setDataAtCell(i, 3, null, 'not');
                                                hot2.setDataAtCell(i, 4, null, 'not');
                                                hot2.setDataAtCell(i, 5, null, 'not');
                                            }
                                            hot2.selectCell(5, 2, 5, 2);
                                        }
                                        if (row === 5) {
                                            for (i = 6; i < 19; i++) {
                                                hot2.setDataAtCell(i, 1, null, 'not');
                                                hot2.setDataAtCell(i, 2, 1, 'not');
                                                hot2.setDataAtCell(i, 3, null, 'not');
                                                hot2.setDataAtCell(i, 4, null, 'not');
                                                hot2.setDataAtCell(i, 5, null, 'not');
                                            }
                                            hot2.selectCell(19, 2, 19, 2);
                                        }
                                        if (row === 19) {
                                            for (i = 20; i < 25; i++) {
                                                hot2.setDataAtCell(i, 1, null, 'not');
                                                hot2.setDataAtCell(i, 2, 1, 'not');
                                                hot2.setDataAtCell(i, 3, null, 'not');
                                                hot2.setDataAtCell(i, 4, null, 'not');
                                                hot2.setDataAtCell(i, 5, null, 'not');
                                            }
                                            hot2.selectCell(25, 2, 25, 2);
                                        }
                                        if (row === 25) {
                                            for (i = 26; i < 32; i++) {
                                                hot2.setDataAtCell(i, 1, null, 'not');
                                                hot2.setDataAtCell(i, 2, 1, 'not');
                                                hot2.setDataAtCell(i, 3, null, 'not');
                                                hot2.setDataAtCell(i, 4, null, 'not');
                                                hot2.setDataAtCell(i, 5, null, 'not');
                                            }
                                        }
                                    }
                                    else if (value == false) {
                                        if (row === 0) {
                                            for (i = 1; i < 5; i++) {
                                                hot2.setDataAtCell(i, 2, 0, 'not');
                                            }
                                        }
                                        if (row === 5) {
                                            for (i = 6; i < 19; i++) {
                                                hot2.setDataAtCell(i, 2, 0, 'not');
                                            }
                                        }
                                        if (row === 19) {
                                            for (i = 20; i < 25; i++) {
                                                hot2.setDataAtCell(i, 2, 0, 'not');
                                            }
                                        }
                                        if (row === 25) {
                                            for (i = 26; i < 32; i++) {
                                                hot2.setDataAtCell(i, 2, 0, 'not');
                                            }
                                        }
                                    }
                                    return true;
                                }
                                if (col === 'Property3') {
                                    var value = changes[i][3];
                                    if (value == true) {
                                        hot2.setDataAtCell(row, 1, null, 'not');
                                        hot2.setDataAtCell(row, 2, null, 'not');
                                        hot2.setDataAtCell(row, 4, null, 'not');
                                        hot2.setDataAtCell(row, 5, null, 'not');

                                        if (row === 0) {
                                            for (i = 1; i < 5; i++) {
                                                hot2.setDataAtCell(i, 1, null, 'not');
                                                hot2.setDataAtCell(i, 2, null, 'not');
                                                hot2.setDataAtCell(i, 3, 1, 'not');
                                                hot2.setDataAtCell(i, 4, null, 'not');
                                                hot2.setDataAtCell(i, 5, null, 'not');
                                            }
                                            hot2.selectCell(5, 3, 5, 3);
                                        }
                                        if (row === 5) {
                                            for (i = 6; i < 19; i++) {
                                                hot2.setDataAtCell(i, 1, null, 'not');
                                                hot2.setDataAtCell(i, 2, null, 'not');
                                                hot2.setDataAtCell(i, 3, 1, 'not');
                                                hot2.setDataAtCell(i, 4, null, 'not');
                                                hot2.setDataAtCell(i, 5, null, 'not');
                                            }
                                            hot2.selectCell(19, 3, 19, 3);
                                        }
                                        if (row === 19) {
                                            for (i = 20; i < 25; i++) {
                                                hot2.setDataAtCell(i, 1, null, 'not');
                                                hot2.setDataAtCell(i, 2, null, 'not');
                                                hot2.setDataAtCell(i, 3, 1, 'not');
                                                hot2.setDataAtCell(i, 4, null, 'not');
                                                hot2.setDataAtCell(i, 5, null, 'not');
                                            }
                                            hot2.selectCell(25, 3, 25, 3);
                                        }
                                        if (row === 25) {
                                            for (i = 26; i < 32; i++) {
                                                hot2.setDataAtCell(i, 1, null, 'not');
                                                hot2.setDataAtCell(i, 2, null, 'not');
                                                hot2.setDataAtCell(i, 3, 1, 'not');
                                                hot2.setDataAtCell(i, 4, null, 'not');
                                                hot2.setDataAtCell(i, 5, null, 'not');
                                            }
                                        }
                                    }
                                    else if (value == false) {
                                        if (row === 0) {
                                            for (i = 1; i < 5; i++) {
                                                hot2.setDataAtCell(i, 3, 0, 'not');
                                            }
                                        }
                                        if (row === 5) {
                                            for (i = 6; i < 19; i++) {
                                                hot2.setDataAtCell(i, 3, 0, 'not');
                                            }
                                        }
                                        if (row === 19) {
                                            for (i = 20; i < 25; i++) {
                                                hot2.setDataAtCell(i, 3, 0, 'not');
                                            }
                                        }
                                        if (row === 25) {
                                            for (i = 26; i < 32; i++) {
                                                hot2.setDataAtCell(i, 3, 0, 'not');
                                            }
                                        }
                                    }
                                    return true;
                                }
                                if (col === 'Property4') {
                                    var value = changes[i][3];
                                    if (value == true) {
                                        hot2.setDataAtCell(row, 1, null, 'not');
                                        hot2.setDataAtCell(row, 2, null, 'not');
                                        hot2.setDataAtCell(row, 3, null, 'not');
                                        hot2.setDataAtCell(row, 5, null, 'not');

                                        if (row === 0) {
                                            for (i = 1; i < 5; i++) {
                                                hot2.setDataAtCell(i, 1, null, 'not');
                                                hot2.setDataAtCell(i, 2, null, 'not');
                                                hot2.setDataAtCell(i, 3, null, 'not');
                                                hot2.setDataAtCell(i, 4, 1, 'not');
                                                hot2.setDataAtCell(i, 5, null, 'not');
                                            }
                                            hot2.selectCell(5, 4, 5, 4);
                                        }
                                        if (row === 5) {
                                            for (i = 6; i < 19; i++) {
                                                hot2.setDataAtCell(i, 1, null, 'not');
                                                hot2.setDataAtCell(i, 2, null, 'not');
                                                hot2.setDataAtCell(i, 3, null, 'not');
                                                hot2.setDataAtCell(i, 4, 1, 'not');
                                                hot2.setDataAtCell(i, 5, null, 'not');
                                            }
                                            hot2.selectCell(19, 4, 19, 4);
                                        }
                                        if (row === 19) {
                                            for (i = 20; i < 25; i++) {
                                                hot2.setDataAtCell(i, 1, null, 'not');
                                                hot2.setDataAtCell(i, 2, null, 'not');
                                                hot2.setDataAtCell(i, 3, null, 'not');
                                                hot2.setDataAtCell(i, 4, 1, 'not');
                                                hot2.setDataAtCell(i, 5, null, 'not');
                                            }
                                            hot2.selectCell(25, 4, 25, 4);
                                        }
                                        if (row === 25) {
                                            for (i = 26; i < 32; i++) {
                                                hot2.setDataAtCell(i, 1, null, 'not');
                                                hot2.setDataAtCell(i, 2, null, 'not');
                                                hot2.setDataAtCell(i, 3, null, 'not');
                                                hot2.setDataAtCell(i, 4, 1, 'not');
                                                hot2.setDataAtCell(i, 5, null, 'not');
                                            }
                                        }
                                    }
                                    else if (value == false) {
                                        if (row === 0) {
                                            for (i = 1; i < 5; i++) {
                                                hot2.setDataAtCell(i, 4, 0, 'not');
                                            }
                                        }
                                        if (row === 5) {
                                            for (i = 6; i < 19; i++) {
                                                hot2.setDataAtCell(i, 4, 0, 'not');
                                            }
                                        }
                                        if (row === 19) {
                                            for (i = 20; i < 25; i++) {
                                                hot2.setDataAtCell(i, 4, 0, 'not');
                                            }
                                        }
                                        if (row === 25) {
                                            for (i = 26; i < 32; i++) {
                                                hot2.setDataAtCell(i, 4, 0, 'not');
                                            }
                                        }
                                    }
                                    return true;
                                }
                                if (col === 'Property5') {
                                    var value = changes[i][3];
                                    if (value == true) {
                                        hot2.setDataAtCell(row, 1, null, 'not');
                                        hot2.setDataAtCell(row, 2, null, 'not');
                                        hot2.setDataAtCell(row, 3, null, 'not');
                                        hot2.setDataAtCell(row, 4, null, 'not');

                                        if (row === 0) {
                                            for (i = 1; i < 5; i++) {
                                                hot2.setDataAtCell(i, 1, null, 'not');
                                                hot2.setDataAtCell(i, 2, null, 'not');
                                                hot2.setDataAtCell(i, 3, null, 'not');
                                                hot2.setDataAtCell(i, 4, null, 'not');
                                                hot2.setDataAtCell(i, 5, 1, 'not');
                                            }
                                            hot2.selectCell(5, 5, 5, 5);
                                        }
                                        if (row === 5) {
                                            for (i = 6; i < 19; i++) {
                                                hot2.setDataAtCell(i, 1, null, 'not');
                                                hot2.setDataAtCell(i, 2, null, 'not');
                                                hot2.setDataAtCell(i, 3, null, 'not');
                                                hot2.setDataAtCell(i, 4, null, 'not');
                                                hot2.setDataAtCell(i, 5, 1, 'not');
                                            }
                                            hot2.selectCell(19, 5, 19, 5);
                                        }
                                        if (row === 19) {
                                            for (i = 20; i < 25; i++) {
                                                hot2.setDataAtCell(i, 1, null, 'not');
                                                hot2.setDataAtCell(i, 2, null, 'not');
                                                hot2.setDataAtCell(i, 3, null, 'not');
                                                hot2.setDataAtCell(i, 4, null, 'not');
                                                hot2.setDataAtCell(i, 5, 1, 'not');
                                            }
                                            hot2.selectCell(25, 5, 25, 5);
                                        }
                                        if (row === 25) {
                                            for (i = 26; i < 32; i++) {
                                                hot2.setDataAtCell(i, 1, null, 'not');
                                                hot2.setDataAtCell(i, 2, null, 'not');
                                                hot2.setDataAtCell(i, 3, null, 'not');
                                                hot2.setDataAtCell(i, 4, null, 'not');
                                                hot2.setDataAtCell(i, 5, 1, 'not');
                                            }
                                        }
                                    }
                                    else if (value == false) {
                                        if (row === 0) {
                                            for (i = 1; i < 5; i++) {
                                                hot2.setDataAtCell(i, 5, 0, 'not');
                                            }
                                        }
                                        if (row === 5) {
                                            for (i = 6; i < 19; i++) {
                                                hot2.setDataAtCell(i, 5, 0, 'not');
                                            }
                                        }
                                        if (row === 19) {
                                            for (i = 20; i < 25; i++) {
                                                hot2.setDataAtCell(i, 5, 0, 'not');
                                            }
                                        }
                                        if (row === 25) {
                                            for (i = 26; i < 32; i++) {
                                                hot2.setDataAtCell(i, 5, 0, 'not');
                                            }
                                        }
                                    }
                                    return true;
                                }
                            }
                        },

                        afterChange: function (changes, source) {
                            if (!changes || source == 'not') {
                                return;
                            }
                            var instance = this;
                            var SumDayWorking = 0;
                            changes.forEach(function (change) {
                                var row = change[0], col = change[1], newValue = change[3];
                            });

                        },
                    }
                };
                //===============RENDERER LUOI
                hot2 = new Handsontable(container2, setting2());

                var setting3 = function () {
                    return {
                        data: dataCalenderDefault1,
                        //================================Colunms=======
                        maxCols: 32,
                        minCols: 32,
                        colWidths: 'undefined',
                        currentColClassName: 'currentCol', //currentCol
                        sortIndicator: true,
                        //================================Rows=======
                        copyRowsLimit: 1000,
                        currentRowClassName: 'currentRow',
                        rowHeaders: true,
                        //================================Oder=======
                        stretchH: 'all',
                        commentedCellClassName: 'htCommentCell',
                        undo: true,
                        formulas: true,
                        wordWrap: false,
                        minRows: 5,
                        maxRows: 5,
                        mergeCells: [{ row: 4, col: 1, rowspan: 1, colspan: 32 },],
                        colHeaders:
                            ['Ca', 'Chọn tất cả', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10',
                                '11', '12', '13', '14', '15', '16', '17', '18', '19', '20',
                                '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31'],
                        columns: [
                            {
                                data: 'Name', readOnly: true, width: 200,
                                renderer: function (instance, td, row, col, prop, value) {
                                    var $textDefault = '';
                                    if (row == 0) {
                                        $textDefault = 'Ca 1';
                                        td.style.verticalAlign = 'middle';
                                    }
                                    if (row == 1) {
                                        $textDefault = 'Ca 2';
                                        td.style.verticalAlign = 'middle';
                                    }
                                    if (row == 2) {
                                        $textDefault = 'Tăng cường';
                                        td.style.verticalAlign = 'middle';
                                    }
                                    if (row == 3) {
                                        $textDefault = 'Quản lý xác nhận';
                                        td.style.verticalAlign = 'middle';
                                    }
                                    if (row == 4) {
                                        $textDefault = 'Tổng ngày công:';
                                        td.style.verticalAlign = 'middle';
                                        td.style.fontWeight = 'bold';
                                        td.style.color = 'green';
                                    }
                                    $(td).empty().append($textDefault);
                                }
                            },
                            {
                                data: 'checkAll', type: 'checkbox', width: 80, checkedTemplate: 1, uncheckedTemplate: 0,
                                renderer: function (instance, td, row, col, prop, value) {
                                    if (row === 4) {
                                        td.style.fontWeight = 'bold';
                                        td.style.color = 'green';
                                        td.style.textAlign = 'left';

                                        var Column1 = ["Name", "checkAll", "Ngay1", "Ngay2", "Ngay3", "Ngay4", "Ngay5"
                                            , "Ngay6", "Ngay7", "Ngay8", "Ngay9", "Ngay10"
                                            , "Ngay11", "Ngay12", "Ngay13", "Ngay14", "Ngay15"
                                            , "Ngay16", "Ngay17", "Ngay18", "Ngay19", "Ngay20"
                                            , "Ngay21", "Ngay22", "Ngay23", "Ngay24", "Ngay25"
                                            , "Ngay26", "Ngay27", "Ngay28", "Ngay29", "Ngay30", "Ngay31"];
                                        var DataTab2 = [];
                                        var ii = '';
                                        var sum = 0;
                                        $.each(dataCalenderDefault1, function (index, item) {
                                            $.each(Column1, function (count, element) {
                                                if (item[element] == 1 && index == 3) {
                                                    DataTab2.push({ vitricot: count, ngay: element });
                                                }
                                            });
                                        });
                                        if (DataTab2.length > 0) {
                                            sum = DataTab2.length - 1;
                                        }
                                        value = sum;
                                        Handsontable.NumericRenderer.apply(this, arguments);
                                    }
                                    else {
                                        Handsontable.CheckboxRenderer.apply(this, arguments);
                                    }
                                }
                            },
                            { data: 'Ngay1', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay2', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay3', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay4', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay5', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay6', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay7', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay8', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay9', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay10', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay11', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay12', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay13', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay14', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay15', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay16', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay17', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay18', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay19', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay20', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay21', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay22', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay23', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay24', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay25', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay26', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay27', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay28', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay29', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay30', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                            { data: 'Ngay31', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0 },
                        ],//Tạo view bảng

                        afterChange: function (changes, source) {
                            if (!changes || source == 'not') {
                                return;
                            }
                            var instance = this;
                            changes.forEach(function (change) {
                                var row = change[0], col = change[1], newValue = change[3];
                                if (col === 'checkAll') {
                                    var checkNgay = $('#txtDateRating').val();
                                    var dateChange3 = new Date(checkNgay);
                                    var monthChange3 = dateChange3.getMonth() + 1;
                                    var yearChange3 = dateChange3.getFullYear();
                                    var dateChange3 = dateChange3.getDate();
                                    var checkNhuanAfter3 = nam_nhuan(yearChange3);
                                    if (newValue === 1) {
                                        instance.setDataAtRowProp(row, 'Ngay1', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay2', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay3', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay4', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay5', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay6', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay7', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay8', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay9', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay10', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay11', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay12', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay13', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay14', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay15', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay16', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay17', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay18', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay19', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay20', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay21', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay22', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay23', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay24', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay25', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay26', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay27', 1, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay28', 1, 'edit');
                                        if (monthChange3 === 2 && checkNhuanAfter3 === 1) {
                                            instance.setDataAtRowProp(row, 'Ngay29', 1, 'edit');
                                            instance.setDataAtRowProp(row, 'Ngay30', 0, 'edit');
                                            instance.setDataAtRowProp(row, 'Ngay31', 0, 'edit');
                                        } else if (monthChange3 === 2 && checkNhuanAfter3 === 0) {
                                            instance.setDataAtRowProp(row, 'Ngay29', 0, 'edit');
                                            instance.setDataAtRowProp(row, 'Ngay30', 0, 'edit');
                                            instance.setDataAtRowProp(row, 'Ngay31', 0, 'edit');
                                        } else if (monthChange3 === 4 || monthChange3 === 6 || monthChange3 === 9 || monthChange3 === 11) {
                                            instance.setDataAtRowProp(row, 'Ngay29', 1, 'edit');
                                            instance.setDataAtRowProp(row, 'Ngay30', 1, 'edit');
                                            instance.setDataAtRowProp(row, 'Ngay31', 0, 'edit');
                                        } else {
                                            instance.setDataAtRowProp(row, 'Ngay29', 1, 'edit');
                                            instance.setDataAtRowProp(row, 'Ngay30', 1, 'edit');
                                            instance.setDataAtRowProp(row, 'Ngay31', 1, 'edit');
                                        };
                                    }
                                    else {
                                        instance.setDataAtRowProp(row, 'Ngay1', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay2', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay3', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay4', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay5', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay6', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay7', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay8', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay9', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay10', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay11', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay12', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay13', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay14', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay15', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay16', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay17', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay18', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay19', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay20', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay21', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay22', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay23', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay24', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay25', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay26', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay27', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay28', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay29', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay30', 0, 'edit');
                                        instance.setDataAtRowProp(row, 'Ngay31', 0, 'edit');
                                    }
                                }
                            });
                        },
                        cells: function (row, col, prop) {
                            var cellProperties = {};
                            if (row > 0 && col == 0) {
                                cellProperties.readOnly = true;
                            }
                            var checkNhuan = nam_nhuan(yearNow);

                            if (checkNhuan == 1) {
                                if (monthNow === 2 && (col === 31 || col === 32)) {
                                    cellProperties.readOnly = true;
                                }
                            }
                            else if (checkNhuan == 0) {
                                if (monthNow === 2 && (col === 30 || col === 31 || col === 32)) {
                                    cellProperties.readOnly = true;
                                }
                            }
                            else if ((monthNow === 4 || monthNow === 6 || monthNow === 9 || monthNow === 11) && col === 32) {
                                cellProperties.readOnly = true;
                            }
                            return cellProperties;
                        }
                    }
                };
                //===============RENDERER LUOI
                hot3 = new Handsontable(container3, setting3());
                $('#txtDateRating').change(function () {
                    var newValue = $('#txtDateRating').val();
                    var dateChange3 = new Date(newValue);
                    var yearChange3 = dateChange3.getFullYear();
                    var monthChange3 = dateChange3.getMonth() + 1;
                    var dateChange3 = dateChange3.getDate();
                    var checkNhuanAfter3 = nam_nhuan(yearChange3);
                    if (monthChange3 === 2 && checkNhuanAfter3 === 1) {
                        hot3.updateSettings({
                            cells: function (row, col, prop) {
                                var cellProperties = {};
                                if (col === 31 || col === 32) {
                                    cellProperties.readOnly = true;
                                }
                                return cellProperties;
                            }
                        });
                    }
                    if (monthChange3 === 2 && checkNhuanAfter3 === 0) {
                        hot3.updateSettings({
                            cells: function (row, col, prop) {
                                var cellProperties = {};
                                if (col === 30 || col === 31 || col === 32) {
                                    cellProperties.readOnly = true;
                                }
                                return cellProperties;
                            }
                        });
                    }
                    if (monthChange3 === 4 || monthChange3 === 6 || monthChange3 === 9 || monthChange3 === 11) {
                        hot3.updateSettings({
                            cells: function (row, col, prop) {
                                var cellProperties = {};
                                if (col === 32) {
                                    cellProperties.readOnly = true;
                                }
                                return cellProperties;
                            }
                        });
                    };
                });

                var setting4 = function () {
                    return {
                        data: dataWorkingSecurity,
                        //================================Colunms=======
                        maxCols: 6,
                        minCols: 6,
                        colWidths: 'undefined',
                        currentColClassName: 'currentCol', //currentCol
                        sortIndicator: true,
                        //================================Rows=======
                        copyRowsLimit: 1000,
                        currentRowClassName: 'currentRow',
                        //================================Oder=======
                        stretchH: 'all',
                        commentedCellClassName: 'htCommentCell',
                        readOnlyCellClassName: 'htDimmed',
                        undo: true,
                        formulas: true,
                        wordWrap: true,
                        minRows: 18,
                        maxRows: 18,
                        colHeaders: ['Nội dung công việc', 'Làm tốt', 'Làm không tốt', 'Ghi chú'],
                        columns: [
                            {
                                data: 'Name', readOnly: true, width: 200,
                                renderer: function (instance, td, row, col, prop, value) {
                                    var $textDefault = '';
                                    $.each(dataTable2Name, function (index, item) {
                                        if (row == index) {
                                            $textDefault = item;
                                        }
                                    });
                                    td.style.textAlign = 'left';
                                    if (row === 10) {
                                        td.style.fontWeight = 'bold';
                                        td.style.color = 'green';
                                        td.style.backgroundColor = '#DDDDDD'
                                    }
                                    if (row === 14) {
                                        td.style.fontWeight = 'bold';
                                        td.style.color = 'green';
                                        td.style.backgroundColor = '#DDDDDD'
                                    }
                                    $(td).empty().append($textDefault);
                                }
                            },
                            {
                                data: 'Property1', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0, width: 100//,
                                //renderer: function (instance, td, row, col, prop, value) {
                                //    if (row === 10 || row === 14) {
                                //        Handsontable.TextRenderer.apply(this, arguments);
                                //    }
                                //    else {
                                //        Handsontable.CheckboxRenderer.apply(this, arguments);
                                //    }
                                //}
                            },
                            {
                                data: 'Property2', width: 30, type: 'checkbox', checkedTemplate: 1, uncheckedTemplate: 0, width: 100//,
                                //renderer: function (instance, td, row, col, prop, value) {
                                //    if (row === 10 || row === 14) {
                                //        Handsontable.TextRenderer.apply(this, arguments);
                                //    }
                                //    else {
                                //        Handsontable.CheckboxRenderer.apply(this, arguments);
                                //    }
                                //}
                            },
                            { data: 'Note', width: 30, type: 'text', width: 250 },
                        ],//Tạo view bảng

                        beforeChange: function (changes, source) {
                            if (source == 'not') return;
                            for (i = 0; i < changes.length; i++) {
                                var row = changes[i][0], col = changes[i][1];
                                if (col === 'Property1') {
                                    var value = changes[i][3];
                                    if (value == true) {
                                        hot4.setDataAtCell(row, 2, null, 'not');
                                        if (row === 0) {
                                            for (i = 0; i < 10; i++) {
                                                hot4.setDataAtCell(i, 1, 1, 'not');
                                                hot4.setDataAtCell(i, 2, null, 'not');
                                            }
                                        }
                                        if (row === 10) {
                                            for (i = 11; i < 14; i++) {
                                                hot4.setDataAtCell(i, 1, 1, 'not');
                                                hot4.setDataAtCell(i, 2, null, 'not');
                                            }
                                        }
                                        if (row === 14) {
                                            for (i = 15; i < 18; i++) {
                                                hot4.setDataAtCell(i, 1, 1, 'not');
                                                hot4.setDataAtCell(i, 2, null, 'not');
                                            }
                                        }
                                    }
                                    else if (value == false) {
                                        if (row === 0) {
                                            for (i = 0; i < 10; i++) {
                                                hot4.setDataAtCell(i, 1, 0, 'not');
                                            }
                                        }
                                        if (row === 10) {
                                            for (i = 11; i < 14; i++) {
                                                hot4.setDataAtCell(i, 1, 0, 'not');
                                            }
                                        }
                                        if (row === 14) {
                                            for (i = 15; i < 18; i++) {
                                                hot4.setDataAtCell(i, 1, 0, 'not');
                                            }
                                        }

                                    }
                                    return true;
                                }
                                if (col === 'Property2') {
                                    var value = changes[i][3];
                                    if (value == true) {
                                        hot4.setDataAtCell(row, 1, null, 'not');
                                        if (row === 0) {
                                            for (i = 0; i < 10; i++) {
                                                hot4.setDataAtCell(i, 1, null, 'not');
                                                hot4.setDataAtCell(i, 2, 1, 'not');
                                            }
                                        }
                                        if (row === 10) {
                                            for (i = 11; i < 14; i++) {
                                                hot4.setDataAtCell(i, 1, null, 'not');
                                                hot4.setDataAtCell(i, 2, 1, 'not');
                                            }
                                        }
                                        if (row === 14) {
                                            for (i = 15; i < 18; i++) {
                                                hot4.setDataAtCell(i, 1, null, 'not');
                                                hot4.setDataAtCell(i, 2, 1, 'not');
                                            }
                                        }
                                    }
                                    else if (value == false) {
                                        if (row === 0) {
                                            for (i = 0; i < 10; i++) {
                                                hot4.setDataAtCell(i, 2, 0, 'not');
                                            }
                                        }
                                        if (row === 10) {
                                            for (i = 11; i < 14; i++) {
                                                hot4.setDataAtCell(i, 2, 0, 'not');
                                            }
                                        }
                                        if (row === 14) {
                                            for (i = 15; i < 18; i++) {
                                                hot4.setDataAtCell(i, 2, 0, 'not');
                                            }
                                        }

                                    }
                                    return true;
                                }
                            }
                        },

                        afterChange: function (changes, source) {
                            if (!changes || source == 'not') {
                                return;
                            }
                            var instance = this;
                            var SumDayWorking = 0;
                            changes.forEach(function (change) {
                                var row = change[0], col = change[1], newValue = change[3];
                            });

                        },
                    }
                };
                //===============RENDERER LUOI
                hot4 = new Handsontable(container4, setting4());


                $('#captionHot1').html('Qua quá trình xem xét tại shop có đánh giá tình hình vệ sinh như sau: ').css('font-weight', 'bold');
                $('#captionHot2').html('Chất lượng công việc: ').css('font-weight', 'bold');
                $('#txtevaluator').val(dataPSM[0].text);
                $('#txtaddress').val(shopDetail);
                $('#status').change(function () {
                    if ($('#status').val() == 1) {
                        $('#form-TapVu').show();
                        $('#form-BaoVe').hide();
                        $('#Security-Company').hide();
                        $('#DateRating').hide();
                        $('#txt-Assigner').removeClass('col-md-3').addClass('col-md-8');
                        $('#captionHot1').show();
                        $('#captionHot2').show();
                        $('#handsontableEx').show();
                        $('#handsontableEx2').show();
                        $('#captionHot3').hide();
                        $('#captionHot4').hide();
                        $('#handsontableEx3').hide();
                        $('#handsontableEx4').hide();
                    }
                    if ($('#status').val() == 2) {
                        $('#form-TapVu').hide();
                        $('#form-BaoVe').show();
                        $('#Security-Company').show();
                        $('#DateRating').show();
                        $('#txt-Assigner').removeClass('col-md-8').addClass('col-md-3');
                        $('#captionHot1').hide();
                        $('#captionHot2').hide();
                        $('#handsontableEx').hide();
                        $('#handsontableEx2').hide();
                        $('#captionHot3').show();
                        $('#captionHot4').show();
                        $('#handsontableEx3').show();
                        hot3.render();
                        $('#handsontableEx4').show();
                        hot4.render();
                    }
                });
            });
        });

        $btnSend.on('click', function () {

            //Kiểm tra dữ liệu các row.
            var data = new FormData();
            // LẤY DATA CHO CAC TABLE     
            var dataTable1 = hot1.getData();
            var dataTable2 = hot2.getData();
            var dataTable3 = hot3.getData();
            var dataTable4 = hot4.getData();

            // TAB Vệ sinh
            var Column = ["Name", "checkAll", "Ngay1", "Ngay2", "Ngay3", "Ngay4", "Ngay5"
                , "Ngay6", "Ngay7", "Ngay8", "Ngay9", "Ngay10"
                , "Ngay11", "Ngay12", "Ngay13", "Ngay14", "Ngay15"
                , "Ngay16", "Ngay17", "Ngay18", "Ngay19", "Ngay20"
                , "Ngay21", "Ngay22", "Ngay23", "Ngay24", "Ngay25"
                , "Ngay26", "Ngay27", "Ngay28", "Ngay29", "Ngay30", "Ngay31"];
            var DataTab1 = [];
            var ii = '';
            var chuoiRow1 = '', chuoiRow2 = '', Sum1 = 0, Thang = '';
            $.each(dataTable1, function (index, item) {
                $.each(Column, function (count, element) {
                    if (item[element] == 1 && index == 0 && element !== 'Name' && element != "checkAll") {
                        chuoiRow1 += '1,';
                    }
                    else if ((item[element] == 0 || item[element] == null) && index == 0 && element !== 'Name' && element != "checkAll") {
                        chuoiRow1 += '0,';
                    }

                    if (item[element] == 1 && index == 1 && element !== 'Name' && element != "checkAll") {
                        chuoiRow2 += '1,';
                        Sum1 += 1
                    }
                    else if ((item[element] == 0 || item[element] == null) && index == 1 && element !== 'Name' && element != "checkAll") {
                        chuoiRow2 += '0,';
                    }
                });
                if (index === 0 && (item.Name !== null && item.Name !== '' && item.Name !== undefined)) {
                    Thang = item.Name.split('/')[1].toString() + '/' + item.Name.split('/')[2].toString();
                }
            });

            // KHAI BAO BIEN TRA VE
            var dataReturn = [];

            dataReturn.push(
                {
                    Property10: null,
                    Property1: "",
                    Property2: $('#txthousekeeper').val(),
                    Property3: "",
                    Property4: chuoiRow1,
                    Property5: chuoiRow2,
                    Property6: null,
                    Property7: null,
                    Property9: Thang,
                    Quantity: 1,
                    Quantity1: 1,
                    Sum: Sum1,
                    ShopCode: null,
                    EmployeeCode: null,
                    Note: null
                }
            );

            var dataCheckTale2 = $.grep(dataTable2, function (item, index) {
                return (item.Property1 === null || item.Property1 === '' || item.Property1 === undefined || item.Property1 == 0)
                    && (item.Property2 === null || item.Property2 === '' || item.Property2 === undefined || item.Property2 == 0)
                    && (item.Property3 === null || item.Property3 === '' || item.Property3 === undefined || item.Property3 == 0)
                    && (item.Property4 === null || item.Property4 === '' || item.Property4 === undefined || item.Property4 == 0)
                    && (item.Property5 === null || item.Property5 === '' || item.Property5 === undefined || item.Property5 == 0)
                    && index !== 0 && index !== 5 && index !== 19 && index !== 25;
            });

            if (dataCheckTale2.length === 0) {
                if (Thang == null || Thang == '' || Thang == undefined) {
                    XFunction.RenderMessage('error', 'Vui lòng chọn ngày tháng đánh giá!');
                    return false;
                }
                if ($('#txthousekeeper').val() == null || $('#txthousekeeper').val() == '' || $('#txthousekeeper').val() == undefined) {
                    XFunction.RenderMessage('error', 'Tên nhân viên tạp vụ không được bỏ trống!');
                    return false;
                }
            }

            $.each(dataTable2, function (index, item) {
                $.each(dataTable1_All, function (count, element) {
                    if (index == count) {
                        item.Name = element.Code;
                    }
                });
                dataReturn.push({
                    Property10: item.Name,
                    Property1: item.Property1,
                    Property2: item.Property2,
                    Property3: item.Property3,
                    Property4: item.Property4,
                    Property5: item.Property5,
                    Property6: null,
                    Property7: null,
                    Property9: null,
                    Quantity: 1,
                    Quantity1: 2,
                    Sum: null,
                    ShopCode: null,
                    EmployeeCode: null,
                    Note: item.Note
                });
            });

            // TAB Bảo vệ
            var Column1 = ["Name", "checkAll", "Ngay1", "Ngay2", "Ngay3", "Ngay4", "Ngay5"
                , "Ngay6", "Ngay7", "Ngay8", "Ngay9", "Ngay10"
                , "Ngay11", "Ngay12", "Ngay13", "Ngay14", "Ngay15"
                , "Ngay16", "Ngay17", "Ngay18", "Ngay19", "Ngay20"
                , "Ngay21", "Ngay22", "Ngay23", "Ngay24", "Ngay25"
                , "Ngay26", "Ngay27", "Ngay28", "Ngay29", "Ngay30", "Ngay31"];
            var DataTab2 = [];
            var ii = '';
            var chuoiRow3 = '', chuoiRow4 = '', chuoiRow5 = '', chuoiRow6 = '', Sum2 = 0;
            $.each(dataTable3, function (index, item) {
                $.each(Column1, function (count, element) {
                    if (item[element] == 1 && index == 0 && element !== 'Name' && element != "checkAll") {
                        chuoiRow3 += '1,';
                    }
                    else if ((item[element] == 0 || item[element] == null) && index == 0 && element !== 'Name' && element != "checkAll") {
                        chuoiRow3 += '0,';
                    };

                    if (item[element] == 1 && index == 1 && element !== 'Name' && element != "checkAll") {
                        chuoiRow4 += '1,';
                        Sum1 += 1
                    }
                    else if ((item[element] == 0 || item[element] == null) && index == 1 && element !== 'Name' && element != "checkAll") {
                        chuoiRow4 += '0,';
                    };

                    if (item[element] == 1 && index == 2 && element !== 'Name' && element != "checkAll") {
                        chuoiRow5 += '1,';
                    }
                    else if ((item[element] == 0 || item[element] == null) && index == 2 && element !== 'Name' && element != "checkAll") {
                        chuoiRow5 += '0,';
                    };

                    if (item[element] == 1 && index == 3 && element !== 'Name' && element != "checkAll") {
                        chuoiRow6 += '1,';
                        Sum2 += 1
                    }
                    else if ((item[element] == 0 || item[element] == null) && index == 3 && element !== 'Name' && element != "checkAll") {
                        chuoiRow6 += '0,';
                    };
                });
            });
            dataReturn.push(
                {
                    Property10: null,
                    Property1: $('#txtSecurity-Company').val(),
                    Property2: "",
                    Property3: $('#txtsecuriter').val(),
                    Property4: chuoiRow3,
                    Property5: chuoiRow4,
                    Property6: chuoiRow5,
                    Property7: chuoiRow6,
                    Property9: $('#txtDateRating').val(),
                    Quantity: 2,
                    Quantity1: 1,
                    Sum: Sum2,
                    ShopCode: null,
                    EmployeeCode: null,
                    Note: null
                }
            );

            var dataCheckTale4 = $.grep(dataTable4, function (item, index) {
                return (item.Property1 === null || item.Property1 === '' || item.Property1 === undefined || item.Property1 == 0)
                    && (item.Property2 === null || item.Property2 === '' || item.Property2 === undefined || item.Property2 == 0)
                    && (index !== 10 && index !== 14);
            });

            if (dataCheckTale4.length == 0) {
                if (($('#txtSecurity-Company').val() == null || $('#txtSecurity-Company').val() == '' || $('#txtSecurity-Company').val() == undefined)
                    && ($('#txtsecuriter').val() == null || $('#txtsecuriter').val() == '' || $('#txtsecuriter').val() == undefined)) {
                    XFunction.RenderMessage('error', 'Tên công ty bảo vệ hoặc nhân viên bảo vệ không được bỏ trống!');
                    return false;
                }
            }

            $.each(dataTable4, function (index, item) {
                $.each(dataTable2_All, function (count, element) {
                    if (index == count) {
                        item.Name = element.Code;
                    }
                });
                dataReturn.push({
                    Property10: item.Name,
                    Property1: item.Property1,
                    Property2: item.Property2,
                    Property3: null,
                    Property4: null,
                    Property5: null,
                    Property6: null,
                    Property7: null,
                    Property9: null,
                    Quantity: 2,
                    Quantity1: 2,
                    Sum: null,
                    ShopCode: null,
                    EmployeeCode: null,
                    Note: item.Note
                });
            });


            if (dataCheckTale2.length > 0 && dataCheckTale4.length > 0) {
                XFunction.RenderMessage('error', 'Vui lòng điền đầy đủ thông tin một trong hai mục đánh giá!');
                return false;
            }
            //console.log(dataReturn); return false;
            //Lấy data
            data.append("Details", JSON.stringify(dataReturn));
            data.append("DetailsLimited", JSON.stringify([]));
            data.append("Description", catagoryInfo.Description);

            var categories = $('#Title').val();
            categories = categories.replace('- Tạp vụ', 'Tạp vụ');
            data.append("TitleRequest", categories);
            data.append("typeId", catagoryInfo.Id);

            data.append("TimeFutureFinish", $('#TimeFutureFinish').val());
            data.append("Cc", $('#Cc').val());
            data.append("sender", $('#sender').val());
            data.append("fileUpload", $('#fileUpload').val());
            data.append("dateFrom", $('#dateFrom').val());
            data.append("dateTo", $('#dateTo').val());
            data.append("timeSend", $('#timeSend').val());
            data.append("Message", $('.note-editable').text());

            //Sử dụng ajax
            //console.log(dataReturn);return;
            $('#myModalWatting').modal({ backdrop: 'static', keyboard: false, show: true });

            $.ajax({
                type: "POST",
                url: "/Requests/EvaluationForm",
                contentType: false,
                processData: false,
                data: data,

                success: function (result) {
                    $('#myModalWatting').modal('hide');
                    var win = window.open('/Home', '_self');
                },
                error: function () {
                    $('#myModalWatting').modal('hide');
                    XFunction.RenderMessage('error', 'Tạo request bị lỗi');
                    return;
                }
            });
        });

    };       //đánh giá chất lượng vệ sinh và bảo vệ tạp vụ

    //  ===154:Bill Vận chuyển===
    function contruct_154() {
        $('.compose-message').hide();
        $('#detail').show();
        $('#sum-total').show();  // not support dowload file
        $('#handsontableEx').css('overflow', 'hidden');
        $areaDowloadAndImport.show();
        $('#FileSupport').hide();
        $('#MauTaoBill').show();
        var DefaultValueEmty = function (p_Value) {
            var l_ValueReturn = '';
            if (!!p_Value) {
                l_ValueReturn = p_Value;
            } else {
                l_ValueReturn = '';
            }
            if (p_Value instanceof Array) {
                l_ValueReturn = (!!p_Value && p_Value.length > 0) ? p_Value.join(",") : "";
            }
            return l_ValueReturn;
        }

        //Load list phòng ban
        var g__Data__ShopPhongBan = [], g__Data__ShopPhongBan__Name = [];
        $('#myModalWatting').modal({ backdrop: 'static', keyboard: false, show: true });
        $.get('/Requests/GetPhongBan', function (p_ActionResult) {
            g__Data__ShopPhongBan = [], g__Data__ShopPhongBan__Name = [];
            if (!!p_ActionResult && p_ActionResult.length > 0) {
                g__Data__ShopPhongBan = p_ActionResult;
                $.each(p_ActionResult, function (index, item) {
                    g__Data__ShopPhongBan__Name.push(item.Code + '--' + item.NAME);
                });
            }
            else{
                XFunction.RenderMessage('error', 'Có lỗi khi tải Danh sách Phòng ban nhận. Vui lòng reload lại trang!');
                return false;                
            }
            ////////console.log('g__Data__ShopPhongBan:', g__Data__ShopPhongBan);
            ////////console.log('g__Data__ShopPhongBan__Name:', g__Data__ShopPhongBan__Name);

            $.get('/Requests/KiemTraThongTinUser', function (response_IsValidUser) {
                if (!!response_IsValidUser && response_IsValidUser.length > 0) {
                    var data_SenderInfo = response_IsValidUser;

                    //▼	Edit - VietMXH - 06/10/2020 - BillVC: Cho chọn NVC==================================================
                    //▲	Edit - VietMXH - 06/10/2020 - BillVC: Cho chọn NVC==================================================
                                        
                    //▼	Edit - VietMXH - 20/11/2019 - Bill VC: Người nhận TT ngay==================================================
                    //  ===Load danh sách Hình thức thanh toán===
                    var sourceMucDichTuyen = ['Người gửi TT', 'Người nhận TT', 'Người nhận TT ngay'];
                    //▲	Edit - VietMXH - 20/11/2019 - Bill VC: Người nhận TT ngay==================================================
                    
                    //  ===Load Địa chỉ của User đang Login mặc định lên lưới===
                    var g__Data__UserAddress = [], g__Data__UserAddress__Address = [];
                    var g__Void__GetUserAddress = function() {
                        g__Data__UserAddress = [], g__Data__UserAddress__Address = [];
                        $.ajax({
                            async: false,
                            url: "/Requests/GoiYThongTinDiaChiUser",
                            type: "GET",
                            data: null,
                            error: function () {
                                XFunction.RenderMessage('error', 'Lỗi: /Requests/GoiYThongTinDiaChiUser!');
                            },
                            success: function (p_ActionResult) {
                                if (!!p_ActionResult && p_ActionResult.length > 0) {
                                    g__Data__UserAddress = p_ActionResult;
                                    $.each(p_ActionResult, function (index, item) {
                                        g__Data__UserAddress__Address.push(item.Address);
                                    });
                                }
                            }
                        });
                    };
                    g__Void__GetUserAddress();
                    ////////console.log('g__Data__UserAddress:', g__Data__UserAddress);
                    ////////console.log('g__Data__UserAddress__Address:', g__Data__UserAddress__Address);
                    
                    $('#myModalWatting').modal('hide');

                    //  ===Load Địa chỉ Shop/Phòng ban===
                    var g__Data__DiaChiShopPhongBan = [], g__Data__DiaChiShopPhongBan__Name = [];
                    var g__Void__GetDiaChiShopPhongBan = function() {
                        g__Data__DiaChiShopPhongBan = [], g__Data__DiaChiShopPhongBan__Name = [];
                        $.ajax({
                            async: false,
                            url: "/Requests/GoiYThongTinDiaChiPhongBan",
                            type: "GET",
                            data: { MaPhongBan: '' },
                            error: function () {
                                XFunction.RenderMessage('error', 'Lỗi: /Requests/GoiYThongTinDiaChiPhongBan!');
                            },
                            success: function (p_ActionResult) {
                                if (!!p_ActionResult && p_ActionResult.length > 0) {
                                    g__Data__DiaChiShopPhongBan = p_ActionResult;
                                    $.each(p_ActionResult, function (index, item) {
                                        g__Data__DiaChiShopPhongBan__Name.push(item.Address);
                                    });
                                };
                            }
                        });
                    };
                    g__Void__GetDiaChiShopPhongBan();

                    //  ===Load Danh sách Tỉnh Thành===
                    var g__Data__TinhThanh = [], g__Data__TinhThanh__Name = [];
                    var g__Void__GetTinhThanh = function() {
                        g__Data__TinhThanh = [], g__Data__TinhThanh__Name = [];
                        $.ajax({
                            async: false,
                            url: "/Requests/LayDanhSachTinhThanh",
                            type: "GET",
                            data: null,
                            error: function () {
                                XFunction.RenderMessage('error', 'Lỗi: /Requests/LayDanhSachTinhThanh!');
                            },
                            success: function (p_ActionResult) {
                                if (!!p_ActionResult && p_ActionResult.length > 0) {
                                    g__Data__TinhThanh = p_ActionResult;
                                    $.each(p_ActionResult, function (index, item) {
                                        g__Data__TinhThanh__Name.push(item.Name);
                                    });
                                };
                            }
                        });
                    };
                    g__Void__GetTinhThanh();

                    //  ===Load Danh sách Quận Huyện===
                    var g__Data__QuanHuyen = [], g__Data__QuanHuyen__Name = [];
                    var g__Void__GetQuanHuyen = function() {
                        g__Data__QuanHuyen = [], g__Data__QuanHuyen__Name = [];
                        $.ajax({
                            async: false,
                            url: "/Requests/LayDanhSachQuanHuyenCuaTinhThanhPho",
                            type: "GET",
                            data: { idTinhThanh: '' },
                            error: function () {
                                XFunction.RenderMessage('error', 'Lỗi: /Requests/LayDanhSachQuanHuyenCuaTinhThanhPho!');
                            },
                            success: function (p_ActionResult) {
                                if (!!p_ActionResult && p_ActionResult.length > 0) {
                                    g__Data__QuanHuyen = p_ActionResult;
                                    $.each(p_ActionResult, function (index, item) {
                                        g__Data__QuanHuyen__Name.push(item.Name);
                                    });
                                };
                            }
                        });
                    };
                    g__Void__GetQuanHuyen();

                    //  ===Load Danh sách Nhà vận chuyển===
                    var g__Data__Transporters = [], g__Data__Transporters__Name = [];
                    var g__Void__GetTransporters = function() {
                        g__Data__Transporters = [], g__Data__Transporters__Name = [];
                        $.ajax({
                            async: false,
                            url: "/Requests/GetTranderServiceBO",
                            type: "GET",
                            data: null,
                            error: function () {
                                XFunction.RenderMessage('error', 'Lỗi: /Requests/GetTranderServiceBO!');
                            },
                            success: function (p_ActionResult) {
                                if (!!p_ActionResult && p_ActionResult.length > 0) {
                                    g__Data__Transporters = p_ActionResult;
                                    $.each(p_ActionResult, function (index, item) {
                                        g__Data__Transporters__Name.push(item.Name);
                                    });
                                };
                            }
                        });
                    };
                    g__Void__GetTransporters();

                    //  ===Load Danh sách Dịch vụ của NVC===
                    var g__Data__TransportServices = [], g__Data__TransportServices__Name = [];
                    var g__Void__GetTransportServices = function() {
                        g__Data__TransportServices = [], g__Data__TransportServices__Name = [];
                        $.ajax({
                            async: false,
                            url: "/Requests/LayDanhSachDichVuCanChuyen",
                            type: "GET",
                            data: { Group: '' },
                            error: function () {
                                XFunction.RenderMessage('error', 'Lỗi: /Requests/LayDanhSachDichVuCanChuyen!');
                            },
                            success: function (p_ActionResult) {
                                if (!!p_ActionResult && p_ActionResult.length > 0) {
                                    $.each(p_ActionResult, function (index, item) {
                                        g__Data__TransportServices.push(item);
                                        g__Data__TransportServices__Name.push(item.Name);
                                    });
                                };
                            }
                        });
                    };
                    g__Void__GetTransportServices();

                    //  ===Lấy "Dịch vụ" vận chuyển===
                    var g__Data__DichVuVanChuyen = [], g__Data__DichVuVanChuyen__Name = [''];
                    var g__Void__GetHinhThucVanChuyenPOS = function(){
                        g__Data__DichVuVanChuyen = [], g__Data__DichVuVanChuyen__Name = [''];
                        $.ajax({
                            async: false,
                            url: "/Requests/Create__BillVanChuyen__GetHinhThucVanChuyenPOS",
                            type: "GET",
                            data: null,
                            error: function () {
                                XFunction.RenderMessage('error', 'Lỗi: /Requests/Create__BillVanChuyen__GetHinhThucVanChuyenPOS!');
                            },
                            success: function (p_ActionResult) {
                                if (!!p_ActionResult && p_ActionResult.length > 0) {
                                    g__Data__DichVuVanChuyen = p_ActionResult;
                                    $.each(p_ActionResult, function (p_Index, p_Item) {
                                        g__Data__DichVuVanChuyen__Name.push(p_Item.Name);
                                    });
                                }
                            }
                        });
                    };
                    g__Void__GetHinhThucVanChuyenPOS();
                    ////////console.log('g__Data__DichVuVanChuyen:', g__Data__DichVuVanChuyen);
                    ////////console.log('g__Data__DichVuVanChuyen__Name:', g__Data__DichVuVanChuyen__Name);

                    //  ===Hàm Lấy Phân tuyến===
                    var g__Data__PhanTuyen = [];
                    var Func__GetPhanTuyen = function(p_IdTinhDi, p_IdTinhDen, p_ShopDiB1, p_ShopDenB1, p_TrongLuong, p_DichVu, p_Key){
                        console.log('Func__GetPhanTuyen(', p_IdTinhDi, ',', p_IdTinhDen, ',', p_ShopDiB1, ',', p_ShopDenB1, ',', p_TrongLuong, ',', p_DichVu, ',', p_Key, ')');
                        var l__List__MaNVC = [];
                        if ((!!p_IdTinhDi && p_IdTinhDi > 0)
                            && (!!p_IdTinhDen && p_IdTinhDen > 0)
                            && (!!p_TrongLuong && p_TrongLuong >= 0)
                            && (!!p_DichVu)
                            ) {
                            $.ajax({
                                async: false,
                                url: "/Requests/Create__BillVanChuyen__GetPhanTuyen",
                                type: "GET",
                                data: { IdTinhDi: p_IdTinhDi, IdTinhDen: p_IdTinhDen, ShopDiB1: p_ShopDiB1, ShopDenB1: p_ShopDenB1, TrongLuong: p_TrongLuong, DichVu: p_DichVu },
                                error: function () {
                                    XFunction.RenderMessage('error', 'Lỗi: /Requests/Create__BillVanChuyen__GetPhanTuyen!');
                                },
                                success: function (p_ActionResult) {
                                    if (!!p_ActionResult && p_ActionResult.length > 0) {
                                        l__List__MaNVC = p_ActionResult;
                                    }
                                }
                            });
                        }
                        ////////console.log('l__List__MaNVC', l__List__MaNVC);
                        return l__List__MaNVC;
                    };

                    //=========== Load lưới

                    //▼	Edit - VietMXH - 06/10/2020 - BillVC: Cho chọn NVC==================================================
                    //▲	Edit - VietMXH - 06/10/2020 - BillVC: Cho chọn NVC==================================================

                    var setting = function () {
                        return {
                            data: dataHcCreateHandsontable,
                            columnSorting: true,
                            rowHeaders: true,
                            colHeaders: true,
                            formulas: true,
                            comments: true,
                            autoColumnSize: true,
                            currentRowClassName: '',
                            currentColClassName: 'currentCol',
                            contextMenu: true,
                            multiSelect: true,
                            minSpareRows: 5,
                            stretchH: 'all',
                            undo: true,
                            formulas: true,
                            wordWrap: true,
                            copyPaste: true,

                            //▼	Edit - VietMXH - 06/10/2020 - BillVC: Cho chọn NVC==================================================
                            viewportColumnRenderingOffset: 20, //  Thêm thuộc tính này để khỏi lệch "nestedHeaders" khi di chuyển con trỏ
                            //▲	Edit - VietMXH - 06/10/2020 - BillVC: Cho chọn NVC==================================================
                            
                            colHeaders: [
                                'Địa chỉ gửi',
                                'Tỉnh/TP gửi',
                                'Quận/Huyện gửi',
                                'Số điện thoại người gửi',
                                'Shop/PB nhận',
                                'Địa chỉ nhận',
                                'Tỉnh/TP nhận',
                                'Quận/huyện nhận',
                                'Họ tên người nhận',
                                'Số điện thoại người nhận',
                                'Loại hàng',
                                'Tên hàng hóa chuyển',
                                'Số lượng',
                                'Số kiện',
                                'Trọng lượng (Kg)',
                                'Dịch vụ',
                                'Nhà vận chuyển',
                                'Cước phí (Min)',
                                'Hình thức thanh toán',
                                'Ghi chú',
                                ////////////'NVC Tối ưu?', 'Object__Data__PhanTuyen',
                            ],
                            columns: [
                                { data: 'DiaChiGui', type: 'autocomplete', className: 'htLeft', source: g__Data__UserAddress__Address, width: 300 },
                                { data: 'TenTinhThanhGui', type: 'dropdown', source: g__Data__TinhThanh__Name, width: 150 },
                                { data: 'TenQuanHuyenGui', type: 'dropdown', source: [], width: 150 },
                                { data: 'SoDienThoaiNguoiGui', type: 'text', className: 'htRight', width: 200 },
                                { data: 'TenShopPhongBanNhan', type: 'autocomplete', className: 'htLeft', source: g__Data__ShopPhongBan__Name, width: 300 },
                                { data: 'DiaChiNhan', type: 'autocomplete', source: [], className: 'htLeft', width: 300 },
                                { data: 'TenTinhThanhNhan', type: 'dropdown', source: g__Data__TinhThanh__Name, width: 150 },
                                { data: 'TenQuanHuyenNhan', type: 'dropdown', source: [], width: 150 },
                                { data: 'HoTenNguoiNhan', type: 'text', className: 'htLeft', width: 200 },
                                { data: 'SoDienThoaiNguoiNhan', type: 'text', className: 'htRight', width: 200 },
                                { data: 'typeHH', type: 'dropdown', source: ['Hàng hóa', 'Thư từ'], allowInvalid: false, width: 100 },
                                { data: 'ProductName', type: 'text', className: 'htLeft', width: 300 },
                                { data: 'Quantity', type: 'numeric', className: 'htRight', format: '0,00', validator: Validater.quantity, allowInvalid: false },
                                { data: 'NumberOfParcels', type: 'numeric', className: 'htRight', format: '0,00', validator: Validater.quantity, allowInvalid: false },
                                { data: 'Weight', type: 'text', className: 'htRight' },
                                { data: 'Service', type: 'dropdown', source: g__Data__DichVuVanChuyen__Name, allowInvalid: false, width: 150 },

                                //▼	Edit - VietMXH - 06/10/2020 - BillVC: Cho chọn NVC==================================================
                                { data: 'Transporters', type: 'dropdown', source: g__Data__Transporters__Name, readOnly: false, width: 200 },
                                //▲	Edit - VietMXH - 06/10/2020 - BillVC: Cho chọn NVC==================================================

                                { data: 'CuocPhiMin', type: 'numeric', format: "0,000", readOnly: true, width: 100 },
                                { data: 'Payments', type: 'dropdown', source: sourceMucDichTuyen, allowInvalid: false, width: 150 },
                                { data: 'Note', type: 'text', className: 'htLeft', width: 300 },
                                ////////////{ data: 'Is_NVCToiUu', type: 'text' }, { data: 'Object__Data__PhanTuyen', type: 'text' },
                            ],//Tạo view bảng
                            
                            beforeChange: function (changes, source) {
                                if (source == 'not') return;
                                var instance = this;
                                changes.forEach(function (change) {
                                    var row = change[0], col = change[1], oldValue = change[2], newValue = change[3];
                                    switch (col) {
                                        case 'Weight':  //  Trọng lượng (Kg)
                                            if (col === 'Weight') {
                                                if (!!newValue) {
                                                    newValue = newValue.toString().replace(',', '.');
                                                    newValue = parseFloat(newValue).toFixed(2);
                                                    if (isNaN(newValue)) {
                                                        newValue = parseFloat(0).toFixed(2);
                                                    }
                                                    change[3] = newValue;
                                                }
                                            }
                                            break;
                                        default:
                                    }
                                });
                            },
                            afterChange: function (changes, source) {
                                if (!changes)
                                    return;
                                var instance = this;
                                changes.forEach(function (change) {
                                    var row = change[0], col = change[1], oldValue = change[2], newValue = change[3];
                                    var cellProperties = {}, options;
                                    switch (col) {
                                        case 'DiaChiGui':
                                            //Xử lý cột địa chỉ gửi
                                            if (col === 'DiaChiGui') {
                                                console.log('DiaChiGui');
                                                if (!!newValue) {
                                                    var l__Data__DiaChiShopPhongBanGui = $.grep(g__Data__DiaChiShopPhongBan, function (p_Item, p_Index) {
                                                        return newValue == p_Item.Address && response_IsValidUser[0].OrganizationHierachyCode == p_Item.OrganizationHierachyCode;
                                                    });
                                                    if (!!l__Data__DiaChiShopPhongBanGui && l__Data__DiaChiShopPhongBanGui.length > 0) {   //  Địa chỉ cũ
                                                        instance.setDataAtRowProp(row, 'TenTinhThanhGui', l__Data__DiaChiShopPhongBanGui[0].TenTinh, 'not');
                                                        return;
                                                    }
                                                }
                                            };
                                            break;
                                        case 'TenTinhThanhGui':
                                            //Xử lý cột tỉnh thành gửi
                                            if (col === 'TenTinhThanhGui') {
                                                console.log('TenTinhThanhGui');
                                                var l_IdTinhDi = 0;
                                                var l_ShopDiB1 = '';
                                                if (!!newValue) {
                                                    var l__Data__TinhThanhGui = $.grep(g__Data__TinhThanh, function (item, index) {
                                                        return item.Name == newValue;
                                                    });
                                                    if (!!l__Data__TinhThanhGui && l__Data__TinhThanhGui.length > 0) {
                                                        var l__IDTinhThanhGui = l__Data__TinhThanhGui[0].ID;
                                                        l_IdTinhDi = l__IDTinhThanhGui;
                                                        var l__Data__QuanHuyenGui = $.grep(g__Data__QuanHuyen, function (item, index) {
                                                            return l__IDTinhThanhGui == item.CityID;
                                                        });
                                                        var l__Data__TenQuanHuyenGui = [];
                                                        $.each(l__Data__QuanHuyenGui, function (index, item) {
                                                            l__Data__TenQuanHuyenGui.push(item.Name);
                                                        });
                                                        if (!!l__Data__TenQuanHuyenGui && l__Data__TenQuanHuyenGui.length > 0) {

                                                            //▼	Edit - VietMXH - 06/10/2020 - BillVC: Cho chọn NVC==================================================
                                                            cellProperties = instance.getCellMeta(row, instance.propToCol('TenQuanHuyenGui'));
                                                            //▲	Edit - VietMXH - 06/10/2020 - BillVC: Cho chọn NVC==================================================

                                                            cellProperties.source = l__Data__TenQuanHuyenGui;
                                                            var l__DiaChiGui = instance.getDataAtRowProp(row, 'DiaChiGui')
                                                            var l__Data__DiaChiShopPhongBanGui = $.grep(g__Data__DiaChiShopPhongBan, function (p_Item, p_Index) {
                                                                return l__DiaChiGui == p_Item.Address && response_IsValidUser[0].OrganizationHierachyCode == p_Item.OrganizationHierachyCode;
                                                            });
                                                            if (!!l__Data__DiaChiShopPhongBanGui && l__Data__DiaChiShopPhongBanGui.length > 0) {
                                                                instance.setDataAtRowProp(row, 'TenQuanHuyenGui', l__Data__DiaChiShopPhongBanGui[0].TenHuyen, 'not');
                                                                l_ShopDiB1 = l__Data__DiaChiShopPhongBanGui[0].OrganizationHierachyCode;
                                                            }
                                                            else {
                                                                var l__TenQuanHuyenGui = instance.getDataAtRowProp(row, 'TenQuanHuyenGui');
                                                                instance.setDataAtRowProp(row, 'TenQuanHuyenGui', ((!!l__TenQuanHuyenGui) ? l__TenQuanHuyenGui : ''), 'not');
                                                            }
                                                        }
                                                        else {

                                                            //▼	Edit - VietMXH - 06/10/2020 - BillVC: Cho chọn NVC==================================================
                                                            cellProperties = instance.getCellMeta(row, instance.propToCol('TenQuanHuyenGui'));
                                                            //▲	Edit - VietMXH - 06/10/2020 - BillVC: Cho chọn NVC==================================================

                                                            cellProperties.source = [];
                                                            instance.setDataAtRowProp(row, 'TenQuanHuyenGui', '', 'not');
                                                        }
                                                    }
                                                    else {
                                                        instance.setDataAtRowProp(row, 'TenTinhThanhGui', '', 'not');
                                                        return;
                                                    }
                                                }
                                                else {

                                                    //▼	Edit - VietMXH - 06/10/2020 - BillVC: Cho chọn NVC==================================================
                                                    cellProperties = instance.getCellMeta(row, instance.propToCol('TenQuanHuyenGui'));
                                                    //▲	Edit - VietMXH - 06/10/2020 - BillVC: Cho chọn NVC==================================================

                                                    cellProperties.source = [];
                                                    instance.setDataAtRowProp(row, 'TenQuanHuyenGui', '', 'not');
                                                }

                                                //  ===Lấy NVC + Cước phí===
                                                if (DefaultValueEmty(oldValue) != DefaultValueEmty(newValue)) {
                                                    var l_IdTinhDen = 0;
                                                    var l__TenTinhThanhNhan = instance.getDataAtRowProp(row, 'TenTinhThanhNhan');
                                                    var l__Data__TinhThanhNhan = $.grep(g__Data__TinhThanh, function (item, index) {
                                                        return item.Name == l__TenTinhThanhNhan;
                                                    });
                                                    if (l__Data__TinhThanhNhan.length > 0) {
                                                        l_IdTinhDen = l__Data__TinhThanhNhan[0].ID;
                                                    }
                                                    var l_ShopDenB1 = '';
                                                    var l__TenShopPhongBanNhan = instance.getDataAtRowProp(row, 'TenShopPhongBanNhan');
                                                    if (!!l__TenShopPhongBanNhan) {
                                                        var l__MaShopPhongBanNhan = l__TenShopPhongBanNhan.split('--');
                                                        if (l__MaShopPhongBanNhan.length > 1) {
                                                            l_ShopDenB1 = l__MaShopPhongBanNhan[0];
                                                        };
                                                    }
                                                    var l_TrongLuong = instance.getDataAtRowProp(row, 'Weight');
                                                    var l_DichVu = instance.getDataAtRowProp(row, 'Service');
                                                    g__Data__PhanTuyen = Func__GetPhanTuyen(l_IdTinhDi, l_IdTinhDen, l_ShopDiB1, l_ShopDenB1, l_TrongLuong, l_DichVu, 'TenTinhThanhGui');
                                                    var l_Transporters = ((!!g__Data__PhanTuyen && g__Data__PhanTuyen.length > 0) ? g__Data__PhanTuyen[0].TenNVC : null);
                                                    instance.setDataAtRowProp(row, 'Transporters', l_Transporters, 'not');
                                                    var l_CuocPhiMin = ((!!g__Data__PhanTuyen && g__Data__PhanTuyen.length > 0) ? g__Data__PhanTuyen[0].CuocPhiMin : null);
                                                    instance.setDataAtRowProp(row, 'CuocPhiMin', l_CuocPhiMin, 'not');
                                                    instance.setDataAtRowProp(row, 'Object__Data__PhanTuyen', g__Data__PhanTuyen, 'not');
                                                }
                                            };
                                            break;
                                        case 'TenQuanHuyenGui':
                                            if (col === 'TenQuanHuyenGui') {
                                                if (!!newValue) {

                                                    //▼	Edit - VietMXH - 06/10/2020 - BillVC: Cho chọn NVC==================================================
                                                    cellProperties = instance.getCellMeta(row, instance.propToCol('TenQuanHuyenGui'));
                                                    //▲	Edit - VietMXH - 06/10/2020 - BillVC: Cho chọn NVC==================================================

                                                    var l__Data__TenQuanHuyenGui = cellProperties.source;
                                                    var l__Data__TenQuanHuyenGui__Filter = $.grep(l__Data__TenQuanHuyenGui, function(p_Item, p_Index) {
                                                        return p_Item == newValue;
                                                    });
                                                    if (!!l__Data__TenQuanHuyenGui__Filter && l__Data__TenQuanHuyenGui__Filter.length > 0) {
                                                        return;
                                                    }
                                                }
                                            }
                                            break;
                                        case 'TenShopPhongBanNhan':
                                            //Xử lý cột phòng ban - shop nhận
                                            if (col === 'TenShopPhongBanNhan') {
                                                console.log('case: TenShopPhongBanNhan');

                                                if (!!newValue) {
                                                    var l__Data__TenShopPhongBanNhan = $.grep(g__Data__ShopPhongBan__Name, function (value, number) {
                                                        return newValue.trim() === value.trim();
                                                    });
                                                    if (!!l__Data__TenShopPhongBanNhan && l__Data__TenShopPhongBanNhan.length > 0) {    //  Có Tên Shop/Phòng ban nhận
                                                        var l__MaShopPhongBanNhan = newValue.split('--')[0];
                                                        if (!!l__MaShopPhongBanNhan) {
                                                            var l__Data__DiaChiShopPhongBanNhan = $.grep(g__Data__DiaChiShopPhongBan, function (value, number) {
                                                                return value.OrganizationHierachyCode == l__MaShopPhongBanNhan;
                                                            });
                                                            var l__Data__DiaChiNhan = [];
                                                            $.each(l__Data__DiaChiShopPhongBanNhan, function (value, item) {
                                                                l__Data__DiaChiNhan.push(item.Address);
                                                            });

                                                            //▼	Edit - VietMXH - 06/10/2020 - BillVC: Cho chọn NVC==================================================
                                                            cellProperties = instance.getCellMeta(row, instance.propToCol('DiaChiNhan'));
                                                            //▲	Edit - VietMXH - 06/10/2020 - BillVC: Cho chọn NVC==================================================

                                                            cellProperties.source = l__Data__DiaChiNhan;

                                                            //  ===Ưu tiên 1: Shop===
                                                            var l__Data__DiaChiShopNhan = $.grep(g__Data__DiaChiShopPhongBan, function (item, index) {
                                                                return l__MaShopPhongBanNhan == item.OrganizationHierachyCode && (item.TypeAddress == 2);
                                                            });
                                                            if (!!l__Data__DiaChiShopNhan && l__Data__DiaChiShopNhan.length > 0) {
                                                                instance.setDataAtRowProp(row, 'DiaChiNhan', l__Data__DiaChiShopNhan[0].Address, 'not');
                                                                instance.setDataAtRowProp(row, 'SoDienThoaiNguoiNhan', l__Data__DiaChiShopNhan[0].SoDienThoaiShop, 'not');
                                                                instance.setDataAtRowProp(row, 'HoTenNguoiNhan', l__Data__DiaChiShopNhan[0].QuanLyShop, 'not');
                                                                return;
                                                            };

                                                            //  ===Ưu tiên 2: Phòng ban===
                                                            var l__Data__DiaChiPhongBanNhan = $.grep(g__Data__DiaChiShopPhongBan, function (item, index) {
                                                                return l__MaShopPhongBanNhan == item.OrganizationHierachyCode && (item.TypeAddress == 1);
                                                            });
                                                            if (!!l__Data__DiaChiPhongBanNhan && l__Data__DiaChiPhongBanNhan.length > 0) {
                                                                hot.setDataAtRowProp(row, 'DiaChiNhan', l__Data__DiaChiPhongBanNhan[0].Address, 'not');
                                                                return;
                                                            }                                                        

                                                            //  ===Ưu tiên 3: Địa chỉ ngoài===
                                                            var l__Data__DiaChiNgoaiNhan = $.grep(g__Data__DiaChiShopPhongBan, function (item, index) {
                                                                return l__MaShopPhongBanNhan == item.OrganizationHierachyCode && (item.TypeAddress == 3);
                                                            });
                                                            if (l__Data__DiaChiNgoaiNhan.length > 0) {
                                                                hot.setDataAtRowProp(row, 'DiaChiNhan', l__Data__DiaChiNgoaiNhan[0].Address, 'not');
                                                                return;
                                                            };
                                                            
                                                            var l__DiaChiNhan = instance.getDataAtRowProp(row, 'DiaChiNhan');
                                                            instance.setDataAtRowProp(row, 'DiaChiNhan', ((!!l__DiaChiNhan) ? l__DiaChiNhan : ''), 'not');
                                                            return;
                                                        }
                                                    }
                                                }

                                                //▼	Edit - VietMXH - 06/10/2020 - BillVC: Cho chọn NVC==================================================
                                                cellProperties = instance.getCellMeta(row, instance.propToCol('DiaChiNhan'));
                                                //▲	Edit - VietMXH - 06/10/2020 - BillVC: Cho chọn NVC==================================================

                                                cellProperties.source = [];
                                            };
                                            break;
                                        case 'DiaChiNhan':
                                            //Xử lý cột địa chỉ nhận
                                            if (col === 'DiaChiNhan') {
                                                console.log('DiaChiNhan');

                                                if (!!newValue) {
                                                    var l__TenShopPhongBanNhan = instance.getDataAtRowProp(row, 'TenShopPhongBanNhan');
                                                    if (!!l__TenShopPhongBanNhan) {
                                                        var l__TenShopPhongBanNhan__Split = l__TenShopPhongBanNhan.split('--');
                                                        var l__Data__DiaChiShopPhongBanNhan = [];
                                                        if (!!l__TenShopPhongBanNhan__Split && l__TenShopPhongBanNhan__Split.length > 1) {
                                                            l__Data__DiaChiShopPhongBanNhan = $.grep(g__Data__DiaChiShopPhongBan, function (value, number) {
                                                                return newValue == value.Address && l__TenShopPhongBanNhan__Split[0] == value.OrganizationHierachyCode;
                                                            });
                                                        };
                                                        if (!!l__Data__DiaChiShopPhongBanNhan && l__Data__DiaChiShopPhongBanNhan.length > 0) {
                                                            instance.setDataAtRowProp(row, 'TenTinhThanhNhan', l__Data__DiaChiShopPhongBanNhan[0].TenTinh, 'not');
                                                            return;
                                                        }
                                                    }
                                                }
                                            };
                                            break;
                                        case 'TenTinhThanhNhan':
                                            //Xử lý cột tỉnh nhận
                                            if (col === 'TenTinhThanhNhan') {
                                                console.log('TenTinhThanhNhan');
                                                var l_IdTinhDen = 0;
                                                var l_ShopDenB1 = '';
                                                if (!!newValue) {
                                                    var l__Data__TinhThanhNhan = $.grep(g__Data__TinhThanh, function (item, index) {
                                                        return item.Name == newValue;
                                                    });
                                                    if (!!l__Data__TinhThanhNhan && l__Data__TinhThanhNhan.length > 0) {
                                                        var l__IDTinhThanhNhan = l__Data__TinhThanhNhan[0].ID;
                                                        l_IdTinhDen = l__IDTinhThanhNhan;
                                                        var l__Data__QuanHuyenNhan = $.grep(g__Data__QuanHuyen, function (item, index) {
                                                            return l__IDTinhThanhNhan == item.CityID;
                                                        });
                                                        var l__Data__TenQuanHuyenNhan = [];
                                                        $.each(l__Data__QuanHuyenNhan, function (index, item) {
                                                            l__Data__TenQuanHuyenNhan.push(item.Name);
                                                        });
                                                        if (!!l__Data__TenQuanHuyenNhan && l__Data__TenQuanHuyenNhan.length > 0) {

                                                            //▼	Edit - VietMXH - 06/10/2020 - BillVC: Cho chọn NVC==================================================
                                                            cellProperties = instance.getCellMeta(row, instance.propToCol('TenQuanHuyenNhan'));
                                                            //▲	Edit - VietMXH - 06/10/2020 - BillVC: Cho chọn NVC==================================================

                                                            cellProperties.source = l__Data__TenQuanHuyenNhan;
                                                            var l__TenShopPhongBanNhan = instance.getDataAtRowProp(row, 'TenShopPhongBanNhan');
                                                            if (!!l__TenShopPhongBanNhan) {
                                                                var l__TenShopPhongBanNhan__Split = l__TenShopPhongBanNhan.split('--');
                                                                var l__MaShopPhongBanNhan = '';
                                                                if (l__TenShopPhongBanNhan__Split.length > 1) {
                                                                    l__MaShopPhongBanNhan = l__TenShopPhongBanNhan__Split[0];
                                                                    l_ShopDenB1 = l__TenShopPhongBanNhan__Split[0];
                                                                };
                                                                if (!!l__MaShopPhongBanNhan) {
                                                                    var l__DiaChiNhan = instance.getDataAtRowProp(row, 'DiaChiNhan');
                                                                    var l__Data__DiaChiShopPhongBan = $.grep(g__Data__DiaChiShopPhongBan, function (item, index) {
                                                                        return l__MaShopPhongBanNhan == item.OrganizationHierachyCode && l__DiaChiNhan == item.Address;
                                                                    });
                                                                    if (!!l__Data__DiaChiShopPhongBan && l__Data__DiaChiShopPhongBan.length > 0) {
                                                                        instance.setDataAtRowProp(row, 'TenQuanHuyenNhan', l__Data__DiaChiShopPhongBan[0].TenHuyen, 'not');
                                                                    }
                                                                    else {
                                                                        instance.setDataAtRowProp(row, 'TenQuanHuyenNhan', '', 'not');
                                                                    }
                                                                }
                                                                else {
                                                                    var l__Data__TenShopPhongBanNhan = $.grep(g__Data__ShopPhongBan__Name, function (value, number) {
                                                                        return value === l__TenShopPhongBanNhan;
                                                                    });
                                                                    if (!!l__Data__TenShopPhongBanNhan && l__Data__TenShopPhongBanNhan.length > 0) {  //  Đổi Tỉnh Thành mà có Tên Shop/Phòng ban nhận => Clear Quận Huyện
                                                                        instance.setDataAtRowProp(row, 'TenQuanHuyenNhan', '', 'not');
                                                                    }
                                                                }
                                                            }
                                                            else {
                                                                var l__TenQuanHuyenNhan = instance.getDataAtRowProp(row, 'TenQuanHuyenNhan');
                                                                instance.setDataAtRowProp(row, 'TenQuanHuyenNhan', ((!!l__TenQuanHuyenNhan) ? l__TenQuanHuyenNhan : ''), 'not');
                                                            }
                                                        }
                                                        else {

                                                            //▼	Edit - VietMXH - 06/10/2020 - BillVC: Cho chọn NVC==================================================
                                                            cellProperties = instance.getCellMeta(row, instance.propToCol('TenQuanHuyenNhan'));
                                                            //▲	Edit - VietMXH - 06/10/2020 - BillVC: Cho chọn NVC==================================================

                                                            cellProperties.source = [];
                                                            instance.setDataAtRowProp(row, 'TenQuanHuyenNhan', '', 'not');
                                                        }
                                                    }
                                                    else {
                                                        instance.setDataAtRowProp(row, 'TenTinhThanhNhan', '', 'not');
                                                        return;
                                                    }
                                                }
                                                else {

                                                    //▼	Edit - VietMXH - 06/10/2020 - BillVC: Cho chọn NVC==================================================
                                                    cellProperties = instance.getCellMeta(row, instance.propToCol('TenQuanHuyenNhan'));
                                                    //▲	Edit - VietMXH - 06/10/2020 - BillVC: Cho chọn NVC==================================================

                                                    cellProperties.source = [];
                                                    instance.setDataAtRowProp(row, 'TenQuanHuyenNhan', '', 'not');
                                                }
                                                
                                                //  ===Lấy NVC + Cước phí===
                                                if (DefaultValueEmty(oldValue) != DefaultValueEmty(newValue)) {
                                                    var l_IdTinhDi = 0;
                                                    var l__TenTinhThanhGui = instance.getDataAtRowProp(row, 'TenTinhThanhGui');
                                                    var l__Data__TinhThanhGui = $.grep(g__Data__TinhThanh, function (item, index) {
                                                        return item.Name == l__TenTinhThanhGui;
                                                    });
                                                    if (l__Data__TinhThanhGui.length > 0) {
                                                        l_IdTinhDi = l__Data__TinhThanhGui[0].ID;
                                                    }
                                                    var l_ShopDiB1 = '';
                                                    var l__DiaChiGui = instance.getDataAtRowProp(row, 'DiaChiGui');
                                                    var l__Data__UserAddressNhan = $.grep(g__Data__UserAddress, function (value, number) {
                                                        return l__DiaChiGui == value.Address;
                                                    });
                                                    if (l__Data__UserAddressNhan.length > 0) {
                                                        l_ShopDiB1 = l__Data__UserAddressNhan[0].OrganizationHierachyCode;
                                                    }
                                                    var l_TrongLuong = instance.getDataAtRowProp(row, 'Weight');
                                                    var l_DichVu = instance.getDataAtRowProp(row, 'Service');
                                                    g__Data__PhanTuyen = Func__GetPhanTuyen(l_IdTinhDi, l_IdTinhDen, l_ShopDiB1, l_ShopDenB1, l_TrongLuong, l_DichVu, 'TenTinhThanhNhan');
                                                    var l_Transporters = ((!!g__Data__PhanTuyen && g__Data__PhanTuyen.length > 0) ? g__Data__PhanTuyen[0].TenNVC : null);
                                                    instance.setDataAtRowProp(row, 'Transporters', l_Transporters, 'not');
                                                    var l_CuocPhiMin = ((!!g__Data__PhanTuyen && g__Data__PhanTuyen.length > 0) ? g__Data__PhanTuyen[0].CuocPhiMin : null);
                                                    instance.setDataAtRowProp(row, 'CuocPhiMin', l_CuocPhiMin, 'not');
                                                    instance.setDataAtRowProp(row, 'Object__Data__PhanTuyen', g__Data__PhanTuyen, 'not');
                                                }
                                            };
                                            break;
                                        case 'TenQuanHuyenNhan':
                                            if (col === 'TenQuanHuyenNhan') {
                                                if (!!newValue) {

                                                    //▼	Edit - VietMXH - 06/10/2020 - BillVC: Cho chọn NVC==================================================
                                                    cellProperties = instance.getCellMeta(row, instance.propToCol('TenQuanHuyenNhan'));
                                                    //▲	Edit - VietMXH - 06/10/2020 - BillVC: Cho chọn NVC==================================================
                                                    
                                                    var l__Data__TenQuanHuyenNhan = cellProperties.source;
                                                    var l__Data__TenQuanHuyenNhan__Filter = $.grep(l__Data__TenQuanHuyenNhan, function(p_Item, p_Index) {
                                                        return p_Item == newValue;
                                                    });
                                                    if (!!l__Data__TenQuanHuyenNhan__Filter && l__Data__TenQuanHuyenNhan__Filter.length > 0) {
                                                        return;
                                                    }
                                                }
                                            }
                                            break;
                                        case 'SoDienThoaiNguoiGui':
                                            if (col == 'SoDienThoaiNguoiGui') {
                                                var totalLine = $.grep(hot.getData(), function (value, number) {
                                                    return (!!value.DiaChiGui);
                                                });
                                                $.each(totalLine, function (index, item) {
                                                    item.SoDienThoaiNguoiGui = newValue;
                                                });
                                                hot.render();
                                            };
                                            break;
                                        case 'Weight':
                                            //Xử lý cột Trọng lượng
                                            if (col == 'Weight') {
                                                //  ===Lấy NVC + Cước phí===
                                                if (DefaultValueEmty(oldValue) != DefaultValueEmty(newValue)) {
                                                    var l_IdTinhDi = 0;
                                                    var l__TenTinhThanhGui = instance.getDataAtRowProp(row, 'TenTinhThanhGui');
                                                    var l__Data__TinhThanhGui = $.grep(g__Data__TinhThanh, function (item, index) {
                                                        return item.Name == l__TenTinhThanhGui;
                                                    });
                                                    if (l__Data__TinhThanhGui.length > 0) {
                                                        l_IdTinhDi = l__Data__TinhThanhGui[0].ID;
                                                    }
                                                    var l_IdTinhDen = 0;
                                                    var l__TenTinhThanhNhan = instance.getDataAtRowProp(row, 'TenTinhThanhNhan');
                                                    var l__Data__TinhThanhNhan = $.grep(g__Data__TinhThanh, function (item, index) {
                                                        return item.Name == l__TenTinhThanhNhan;
                                                    });
                                                    if (l__Data__TinhThanhNhan.length > 0) {
                                                        l_IdTinhDen = l__Data__TinhThanhNhan[0].ID;
                                                    }
                                                    var l_ShopDiB1 = '';
                                                    var l__DiaChiGui = instance.getDataAtRowProp(row, 'DiaChiGui');
                                                    var l__Data__UserAddressNhan = $.grep(g__Data__UserAddress, function (value, number) {
                                                        return l__DiaChiGui == value.Address;
                                                    });
                                                    if (l__Data__UserAddressNhan.length > 0) {
                                                        l_ShopDiB1 = l__Data__UserAddressNhan[0].OrganizationHierachyCode;
                                                    }
                                                    var l_ShopDenB1 = '';
                                                    var l__TenShopPhongBanNhan = instance.getDataAtRowProp(row, 'TenShopPhongBanNhan');
                                                    if (!!l__TenShopPhongBanNhan) {
                                                        var l__MaShopPhongBanNhan = l__TenShopPhongBanNhan.split('--');
                                                        if (l__MaShopPhongBanNhan.length > 1) {
                                                            l_ShopDenB1 = l__MaShopPhongBanNhan[0];
                                                        };
                                                    }
                                                    var l_TrongLuong = newValue;
                                                    var l_DichVu = instance.getDataAtRowProp(row, 'Service');
                                                    g__Data__PhanTuyen = Func__GetPhanTuyen(l_IdTinhDi, l_IdTinhDen, l_ShopDiB1, l_ShopDenB1, l_TrongLuong, l_DichVu, 'Weight');
                                                    var l_Transporters = ((!!g__Data__PhanTuyen && g__Data__PhanTuyen.length > 0) ? g__Data__PhanTuyen[0].TenNVC : null);
                                                    instance.setDataAtRowProp(row, 'Transporters', l_Transporters, 'not');
                                                    var l_CuocPhiMin = ((!!g__Data__PhanTuyen && g__Data__PhanTuyen.length > 0) ? g__Data__PhanTuyen[0].CuocPhiMin : null);
                                                    instance.setDataAtRowProp(row, 'CuocPhiMin', l_CuocPhiMin, 'not');
                                                    instance.setDataAtRowProp(row, 'Object__Data__PhanTuyen', g__Data__PhanTuyen, 'not');
                                                }
                                            }
                                            break;
                                        case 'Service':
                                            //  Xử lý cột "Dịch vụ"
                                            if (col == 'Service') {
                                                //  ===Lấy NVC + Cước phí===
                                                if (DefaultValueEmty(oldValue) != DefaultValueEmty(newValue)) {
                                                    var l_IdTinhDi = 0;
                                                    var l__TenTinhThanhGui = instance.getDataAtRowProp(row, 'TenTinhThanhGui');
                                                    var l__Data__TinhThanhGui = $.grep(g__Data__TinhThanh, function (item, index) {
                                                        return item.Name == l__TenTinhThanhGui;
                                                    });
                                                    if (l__Data__TinhThanhGui.length > 0) {
                                                        l_IdTinhDi = l__Data__TinhThanhGui[0].ID;
                                                    }
                                                    var l_IdTinhDen = 0;
                                                    var l__TenTinhThanhNhan = instance.getDataAtRowProp(row, 'TenTinhThanhNhan');
                                                    var l__Data__TinhThanhNhan = $.grep(g__Data__TinhThanh, function (item, index) {
                                                        return item.Name == l__TenTinhThanhNhan;
                                                    });
                                                    if (l__Data__TinhThanhNhan.length > 0) {
                                                        l_IdTinhDen = l__Data__TinhThanhNhan[0].ID;
                                                    }
                                                    var l_ShopDiB1 = '';
                                                    var l__DiaChiGui = instance.getDataAtRowProp(row, 'DiaChiGui');
                                                    var l__Data__UserAddressNhan = $.grep(g__Data__UserAddress, function (value, number) {
                                                        return l__DiaChiGui == value.Address;
                                                    });
                                                    if (l__Data__UserAddressNhan.length > 0) {
                                                        l_ShopDiB1 = l__Data__UserAddressNhan[0].OrganizationHierachyCode;
                                                    }
                                                    var l_ShopDenB1 = '';
                                                    var l__TenShopPhongBanNhan = instance.getDataAtRowProp(row, 'TenShopPhongBanNhan');
                                                    if (!!l__TenShopPhongBanNhan) {
                                                        var l__MaShopPhongBanNhan = l__TenShopPhongBanNhan.split('--');
                                                        if (l__MaShopPhongBanNhan.length > 1) {
                                                            l_ShopDenB1 = l__MaShopPhongBanNhan[0];
                                                        };
                                                    }
                                                    var l_TrongLuong = instance.getDataAtRowProp(row, 'Weight');
                                                    var l_DichVu = newValue;
                                                    g__Data__PhanTuyen = Func__GetPhanTuyen(l_IdTinhDi, l_IdTinhDen, l_ShopDiB1, l_ShopDenB1, l_TrongLuong, l_DichVu, 'Weight');
                                                    var l_Transporters = ((!!g__Data__PhanTuyen && g__Data__PhanTuyen.length > 0) ? g__Data__PhanTuyen[0].TenNVC : null);
                                                    instance.setDataAtRowProp(row, 'Transporters', l_Transporters, 'not');
                                                    var l_CuocPhiMin = ((!!g__Data__PhanTuyen && g__Data__PhanTuyen.length > 0) ? g__Data__PhanTuyen[0].CuocPhiMin : null);
                                                    instance.setDataAtRowProp(row, 'CuocPhiMin', l_CuocPhiMin, 'not');
                                                    instance.setDataAtRowProp(row, 'Object__Data__PhanTuyen', g__Data__PhanTuyen, 'not');
                                                }
                                            }
                                            break;
                                        case 'Transporters':    //  Nhà vận chuyển
                                            if (col == 'Transporters') {
                                                //  ===Lấy NVC + Cước phí===
                                                if (DefaultValueEmty(oldValue) != DefaultValueEmty(newValue)) {
                                                    g__Data__PhanTuyen = instance.getDataAtRowProp(row, 'Object__Data__PhanTuyen');
                                                    var l__Data__PhanTuyen__Filter = $.grep(g__Data__PhanTuyen, function(p_Item, p_Index){
                                                        return p_Item.TenNVC == newValue;
                                                    });
                                                    var l_CuocPhiMin = (!!l__Data__PhanTuyen__Filter && l__Data__PhanTuyen__Filter.length > 0 ? l__Data__PhanTuyen__Filter[0].CuocPhiMin : null);
                                                    instance.setDataAtRowProp(row, 'CuocPhiMin', l_CuocPhiMin, 'not');
                                                    var l__Transporters__ToiUu__STT = (!!l__Data__PhanTuyen__Filter && l__Data__PhanTuyen__Filter.length > 0 ? l__Data__PhanTuyen__Filter[0].STT : 0);
                                                    if (l__Transporters__ToiUu__STT == 1 ) {
                                                        instance.setDataAtRowProp(row, 'Is_NVCToiUu', 1, 'not');
                                                    }
                                                    else {
                                                        instance.setDataAtRowProp(row, 'Is_NVCToiUu', 0, 'not');
                                                        XFunction.RenderMessage('error', 'Đã chọn Nhà vận chuyển Không tối ưu! Dòng: ' + (row + 1));
                                                    }
                                                }
                                            }
                                            break;
                                        default:        
                                    }                                    
                                });
                            },
                        }
                    };

                    //===============RENDERER LUOI
                    hot = new Handsontable(container, setting());
                    
                    //  ===Load Địa chỉ của User đang Login mặc định lên lưới===
                    var source = [{ DiaChiGui: g__Data__UserAddress[0].Address, Payments: sourceMucDichTuyen[0], SoDienThoaiNguoiGui: g__Data__UserAddress[0].SoDienThoaiNguoiGui }];
                    hot.loadData(source);
                    hot.setDataAtRowProp(0, 'DiaChiGui', g__Data__UserAddress[0].Address, 'not');   //  Gọi afterChange của DiaChiGui

                    //===================EVENT GUI 
                    $btnSend.click(function () {
                        var data = new FormData();
                        var dataReturn = [];
                        var dataAll = [];
                        var dataCheck = [];
                        dataAll = $.grep(hot.getData(), function (item, index) {
                            return (!!item.DiaChiGui)
                                || (!!item.TenTinhThanhGui)
                                || (!!item.TenQuanHuyenGui)
                                || (!!item.SoDienThoaiNguoiGui)
                                || (!!item.TenShopPhongBanNhan)
                                || (!!item.DiaChiNhan)
                                || (!!item.TenTinhThanhNhan)
                                || (!!item.TenQuanHuyenNhan)
                                || (!!item.Weight)
                                || (!!item.typeHH)
                                || (!!item.ProductName)
                                || (!!item.NumberOfParcels)
                                || (!!item.Transporters)
                                || (!!item.Service)
                                || (!!item.Payments);
                        });//Kiểm tra rỗng các cell trong bảng

                        if (dataAll === '' || dataAll === null || dataAll === undefined) {
                            XFunction.RenderMessage('error', 'Vui lòng nhập đầy đủ chi tiết!'); return;
                        };

                        dataCheckAll = $.grep(hot.getData(), function (item, index) {
                            return (!!item.DiaChiGui)
                                && (!!item.TenTinhThanhGui)
                                && (!!item.TenQuanHuyenGui)
                                && (!!item.SoDienThoaiNguoiGui)
                                && (!!item.TenShopPhongBanNhan)
                                && (!!item.DiaChiNhan)
                                && (!!item.TenTinhThanhNhan)
                                && (!!item.TenQuanHuyenNhan)
                                && (!!item.Weight)
                                && (!!item.typeHH)
                                && (!!item.ProductName)
                                && (!!item.NumberOfParcels)
                                && (!!item.Transporters)
                                && (!!item.Service)
                                && (!!item.Payments);
                        });//Kiểm tra rỗng các cell trong bảng
                        if (dataCheckAll.length != dataAll.length) {
                            XFunction.RenderMessage('error', 'Dữ liệu chi tiết không được trống! Vui lòng nhập đầy đủ chi tiết!'); return;
                        };

                        var checkWQ = [], checkNumber = [];
                        $.each(dataAll, function (index, item) {
                            if (item.NumberOfParcels !== null && item.NumberOfParcels !== '' && item.NumberOfParcels !== undefined && item.NumberOfParcels !== 0) {
                                checkWQ.push(index + 1);
                            };
                        });
                        var checkDiaChiHN_Gui = ''
                        var checkDiaChiHN_Nhan = ''

                        var checkDiaChiHCM_Gui = ''
                        var checkDiaChiHCM_Nhan = ''

                        if (checkWQ === '' || checkWQ === null || checkWQ === undefined) {
                            XFunction.RenderMessage('error', 'Số kiện không thể bằng không. <br/>Vui lòng xem lại dòng ' + checkWQ.join(',')); return false;
                        };

                        var MaPhongBanNhan
                            , MaPhongBanNhanKerry
                            , FlagNewAddressReceive
                            , FlagNewAddressSender

                            , MaTinhGui
                            , MaHuyenGui
                            , MaTinhNhan
                            , MaHuyenNhan

                            , typeHHCode
                            , MaHinhThucThanhToan
                            , MaNhaVanChuyen
                            , MaDichVuVanChuyenTheoNVC

                            , MaShopPhongBanGui
                            , TenShopPhongBanGui
                            , MaShopPhongBanGuiKerry
                            , DoDaiNoiDungHangHoa
                            , DoDaiGhiChu
                            , ShopPhongBanMoi;


                        //Thông tin người gửi
                        $.each(data_SenderInfo, function (index2, item2) {
                            MaShopPhongBanGui = item2.OrganizationHierachyCode;
                            TenShopPhongBanGui = item2.OrganizationHierachyName;
                            MaShopPhongBanGuiKerry = item2.OrganizationHierachyCodeSend;
                        });

                        //Khai báo data hứng line lỗi
                        var dataQuanHuyenTinhThanhGui = [], dataSDTGui = [],
                            dataQuanHuyenTinhThanhNhan = [], dataSDTNhan = [], dataHoTenNguoiNhan = [],
                            dataLoaiHangHoa = [], dataNoiDungHangHoa = [], dataVuotSoKien = [],
                            
                            //▼	Edit - VietMXH - 21/10/2019 - Tạo Bill VC: Bắt Trọng lượng >= 0.05 kg==================================================
                            dataTrongLuongKhongDu = [],
                            //▲	Edit - VietMXH - 21/10/2019 - Tạo Bill VC: Bắt Trọng lượng >= 0.05 kg==================================================

                            dataNVC = [], dataDichVuVC = [], dataHTTT = [], dataNoiDungGhiChu = [],// Add - TrungNC3 - 08/11/2017 - Thêm  xác nhận khi tạo bill hỏa tốc
                            data_IsBillByTrain = [], is_BillTrain = [];// Add - TrungNC3 - 08/11/2017 - Thêm  xác nhận khi tạo bill hỏa tốc

                        $.each(dataAll, function (index, item) {
                            var data_PlaceReceive = $.grep(g__Data__ShopPhongBan__Name, function (item_Place, index_Place) {
                                return item.TenShopPhongBanNhan === item_Place;
                            });
                            if (data_PlaceReceive.length > 0) {
                                var OrganizingOrShopCode = data_PlaceReceive[0].split('--')[0];

                                var data_PlaceReceive_Department = $.grep(g__Data__DiaChiShopPhongBan, function (item_Place_All, index_Place_All) {
                                    return item_Place_All.OrganizationHierachyCode === OrganizingOrShopCode
                                        && item_Place_All.Address === item.DiaChiNhan
                                        && item_Place_All.TypeAddress === 1;
                                });

                                var data_PlaceReceive_Shop = $.grep(g__Data__DiaChiShopPhongBan, function (item_Place_All, index_Place_All) {
                                    return item_Place_All.OrganizationHierachyCode === OrganizingOrShopCode
                                        && item_Place_All.Address === item.DiaChiNhan
                                        && item_Place_All.TypeAddress === 2;
                                });

                                var data_PlaceReceive_Outside = $.grep(g__Data__DiaChiShopPhongBan, function (item_Place_All, index_Place_All) {
                                    return item_Place_All.OrganizationHierachyCode === OrganizingOrShopCode
                                        && item_Place_All.Address === item.DiaChiNhan
                                        && item_Place_All.TypeAddress === 3;
                                });

                                var data_PlaceReceive_Department_Differen = $.grep(g__Data__DiaChiShopPhongBan, function (item_Place_All, index_Place_All) {
                                    return item_Place_All.OrganizationHierachyCode === OrganizingOrShopCode
                                        && item_Place_All.Address !== item.DiaChiNhan
                                        && item_Place_All.TypeAddress === 1;
                                });

                                if (data_PlaceReceive_Department.length > 0) {
                                    MaPhongBanNhan = data_PlaceReceive_Department[0].OrganizationHierachyCode;
                                    MaPhongBanNhanKerry = data_PlaceReceive_Department[0].OrganizationHierachyCodeSend;
                                    FlagNewAddressReceive = 1;
                                }
                                else if (data_PlaceReceive_Shop.length > 0) {
                                    MaPhongBanNhan = data_PlaceReceive_Shop[0].OrganizationHierachyCode;
                                    MaPhongBanNhanKerry = data_PlaceReceive_Shop[0].OrganizationHierachyCodeSend;
                                    FlagNewAddressReceive = 1;
                                }
                                else if (data_PlaceReceive_Outside.length > 0) {
                                    MaPhongBanNhan = data_PlaceReceive_Outside[0].OrganizationHierachyCode;
                                    MaPhongBanNhanKerry = data_PlaceReceive_Outside[0].OrganizationHierachyCodeSend;
                                    FlagNewAddressReceive = 1;
                                }
                                else if (data_PlaceReceive_Department_Differen.length > 0) {
                                    MaPhongBanNhan = data_PlaceReceive_Department_Differen[0].OrganizationHierachyCode;
                                    MaPhongBanNhanKerry = data_PlaceReceive_Department_Differen[0].OrganizationHierachyCodeSend;
                                    FlagNewAddressReceive = 0;
                                }
                                    //▼ ChuongNT3 - 22/01/2019 - add trường hợp khác
                                else {
                                    MaPhongBanNhan = OrganizingOrShopCode;
                                    MaPhongBanNhanKerry = item.DiaChiNhan;
                                    FlagNewAddressReceive = 1;
                                }
                                //▲ ChuongNT3 - 22/01/2019 - add trường hợp khác
                                ShopPhongBanMoi = '';
                            }
                            else {
                                MaPhongBanNhan = '';
                                MaPhongBanNhanKerry = '';
                                ShopPhongBanMoi = item.TenShopPhongBanNhan;
                                FlagNewAddressReceive = 1;
                            };

                            var dataDiaChiGui = $.grep(g__Data__UserAddress, function (value, number) {
                                return value.Address !== item.DiaChiGui && value.TypeAddress === 1;
                            });

                            if (dataDiaChiGui.length > 0) {
                                FlagNewAddressSender = 0;
                            }
                            else {
                                FlagNewAddressSender = 1;
                            }

                            //Kiểm tra quận huyện - tỉnh thành gửi
                            var dataTinhThanhGuiCheck = $.grep(g__Data__TinhThanh, function (value, number) {
                                return value.Name == item.TenTinhThanhGui;
                            });
                            if (dataTinhThanhGuiCheck.length > 0) {
                                MaTinhGui = dataTinhThanhGuiCheck[0].ID
                            }
                            else { MaTinhGui = ''; }
                            var data_DistrictSendedCheck = $.grep(g__Data__QuanHuyen, function (value, number) {
                                return item.TenQuanHuyenGui == value.Name && MaTinhGui == value.CityID;
                            });
                            if (data_DistrictSendedCheck.length > 0) {
                                MaHuyenGui = data_DistrictSendedCheck[0].ID;
                            }
                            else { MaHuyenGui = ''; }
                            if ((MaHuyenGui == null || MaHuyenGui == '' || MaHuyenGui == undefined)
                                || (MaTinhGui == null || MaTinhGui == '' || MaTinhGui == undefined)) {
                                dataQuanHuyenTinhThanhGui.push((index + 1));
                            }

                            //Kiểm tra số điện thoại gửi
                            if (((item.SoDienThoaiNguoiGui).length < 10 || (item.SoDienThoaiNguoiGui).length > 11) || isNaN(item.SoDienThoaiNguoiGui)) {
                                dataSDTGui.push((index + 1));
                            }
                            //Kiểm tra quận huyện - tỉnh thành nhận
                            var dataTinhThanhNhanCheck = $.grep(g__Data__TinhThanh, function (value, number) {
                                return value.Name == item.TenTinhThanhNhan;
                            });
                            MaTinhNhan = dataTinhThanhNhanCheck.length > 0 ? dataTinhThanhNhanCheck[0].ID : '';

                            var dataQuanHuyenNhanCheck = $.grep(g__Data__QuanHuyen, function (value, number) {
                                return item.TenQuanHuyenNhan == value.Name && MaTinhNhan == value.CityID;
                            });
                            MaHuyenNhan = dataQuanHuyenNhanCheck.length > 0 ? dataQuanHuyenNhanCheck[0].ID : '';

                            if ((MaHuyenNhan == null || MaHuyenNhan == '' || MaHuyenNhan == undefined)
                                || (MaTinhNhan == null || MaTinhNhan == '' || MaTinhNhan == undefined)) {
                                dataQuanHuyenTinhThanhNhan.push((index + 1));
                            }

                            //Kiểm tra họ tên người nhận
                            var chieudaiHoTen = item.HoTenNguoiNhan === '' || item.HoTenNguoiNhan === null || item.HoTenNguoiNhan === undefined ? 0 : (item.HoTenNguoiNhan).length;
                            if (chieudaiHoTen > 30) {
                                dataHoTenNguoiNhan.push((index + 1));
                            }

                            //Kiểm tra số điện thoại nhận
                            var chieudaSoDienThoai = item.SoDienThoaiNguoiNhan === '' || item.SoDienThoaiNguoiNhan === null || item.SoDienThoaiNguoiNhan === undefined ? 0 : (item.SoDienThoaiNguoiNhan).length;
                            if (chieudaSoDienThoai === 0) {
                                dataSDTNhan.push((index + 1));
                            }

                            //Kiểm tra loại hàng hóa                    
                            if (item.typeHH == 'Hàng hóa') {
                                typeHHCode = 1;
                            }
                            else if (item.typeHH == 'Thư từ') {
                                typeHHCode = 2;
                            }
                            else {
                                typeHHCode = '';
                            }

                            if (typeHHCode == null || typeHHCode == '' || typeHHCode == undefined) {
                                dataLoaiHangHoa.push((index + 1));
                            }

                            //Kiểm tra nội dung hàng hóa
                            var chieudaiNoiDungHangHoa = item.ProductName === '' || item.ProductName === null || item.ProductName === undefined ? 0 : (item.ProductName).length;
                            if (chieudaiNoiDungHangHoa > 120) {
                                dataNoiDungHangHoa.push((index + 1));
                            }

                            //Kiểm tra số kiện
                            if (Math.round(item.NumberOfParcels) > 32766 || Math.round(item.NumberOfParcels) <= 0) {
                                dataVuotSoKien.push((index + 1));
                            }

                            //▼	Edit - VietMXH - 21/10/2019 - Tạo Bill VC: Bắt Trọng lượng >= 0.05 kg==================================================
                            //  ===Kiểm tra "Trọng lượng"===
                            if (item.Weight < 0.05) {
                                dataTrongLuongKhongDu.push(index + 1);
                            }
                            //▲	Edit - VietMXH - 21/10/2019 - Tạo Bill VC: Bắt Trọng lượng >= 0.05 kg==================================================

                            //Kiểm tra dịch vụ nhà vận chuyển
                            var dataNhaVanChuyenCode = $.grep(g__Data__Transporters, function (value, number) {
                                return item.Transporters == value.Name;
                            });
                            MaNhaVanChuyen = dataNhaVanChuyenCode.length > 0 ? dataNhaVanChuyenCode[0].Code : '';

                            if (MaNhaVanChuyen == '' || MaNhaVanChuyen == null || MaNhaVanChuyen == undefined) {
                                dataNVC.push((index + 1));
                            }

                            var dataDVVC = $.grep(g__Data__Transporters, function (value, number) {
                                return item.Transporters == value.Name;
                            });
                            if (dataDVVC.length > 0) {
                                if (dataDVVC[0].Code == 'NT') {
                                    var DichVuNT = $.grep(g__Data__TransportServices, function (value, number) {
                                        return value.Group == 'DichVuVanChuyen' && item.Service == value.Name;
                                    })
                                    MaDichVuVanChuyenTheoNVC = DichVuNT.length > 0 ? DichVuNT[0].Code : '';
                                }
                                else if (dataDVVC[0].Code == 'Kerry') {
                                    var DichVuKerry = $.grep(g__Data__TransportServices, function (value, number) {
                                        return value.Group == 'DichVuVanChuyenKerry' && item.Service == value.Name;
                                    });
                                    MaDichVuVanChuyenTheoNVC = DichVuKerry.length > 0 ? DichVuKerry[0].Code : '';
                                }
                                else if (dataDVVC[0].Code == 'VNC') {                                    
                                    //▼	Edit - VietMXH - 04/07/2019 - Nhà vận chuyển: Vinacapital Post==================================================
                                    var l__DichVu_VNC = $.grep(g__Data__TransportServices, function (value, number) {
                                        return value.Group == 'DichVuVanChuyenVinacapital' && item.Service == value.Name;
                                    });
                                    MaDichVuVanChuyenTheoNVC = l__DichVu_VNC.length > 0 ? l__DichVu_VNC[0].Code : '';
                                    //▲	Edit - VietMXH - 04/07/2019 - Nhà vận chuyển: Vinacapital Post==================================================
                                }
                            }
                            if (MaDichVuVanChuyenTheoNVC == null || MaDichVuVanChuyenTheoNVC == '' || MaDichVuVanChuyenTheoNVC == undefined) {
                                dataDichVuVC.push((index + 1));
                            }

                            //Kiểm tra hình thức thanh toán
                            if (item.Payments == 'Người gửi TT') {
                                MaHinhThucThanhToan = 1;
                            }
                            else if (item.Payments == 'Người nhận TT') {
                                MaHinhThucThanhToan = 2;
                            }
                                
                                //▼	Edit - VietMXH - 20/11/2019 - Bill VC: Người nhận TT ngay==================================================
                            else if (item.Payments == 'Người nhận TT ngay') {
                                MaHinhThucThanhToan = 3;
                            }
                                //▲	Edit - VietMXH - 20/11/2019 - Bill VC: Người nhận TT ngay==================================================

                            else {
                                MaHinhThucThanhToan = '';
                            }
                            if (MaHinhThucThanhToan == null || MaHinhThucThanhToan == '' || MaHinhThucThanhToan == undefined) {
                                dataHTTT.push((index + 1));
                            }

                            //Kiểm tra Ghi chú
                            var chieudaiGhiChu = item.Note === '' || item.Note === null || item.Note === undefined ? 0 : (item.Note).length;
                            if (chieudaiGhiChu > 80) {
                                dataNoiDungGhiChu.push((index + 1));
                            }

                            //NgoanHT - 23/10/2017 - 154 - 180: bill hỏa tốc - Thêm
                            //▼ Add - TrungNC3 - 08/11/2017 - Thêm  xác nhận khi tạo bill hỏa tốc
                            if (item.Service === 'Hỏa tốc' && (!item.Note)) {
                                data_IsBillByTrain.push(index + 1);
                            }
                            var IdService = 0;
                            if (item.Service === 'Hỏa tốc') {
                                IdService = 1;
                                is_BillTrain.push(index + 1);
                            }
                            else {
                                IdService = 0;
                            }
                            //▲ Add - TrungNC3 - 08/11/2017 - Thêm  xác nhận khi tạo bill hỏa tốc
                            //NgoanHT - 23/10/2017 - 154 - 180: bill hỏa tốc - Thêm

                            dataReturn.push({
                                DiaChiGui: item.DiaChiGui,
                                DiaChiNhan: item.DiaChiNhan,

                                MaPhongBanShopGui: MaShopPhongBanGui,
                                MaPhongBanShopGuiKerry: MaShopPhongBanGuiKerry,
                                TenPhongBanShopGui: TenShopPhongBanGui,
                                SoDienThoaiNguoiGui: item.SoDienThoaiNguoiGui,

                                MaPhongBanShopNhan: MaPhongBanNhan,
                                MaPhongBanShopNhanKerry: MaPhongBanNhanKerry,
                                TenPhongBanShopNhan: item.TenShopPhongBanNhan,
                                HoTenNguoiNhan: item.HoTenNguoiNhan,
                                SoDienThoaiNguoiNhan: item.SoDienThoaiNguoiNhan,

                                MaHuyenGui: MaHuyenGui,
                                MaTinhGui: MaTinhGui,

                                TenHuyenGui: item.TenQuanHuyenGui,
                                TenTinhGui: item.TenTinhThanhGui,

                                MaHuyenNhan: MaHuyenNhan,
                                MaTinhNhan: MaTinhNhan,

                                TenHuyenNhan: item.TenQuanHuyenNhan,
                                TenTinhNhan: item.TenTinhThanhNhan,

                                ShopPhongBanMoi: ShopPhongBanMoi,

                                NoiDungHangHoa: item.ProductName,
                                SoKien: Math.round(item.NumberOfParcels),
                                TrongLuong: item.Weight,
                                MaLoaiHangHoa: typeHHCode,
                                MaHinhThucThanhToan: MaHinhThucThanhToan,
                                GhiChu: item.Note,

                                MaNhaVanChuyen: MaNhaVanChuyen,
                                MaDichVuVanChuyen: MaDichVuVanChuyenTheoNVC,
                                CheckNhan: FlagNewAddressReceive,
                                CheckGui: FlagNewAddressSender,
                                IdService: IdService,
                                QuantityItem: (!!item.Quantity) ? item.Quantity : null,
                                
                                CuocPhiMin: item.CuocPhiMin,
                                Is_NVCToiUu: item.Is_NVCToiUu,

                                Action: '\assets\pages\create\create.js',
                            });
                        });
                        console.log('MaHuyenGui', MaHuyenGui)
                        console.log('MaTinhGui', MaTinhGui)
                        console.log('MaHuyenNhan', MaHuyenNhan)
                        console.log('MaTinhNhan', MaTinhNhan)
                        console.log('checkDiaChiHCM_Gui', checkDiaChiHCM_Gui)
                        console.log('checkDiaChiHCM_Nhan', checkDiaChiHCM_Nhan)
                        console.log('checkDiaChiHN_Gui', checkDiaChiHN_Gui)
                        console.log('checkDiaChiHN_Nhan', checkDiaChiHN_Nhan)

                        if (data_IsBillByTrain.length > 0) {
                            XFunction.RenderMessage('error', 'Vui lòng nhập "Lý do gửi" ở cột "Ghi chú" khi bạn chọn dịch vụ "Hỏa tốc"!<br/> Xem lại dòng ' + data_IsBillByTrain.join(',')); return false;
                            return false;
                        }

                        if (dataQuanHuyenTinhThanhGui.length > 0) {
                            XFunction.RenderMessage('error', 'Tỉnh thành hoặc quận huyện gửi không hợp lệ!<br/> Xem lại dòng ' + dataQuanHuyenTinhThanhGui.join(',')); return false;
                        }

                        if (dataSDTGui.length > 0) {
                            XFunction.RenderMessage('error', 'Số điện thoại người gửi không hợp lệ!<br/> Xem lại dòng ' + dataSDTGui.join(',')); return false;
                        }

                        if (dataQuanHuyenTinhThanhNhan.length > 0) {
                            XFunction.RenderMessage('error', 'Tỉnh thành hoặc quận huyện nhận không hợp lệ!<br/> Xem lại dòng ' + dataQuanHuyenTinhThanhNhan.join(',')); return false;
                        }

                        if (dataHoTenNguoiNhan.length > 0) {
                            XFunction.RenderMessage('error', 'Họ tên người nhận không vượt quá 30 ký tự!<br/> Xem lại dòng ' + dataHoTenNguoiNhan.join(',')); return false;
                        }

                        if (dataSDTNhan.length > 0) {
                            XFunction.RenderMessage('error', 'Số điện thoại người nhận không hợp lệ!<br/> Xem lại dòng ' + dataSDTNhan.join(',')); return false;
                        }

                        if (dataLoaiHangHoa.length > 0) {
                            XFunction.RenderMessage('error', 'Lỗi chọn loại hàng hóa!<br/> Xem lại dòng ' + dataLoaiHangHoa.join(',')); return false;
                        }

                        if (dataNoiDungHangHoa.length > 0) {
                            XFunction.RenderMessage('error', 'Nội dung hàng hóa vượt quá 120 ký tự!<br/> Xem lại dòng ' + dataNoiDungHangHoa.join(',')); return false;
                        }

                        if (dataVuotSoKien.length > 0) {
                            XFunction.RenderMessage('error', 'Số kiện không vượt quá 32766 kiện hoặc bằng 0!<br/> Xem lại dòng ' + dataVuotSoKien.join(',')); return false;
                        }

                        //▼	Edit - VietMXH - 21/10/2019 - Tạo Bill VC: Bắt Trọng lượng >= 0.05 kg==================================================
                        if (dataTrongLuongKhongDu.length > 0) {
                            XFunction.RenderMessage('error', 'Trọng lượng tối thiểu: 0.05 kg!<br/> Xem lại dòng ' + dataTrongLuongKhongDu.join(',')); return false;
                        }
                        //▲	Edit - VietMXH - 21/10/2019 - Tạo Bill VC: Bắt Trọng lượng >= 0.05 kg==================================================

                        if (dataNVC.length > 0) {
                            XFunction.RenderMessage('error', 'Lỗi chọn nhà vận chuyển!<br/> Xem lại dòng ' + dataNVC.join(',')); return false;
                        }

                        if (dataDichVuVC.length > 0) {
                            XFunction.RenderMessage('error', 'Lỗi chọn dịch vụ vận chuyển!<br/> Xem lại dòng ' + dataDichVuVC.join(',')); return false;
                        }

                        if (dataHTTT.length > 0) {
                            XFunction.RenderMessage('error', 'Lỗi chọn hình thức thanh toán!<br/> Xem lại dòng ' + dataHTTT.join(',')); return false;
                        }

                        if (dataNoiDungGhiChu.length > 0) {
                            XFunction.RenderMessage('error', 'Nội dung ghi chú vượt quá 80 ký tự!<br/>   Xem lại dòng ' + dataNoiDungGhiChu.join(',')); return false;
                        }

                        console.log('dataReturn:', dataReturn);

                        //Lấy data
                        data.append("Details", JSON.stringify(dataReturn));
                        data.append("DetailsLimited", JSON.stringify([]));
                        data.append("Description", catagoryInfo.Description);

                        var categories = $('#Title').val();
                        data.append("TitleRequest", categories);
                        data.append("typeId", catagoryInfo.Id);

                        data.append("TimeFutureFinish", $('#TimeFutureFinish').val());
                        data.append("Cc", $('#Cc').val());
                        data.append("sender", $('#sender').val());
                        data.append("fileUpload", $('#fileUpload').val());
                        data.append("dateFrom", $('#dateFrom').val());
                        data.append("dateTo", $('#dateTo').val());
                        data.append("timeSend", $('#timeSend').val());
                        data.append("Message", $('.note-editable').text());
                        
                        ////console.log('data:', data);
                        
                        if (is_BillTrain.length > 0) {
                            var confirm_IsTrain = confirm("Cước hỏa tốc cao gấp 10 lần so với cước chuyển phát nhanh, chọn dịch vụ hỏa tốc sẽ đẩy calllog tới ASM/trưởng bộ phận duyệt! Vui lòng xem lại dòng: " + is_BillTrain.join(','));
                            if (confirm_IsTrain == true) {
                                data.append("PassApproved", 1)
                                $('#myModalWatting').modal({ backdrop: 'static', keyboard: false, show: true });
                                $.ajax({
                                    type: "POST",
                                    url: "/Requests/Create__BillVanChuyen__CreateRequest",
                                    contentType: false,
                                    processData: false,
                                    data: data,
                                    success: function (result) {
                                        $('#myModalWatting').modal('hide');
                                        var win = window.open('/Home', '_self');
                                    },
                                    error: function () {
                                        $('#myModalWatting').modal('hide');
                                        XFunction.RenderMessage('error', 'Lỗi tạo yêu cầu');
                                        return;
                                    }
                                });
                            }
                        }
                        else {
                            data.append("PassApproved", 0)
                            $('#myModalWatting').modal({ backdrop: 'static', keyboard: false, show: true });
                            $.ajax({
                                type: "POST",
                                url: "/Requests/Create__BillVanChuyen__CreateRequest",
                                contentType: false,
                                processData: false,
                                data: data,
                                success: function (result) {
                                    $('#myModalWatting').modal('hide');
                                    var win = window.open('/Home', '_self');
                                },
                                error: function () {
                                    $('#myModalWatting').modal('hide');
                                    XFunction.RenderMessage('error', 'Lỗi tạo yêu cầu');
                                    return;
                                }
                            });
                        };
                    });
                }
                else {
                    
                    //▼	Edit - VietMXH - 11/06/2020 - Bill VC: Fix Địa chỉ ngoài==================================================
                    XFunction.RenderMessage('error', 'Địa chỉ Shop/Phòng ban chưa được định nghĩa. Vui lòng liên hệ Support!');
                    return false;                
                    //▲	Edit - VietMXH - 11/06/2020 - Bill VC: Fix Địa chỉ ngoài==================================================

                }
            });
        });
    };  //Bill vận chuyển khối BO*/
    function contruct_155() {
        $('.compose-message').hide();
        $('#detail').show();
        $('#sum-total').hide();  // not support dowload file
        $('#handsontableEx').css('overflow', 'hidden');
        $areaDowloadAndImport.show();
        var dataProductAll = [], dataProductAllName = [];
        $.get('/Requests/GetDevices', { type: 23 }, function (data) {
            dataProductAll = data;
            $.each(data, function (index, item) {
                dataProductAllName.push(item.ItemName);
            });
        });

        var dataShopAll = [], dataShopAllName = [], data_GroupProduct = [], data_GroupProductName = [];
        $.get('/Requests/GetShopByRegion', { regionId: 0 }, function (data) {
            dataShopAll = data;
            $.each(data, function (index, item) {
                dataShopAllName.push(item.WarehouseCode + '--' + item.WarehouseCodeB1 + '--' + item.WarehouseName);
            });
        });

        $.get('/Requests/GetLimitedValue', { type: 23 }, function (data) {
            dataLimitedHcCreate = data;
        });
        //▼Add - TrungNC3 - 13/11/2017 - Thêm Nhóm SP & Hình thức xuất
        $.get('/Requests/GroupProduct_Get', function (data) {
            data_GroupProduct = data;
            if (data.length > 0) {
                $.each(data, function (index, item) {
                    data_GroupProductName.push(item.MaNhom + '--' + item.TenNhom);
                });
            };
        });
        //▲Add - TrungNC3 - 13/11/2017 - Thêm Nhóm SP & Hình thức xuất
        var setting = function () {
            return {
                //=================================Data=======
                data: dataHcCreateHandsontable,
                //================================Cols=======
                maxCols: 10,
                minCols: 10,
                startCols: 10,
                minSpareCols: 0,
                allowInsertColumn: false,
                allowRemoveColumn: false,
                autoColumnSize: true,
                autoWrapCol: true,
                columnSorting: false,
                colWidths: 'undefined',
                copyColsLimit: 10,
                currentColClassName: 'currentCol', //currentCol
                fixedColumnsLeft: 0,
                manualColumnMove: false,
                manualColumnResize: true,
                viewportColumnRenderingOffset: 10,
                sortIndicator: true,
                //================================Rows=======
                allowInsertRow: true,
                allowRemoveRow: true,
                autoRowSize: true,
                autoWrapRow: true,
                copyRowsLimit: 1000,
                currentRowClassName: 'currentRow',
                fixedRowsTop: 0,
                manualRowMove: false,
                manualRowResize: true,
                rowHeaders: true,
                minSpareRows: 10,
                startRows: 0,
                //viewportRowRenderingOffset : 'auto',
                //maxRows: dataMkoMkoHandsontable+1,
                //minRows: dataMkoMkoHandsontable+1,
                //================================Oder=======
                allowInvalid: false,
                stretchH: 'all',
                commentedCellClassName: 'htCommentCell',
                comments: true,
                contextMenu: true,
                copyable: true,
                customBorders: false,
                debug: false,
                disableVisualSelection: true,
                enterBeginsEditingBoolean: true,
                fillHandle: true,
                outsideClickDeselects: true,
                fragmentSelection: false,
                groups: false,
                invalidCellClassName: 'htInvalid',
                mergeCells: false,
                multiSelect: true,
                noWordWrapClassName: 'htNoWrap',
                placeholder: false,
                placeholderCellClassName: 'htPlaceholder',
                readOnlyCellClassName: 'htDimmed',
                search: false,
                trimWhitespace: true,
                undo: true,
                formulas: true,
                wordWrap: true,
                //====================================Oder ==============================================
                colHeaders: ["Shop", "Nhóm sản phẩm", "Tên mặt hàng", "Số lượng tồn kho", "Nhóm hàng", "Số lượng", "Đơn giá", "Thành tiền", "Đ.V tính", "Ghi chú"],//Add - TrungNC3 - 13/11/2017 - Thêm Nhóm SP & Hình thức xuất
                columns: [
                    { data: "ShopCode", type: 'autocomplete', source: dataShopAllName, strict: false, className: 'htLeft', width: 250 },
                    { data: "GroupProduct", type: 'autocomplete', source: data_GroupProductName, strict: false, className: 'htLeft', width: 300 },//Add - TrungNC3 - 13/11/2017 - Thêm Nhóm SP & Hình thức xuấtz
                    { data: "ItemName", type: 'autocomplete', source: dataProductAllName, strict: false, className: 'htLeft', width: 250 },
                    { data: "QuantityTonKho", type: 'numeric', format: '0,0', validator: Validater.quantity, allowInvalid: false, readOnly: true },
                    { data: "GroupName", readOnly: true, className: 'htLeft' },
                    { data: "Quantity", type: 'numeric', format: '0,0', validator: Validater.quantity, allowInvalid: false, },
                    {
                        data: "Price", type: 'numeric', format: '0,0', readOnly: true,
                        renderer: function (instance, td, row, col, prop, value) {
                            if (col === 6 && row === dataHcCreateHandsontable.length - 1) {//Add - TrungNC3 - 13/11/2017 - Thêm Nhóm SP & Hình thức xuất
                                td.style.fontWeight = 'bold';
                                td.style.textAlign = 'right';
                                td.style.color = 'green';
                                value = 'Tổng tiền:';
                            }
                            Handsontable.NumericRenderer.apply(this, arguments);
                        }, width: 90,
                    },
                    {
                        data: "Sum", type: 'text',
                        format: '0,0', readOnly: true,
                        renderer: function (instance, td, row, col, prop, value) {
                            if (col === 7 && row === dataHcCreateHandsontable.length - 1) {//Add - TrungNC3 - 13/11/2017 - Thêm Nhóm SP & Hình thức xuất
                                td.style.fontWeight = 'bold';
                                td.style.color = 'green';
                                sum = 0;
                                $.each(dataHcCreateHandsontable, function (index, item) {
                                    if (item.Sum !== "" && item.Sum !== undefined && item.Sum !== null && !isNaN(item.Sum)) {
                                        sum += parseInt(item.Sum);
                                    } else {
                                        sum += 0;
                                    }
                                });
                                value = sum;
                            }
                            Handsontable.NumericRenderer.apply(this, arguments);
                        }
                    },
                    { data: "Unit", className: 'htLeft', readOnly: true },
                    { data: "Note", className: 'htLeft' }
                ],
                afterRemoveRow: function (index, amount) {  //==== Chưa biết công dụng là làm cái gì
                    hot.updateSettings({
                        cells: function (row, col, prop) {
                            var cellProperties = {};

                            if (row === dataHcCreateHandsontable.length - 1) {
                                cellProperties.readOnly = false;
                            }

                            return cellProperties;

                        }
                    });
                },
                cells: function (row, col, prop) {  //==== Sử dụng cho việc Import dữ liệu vào
                    var cellProperties = {};

                    if (row === dataHcCreateHandsontable.length - 1) {
                        cellProperties.readOnly = false;
                    }

                    return cellProperties;

                },
                beforeChange: function (change, source) {
                    if (source === 'not') return;
                    for (i = 0, len = change.length; i < len; i++) {
                        var row = change[i][0], col = change[i][1];
                        var newValue = change[3];
                        if (col === 'ShopCode') {
                            var Shop = change[i][3];

                            var rows = hot.getDataAtRow(row);

                            var ShopOl = hot.getDataAtRowProp(row, 'ShopCode');
                            var Item = hot.getDataAtRowProp(row, 'ItemName');
                            var colls = $.grep(hot.getData(), function (item, index) {
                                return item.ItemName !== null && item.ItemName !== undefined
                                    && item.ItemName !== '' && item.ItemName == Item;
                            });
                            if (colls.length > 1) {
                                hot.setDataAtRowProp(row, 'ShopCode', ShopOl, 'not');
                                hot.setDataAtRowProp(row, 'GroupProduct', '', 'not');//Add - TrungNC3 - 13/11/2017 - Thêm Nhóm SP & Hình thức xuất
                                hot.setDataAtRowProp(row, 'ItemName', '', 'not');
                                hot.setDataAtRowProp(row, 'GroupName', '', 'not');
                                hot.setDataAtRowProp(row, 'Quantity', '', 'not');
                                hot.setDataAtRowProp(row, 'Price', '', 'not');
                                hot.setDataAtRowProp(row, 'Sum', '', 'not');
                                hot.setDataAtRowProp(row, 'Unit', '', 'not');
                                hot.setDataAtRowProp(row, 'Note', '', 'not');
                                return false;
                            }

                            if (Shop !== undefined && Shop !== "" && Shop !== null) {
                                var timShop = $.grep(dataShopAll, function (item, index) { return (item.WarehouseCode + '--' + item.WarehouseCodeB1 + '--' + item.WarehouseName) === Shop; });

                                if (timShop !== undefined && timShop !== null && timShop !== "" && timShop.length > 0) {

                                    hot.updateSettings({
                                        cells: function (row, col, prop) {
                                            var cellProperties = {};

                                            if (row === dataHcCreateHandsontable.length - 1) {
                                                cellProperties.readOnly = false;
                                            }

                                            return cellProperties;

                                        }
                                    });

                                    return true;
                                } else {
                                    return false;
                                }
                            }
                            else {
                                hot.setDataAtRowProp(row, 'ItemName', '', 'not');
                                //▼Add - TrungNC3 - 10/10/2017 - Thêm Nhóm SP & Hình thức xuất
                                hot.setDataAtRowProp(row, 'GroupProduct', '', 'not');
                                //▼Add - TrungNC3 - 10/10/2017 - Thêm Nhóm SP & Hình thức xuất
                                hot.setDataAtRowProp(row, 'GroupName', '', 'not');
                                hot.setDataAtRowProp(row, 'Quantity', '', 'not');
                                hot.setDataAtRowProp(row, 'Price', '', 'not');
                                hot.setDataAtRowProp(row, 'Sum', '', 'not');
                                hot.setDataAtRowProp(row, 'Unit', '', 'not');
                                hot.setDataAtRowProp(row, 'Note', '', 'not');
                            }
                        }
                        if (col === 'ItemName') {
                            var Item = change[i][3];
                            if (Item !== undefined && Item !== "" && Item !== null) {
                                var timItem = $.grep(dataProductAll, function (item, index) { return item.ItemName === Item; });

                                if (timItem !== undefined && timItem !== null && timItem !== "" && timItem.length > 0) {

                                    hot.updateSettings({
                                        cells: function (row, col, prop) {
                                            var cellProperties = {};

                                            if (row === dataHcCreateHandsontable.length - 1) {
                                                cellProperties.readOnly = false;
                                            }

                                            return cellProperties;

                                        }
                                    });

                                    return true;
                                } else {
                                    return false;
                                }
                            }
                            else {
                                hot.setDataAtRowProp(row, 'ItemName', '', 'not');
                                hot.setDataAtRowProp(row, 'GroupProduct', '', 'not');//Add - TrungNC3 - 13/11/2017 - Thêm Nhóm SP & Hình thức xuất
                                hot.setDataAtRowProp(row, 'GroupName', '', 'not');
                                hot.setDataAtRowProp(row, 'Quantity', '', 'not');
                                hot.setDataAtRowProp(row, 'Price', '', 'not');
                                hot.setDataAtRowProp(row, 'Sum', '', 'not');
                                hot.setDataAtRowProp(row, 'Unit', '', 'not');
                                hot.setDataAtRowProp(row, 'Note', '', 'not');
                            }
                        }
                        //▼Add - TrungNC3 - 13/11/2017 - Thêm Nhóm SP & Hình thức xuất
                        if (col === 'Quantity') {
                            var thietbi = hot.getDataAtCell(row, 2);
                            if (thietbi !== "" && thietbi !== undefined && thietbi !== null) {
                                var a = change[i][3], b = hot.getDataAtCell(row, 6);
                                if (a === "" || a === undefined || isNaN(a) || a === null) {
                                    a = 0;
                                    hot.setDataAtCell(row, 5, 0, 'not');
                                }
                                if (b === "" || b === undefined || isNaN(b) || b === null) {
                                    b = 0;
                                    hot.setDataAtCell(row, 6, 0, 'not');
                                }
                                var rs = Math.ceil(a * b);
                                if (!isNaN(rs) && rs !== undefined && rs !== null && rs !== "")
                                    hot.setDataAtCell(row, 7, rs, 'not');
                                else
                                    hot.setDataAtCell(row, 7, 0, 'not');
                                return true;
                            } else {
                                return false;
                            }
                        }
                        if (col === 'ghichu') {
                            var thietbi = hot.getDataAtCell(row, 2);
                            if (thietbi !== "" && thietbi !== undefined && thietbi !== null) {
                                return true;
                            } else {
                                hot.selectCell(row, 0, row, 0);
                                return false;
                            }
                        }
                        //▲Add - TrungNC3 - 13/11/2017 - Thêm Nhóm SP & Hình thức xuất
                    }
                },
                afterChange: function (changes, source) {
                    if (!changes) {
                        return;
                    }
                    var instance = this;
                    changes.forEach(function (change) {
                        var row = change[0];
                        var col = change[1];
                        var newValue = change[3];
                        var cellProperties, options;

                        //▼Add - TrungNC3 - 13/11/2017 - Thêm Nhóm SP & Hình thức xuất
                        if (col == "GroupProduct") {
                            if (newValue != '' && newValue != null && newValue != undefined) {
                                var ItemArr = $.grep(dataProductAll, function (item, index) {
                                    return (item.MaNhomSP + '--' + item.TenNhomSP) == newValue;
                                });
                                if (ItemArr.length > 0) {
                                    var ItemArrName = [];
                                    $.each(ItemArr, function (index, item) {
                                        ItemArrName.push(item.ItemName);
                                    });
                                    if (ItemArrName.length > 0) {
                                        cellProperties = instance.getCellMeta(row, 2);
                                        cellProperties.source = ItemArrName;
                                    }
                                    else {
                                        cellProperties = instance.getCellMeta(row, 2);
                                        cellProperties.source = [];
                                        instance.setDataAtRowProp(row, 'ItemName', '', 'not');
                                        instance.setDataAtRowProp(row, 'GroupName', '', 'not');
                                        instance.setDataAtRowProp(row, 'soluongtonkho', '', 'not');
                                        instance.setDataAtRowProp(row, 'soluongdat', '', 'not');
                                        instance.setDataAtRowProp(row, 'Price', '', 'not');
                                        instance.setDataAtRowProp(row, 'Unit', '', 'not');
                                    }
                                }
                                else {
                                    cellProperties = instance.getCellMeta(row, 2);
                                    cellProperties.source = [];
                                    instance.setDataAtRowProp(row, 'ItemName', '', 'not');
                                    instance.setDataAtRowProp(row, 'GroupName', '', 'not');
                                    instance.setDataAtRowProp(row, 'soluongtonkho', '', 'not');
                                    instance.setDataAtRowProp(row, 'soluongdat', '', 'not');
                                    instance.setDataAtRowProp(row, 'Price', '', 'not');
                                    instance.setDataAtRowProp(row, 'Unit', '', 'not');
                                };
                            };
                        };
                        //▲Add - TrungNC3 - 13/11/2017 - Thêm Nhóm SP & Hình thức xuất
                        if (col == 'ItemName' && newValue !== undefined && newValue !== null && newValue !== '') {
                            var shop = hot.getDataAtRowProp(row, 'ShopCode'); //== Lấy dữ liệu từ cột 'ShopCode' có dòng bằng row
                            if (shop === '' || shop === undefined || shop === null) {
                                XFunction.RenderMessage('error', 'Chọn shop trước khi chọn sản phẩm!');
                                hot.setDataAtRowProp(row, 'ItemName', '', 'not');
                                return false;
                            }
                            var rows = hot.getDataAtRow(row);
                            var colls = $.grep(hot.getData(), function (item, index) {
                                return item.ShopCode !== null && item.ShopCode !== undefined
                                    && item.ShopCode !== '' && item.ShopCode == shop && item.ItemName == newValue;
                            });
                            if (colls.length > 1) {
                                XFunction.RenderMessage('error', 'Mặt hàng [' + newValue + '] shop [' + shop + '] đã đặt trên lưới trước đó. Vui lòng chọn mặt hàng khác!');
                                hot.setDataAtRowProp(row, 'ItemName', '', 'not');
                                hot.setDataAtRowProp(row, 'GroupName', '', 'not');
                                hot.setDataAtRowProp(row, 'Quantity', '', 'not');
                                hot.setDataAtRowProp(row, 'Price', '', 'not');
                                hot.setDataAtRowProp(row, 'Sum', '', 'not');
                                hot.setDataAtRowProp(row, 'Unit', '', 'not');
                                hot.setDataAtRowProp(row, 'Note', '', 'not');
                                return false;
                            }
                            else {
                                if (newValue !== undefined && newValue !== "" && newValue !== null) {
                                    var timthietbi = $.grep(dataProductAll, function (item, index) { return item.ItemName === newValue; });
                                    if (timthietbi !== undefined && timthietbi !== null && timthietbi !== "" && timthietbi.length > 0) {
                                        hot.setDataAtCell(row, 4, timthietbi[0].GroupName, 'not');
                                        hot.setDataAtCell(row, 5, 0, 'not');
                                        hot.setDataAtCell(row, 6, timthietbi[0].Price, 'not');
                                        hot.setDataAtCell(row, 7, 0, 'not'),
                                            hot.setDataAtCell(row, 8, timthietbi[0].Unit, 'not'),
                                            hot.setDataAtCell(row, 9, "", 'not');

                                        hot.selectCell(row, 5, row, 5);
                                        //▼Add - TrungNC3 - 13/11/2017 - Thêm Nhóm SP & Hình thức xuất
                                        var MaShop = '', MaSP = '';
                                        var dataShopChon = $.grep(dataShopAll, function (item, index) {
                                            return shop == (item.WarehouseCode + '--' + item.WarehouseCodeB1 + '--' + item.WarehouseName);
                                        });
                                        if (dataShopChon.length > 0) {
                                            MaShop = dataShopChon[0].WarehouseCodeB1;
                                        }
                                        var dataItemChon = $.grep(dataProductAll, function (item, index) { return item.ItemName === newValue; });
                                        if (dataItemChon.length > 0) {
                                            MaSP = dataItemChon[0].ItemCode;
                                        }
                                        var dataInventoryAll = [], dataInventoryAllName = [];
                                        $.get('/Requests/GetInventoryByItem_typeId_155', { itemCode: MaSP, warehouseCode: MaShop }, function (data) {
                                            dataInventoryAll = data;
                                            if (dataInventoryAll.length > 0) {
                                                hot.setDataAtRowProp(row, 'QuantityTonKho', dataInventoryAll[0].TonKho, 'not');
                                            }
                                        });
                                        var group_Item = hot.getDataAtRowProp(row, 'GroupProduct');
                                        var dataNhomSanPham = $.grep(data_GroupProduct, function (item, index) {
                                            return timthietbi[0].MaNhomSP == item.MaNhom;
                                        });
                                        if (dataNhomSanPham.length > 0 && (group_Item === null || group_Item === '' || group_Item === undefined)) {

                                            hot.setDataAtRowProp(row, 'GroupProduct', (dataNhomSanPham[0].MaNhom + '--' + dataNhomSanPham[0].TenNhom), 'not');
                                        }
                                        else {
                                            hot.setDataAtRowProp(row, 'GroupProduct', group_Item, 'not');
                                        };
                                        //▲Add - TrungNC3 - 13/11/2017 - Thêm Nhóm SP & Hình thức xuất
                                        hot.updateSettings({
                                            cells: function (row, col, prop) {
                                                var cellProperties = {};

                                                if (row === dataMkoMkoHandsontable.length - 1) {
                                                    cellProperties.readOnly = false;
                                                }

                                                return cellProperties;
                                            }
                                        });
                                        return true;
                                    } else {
                                        return false;
                                    }
                                }
                            }
                        }
                    });
                },//End Afterchanges
            };
        };
        hot = new Handsontable(container, setting());
        function contructExecl155() {
            var X = XLSX;
            function fixdata(data) {
                var o = "", l = 0, w = 10240;
                for (; l < data.byteLength / w; ++l) o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w, l * w + w)));
                o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w)));
                return o;
            }
            function to_json(workbook) {
                var result = {};
                workbook.SheetNames.forEach(function (sheetName) {
                    var roa = X.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);
                    if (roa.length > 0) {
                        result[sheetName] = roa;
                    }
                });
                return result;
            }
            $('#FileSupport').change(function (event) {
                //$('#WaitDialog').modal('show');
                var fileValid = false;
                fileValid = Validater.endFile($('#FileSupport').val());
                if (fileValid) {
                    var files = event.target.files;
                    var f = files[0];
                    {
                        var reader = new FileReader();
                        var name = f.name;
                        reader.onload = function (e) {
                            var data = e.target.result;
                            var arr = fixdata(data);
                            wb = X.read(btoa(arr), { type: 'base64' });
                            var wb;
                            var output = to_json(wb);
                            var dataH = [];

                            if (output.SheetImport !== null && output.SheetImport !== '' && output.SheetImport !== undefined) {
                                var dataHcCreate = [];
                                // tao du lieu day du
                                $.each(output.SheetImport, function (index, item) {
                                    dataHcCreate.push({
                                        'ShopCode': item["Shop"],
                                        'ItemID': item["Mã mặt hàng"],
                                        'Quantity': $.isNumeric(item['Số lượng']) == true ? Math.ceil(item['Số lượng']) : item['Số lượng'],
                                        'Note': item['Ghi chú'],
                                    });
                                });
                                //kiem tra nhap day du thong tin
                                var colnameRe = ["ShopCode", "ItemID", "Quantity"];
                                var dataInvalidRe = [];
                                var dataInvalidShopCode = [];
                                var dataShopAndItemInvalid = [];
                                var dataProductInvalid = [];
                                var dataProductNameInvalid = [];
                                var dataQuantityInvalid = [];
                                $.each(dataHcCreate, function (index, item) {
                                    // kiem tra day du du lieu
                                    var check = true;
                                    $.each(colnameRe, function (count, element) {
                                        if (item[element] === null || item[element] === '' || item[element] === undefined) {
                                            check = false;
                                        }
                                    });
                                    if (check == false) {
                                        dataInvalidRe.push((index + 2));
                                        //XFunction.RenderMessage('error', 'Lỗi Import!!! Phải nhập đầy đủ thông tin trên lưới');
                                        return false;
                                    }
                                    // kiem tra sai shop
                                    var dataShop = $.grep(dataShopAll, function (itemShop, indexShop) {
                                        return itemShop.WarehouseCodeB1 === item.ShopCode;
                                    });
                                    if (dataShop.length == 0) {
                                        dataInvalidShopCode.push((index + 2))
                                    }
                                    // kiem tra sai ma mat hang
                                    var dataProduct = $.grep(dataProductAll, function (itemProduct, indexProduct) {
                                        return itemProduct.ItemId == item.ItemID;
                                    });
                                    if (dataProduct.length == 0) {
                                        dataProductInvalid.push((index + 2))
                                    }
                                    // kiem tra số lượng 
                                    if ($.isNumeric(item.Quantity) === false || item.Quantity <= 0) {
                                        dataQuantityInvalid.push((index + 2));
                                    }
                                    //kiem tra trung shop va san pham
                                    var dataShopItem = $.grep(dataHcCreate, function (itemShop, indexShop) {
                                        return itemShop.ShopCode == item.ShopCode && itemShop.ItemID == item.ItemID;
                                    });
                                    if (dataShopItem.length > 1) {
                                        dataShopAndItemInvalid.push((index + 2));
                                    }
                                });
                                // bao loi ra man hinh tao
                                if (dataInvalidRe.length > 0) {
                                    XFunction.RenderMessage('error', 'Lỗi Import!!! Dữ liệu nhập chưa đầy đủ! Vui lòng xem lại dòng ' + dataInvalidRe.join(',') + ' !'); return false;
                                }
                                if (dataInvalidShopCode.length > 0) {
                                    XFunction.RenderMessage('error', 'Lỗi Import!!! Mã shop B1 không tồn tại! Vui lòng xem lại dòng ' + dataInvalidShopCode.join(',') + ' !'); return false;
                                }
                                if (dataProductInvalid.length > 0) {
                                    XFunction.RenderMessage('error', 'Lỗi Import!!! Mặt hàng không tồn tại! Vui lòng xem lại dòng ' + dataProductInvalid.join(',') + ' !'); return false;
                                }
                                if (dataQuantityInvalid.length > 0) {
                                    XFunction.RenderMessage('error', 'Lỗi Import!!! Số lượng phải là kiểu số và lớn hơn 0! Vui lòng xem lại dòng ' + dataQuantityInvalid.join(',') + ' !'); return false;
                                }
                                if (dataShopAndItemInvalid.length > 0) {
                                    XFunction.RenderMessage('error', 'Lỗi Import!!! Tồn tại shop trùng mặt hàng! Vui lòng xem lại dòng ' + dataShopAndItemInvalid.join(',') + ' !'); return false;
                                }
                                console.log(dataHcCreate);
                                //gan du lieu cho luoi
                                $.each(dataHcCreate, function (index, item) {
                                    var shopInfo = $.grep(dataShopAll, function (itemShopInfo, indexShopInfo) {
                                        return itemShopInfo.WarehouseCodeB1 == item.ShopCode;
                                    });
                                    var productInfo = $.grep(dataProductAll, function (itemPropInfo, indexProInfo) {
                                        return itemPropInfo.ItemId == item.ItemID;
                                    });
                                    if (shopInfo.length == 0) {
                                        return false;
                                    }
                                    if (productInfo.length == 0) {
                                        return false;
                                    }
                                    else {
                                        //▼ Add - TrungNC3 - 13/11/2017 - Thêm Nhóm SP & Hình thức xuất
                                        var NhomSanPham = '';
                                        if (productInfo.MaNhomSP !== null && productInfo.MaNhomSP !== '' && productInfo.MaNhomSP !== undefined) {
                                            NhomSanPham = productInfo[0].MaNhomSP + '--' + productInfo[0].TenNhomSP;
                                        };
                                        //▲ Add - TrungNC3 - 13/11/2017 - Thêm Nhóm SP & Hình thức xuất
                                        dataH.push(
                                            {
                                                'ShopIdIns': item.ShopCode,
                                                'ShopCode': shopInfo[0].WarehouseCode + '--' + shopInfo[0].WarehouseCodeB1 + '--' + shopInfo[0].WarehouseName,
                                                'GroupProduct': NhomSanPham,// Add - TrungNC3 - 13/11/2017 - Thêm Nhóm SP & Hình thức xuất
                                                'ItemId': item.ItemID,
                                                'ItemName': productInfo[0].ItemName,
                                                //'QuantityTonKho': SoLuongTonKho,
                                                'GroupId': productInfo[0].GroupId,
                                                'GroupName': productInfo[0].GroupName,
                                                'Quantity': item.Quantity,
                                                'Price': productInfo[0].Price,
                                                'Sum': item.Quantity * productInfo[0].Price,
                                                'Unit': productInfo[0].Unit,
                                                'Note': item.Note,
                                            });
                                    }

                                });
                            }
                                //▼ Add-LuanNT44-03/10/2019-Loại 155-Thêm thông báo
                            else
                            {
                                XFunction.RenderMessage('error', 'Bạn vui lòng kiểm tra lại tên sheet cần import thông tin là SheetImport !');
                            }
                            //▲ Add-LuanNT44-03/10/2019-Loại 155-Thêm thông báo
                            dataHcCreateHandsontable = [];
                            dataHcCreateHandsontable = dataH;
                            hot.loadData(dataHcCreateHandsontable);
                            hot.render();
                        };
                        reader.readAsArrayBuffer(f);
                    }
                }
                $('#FileSupport').val('');
                //$('#WaitDialog').modal('hide');
            });
        }
        contructExecl155();
        hot.selectCell(0, 0, 0, 0);//
        $btnSend.on('click', function () {
            var myData = hot.getData(0, 0, hot.getData().length, 10), datas = [], dataCheckLimitedHcCreate = [];// Add - TrungNC3 - 13/11/2017 - Thêm Nhóm SP & Hình thức xuất
            $.each(myData, function (index, item) {
                //▼ Add - TrungNC3 - 13/11/2017 - Thêm Nhóm SP & Hình thức xuất
                if (item[2] != null && item[2] != undefined && item[2] != "") {
                    var timkiemthietbi = $.grep(dataProductAll, function (element, index) {
                        return element.ItemName === item[2] && item[5] > 0;
                    });
                    var timkiemShop = $.grep(dataShopAll, function (element, index) {
                        return (element.WarehouseCode + '--' + element.WarehouseCodeB1 + '--' + element.WarehouseName) === item[0];
                    });
                    if (timkiemthietbi != null && timkiemthietbi != undefined && timkiemthietbi.length > 0
                        && timkiemShop != null && timkiemShop != undefined && timkiemShop.length > 0) {
                        var newData = {
                            'ShopCode': timkiemShop[0].WarehouseCode.split("--")[0],
                            'ShopName': timkiemShop[0].WarehouseName.split("--")[0],
                            'ItemId': timkiemthietbi[0].ItemId,
                            'ItemName': timkiemthietbi[0].ItemName,
                            'GroupId': timkiemthietbi[0].GroupId,
                            'GroupName': timkiemthietbi[0].ItemName,
                            'QuantityTonKho': item[3],
                            'Quantity': item[5],
                            'Price': timkiemthietbi[0].Price,
                            'Sum': item[7],
                            'Unit': timkiemthietbi[0].Unit,
                            'Note': item[9],
                            'QuantityVuotTonKho': item[5] - item[3],
                        };
                        datas.push(newData);
                    }
                }
                //▲ Add - TrungNC3 - 13/11/2017 - Thêm Nhóm SP & Hình thức xuất
            });
            var dataTonKhoLonHonSoLuong = [];

            if (datas.length == 0) {
                XFunction.RenderMessage('error', 'Chi tiết không được để trống <br/>Xin hãy nhập chi tiết vào bảng chi tiết');
                return false;
            }
            else {
                var dataCheckVuotTonKho = $.grep(datas, function (item, index) {
                    return item.QuantityTonKho < item.Quantity;
                });
                //console.log(dataCheckVuotTonKho); return;
                if (dataCheckVuotTonKho !== null && dataCheckVuotTonKho !== undefined && dataCheckVuotTonKho !== "" && dataCheckVuotTonKho.length > 0) {
                    $.each(dataCheckVuotTonKho, function (index, item) {
                        $('#tableVuotTonKho').append('<tr class="danger"><td>' + item.ShopName + '</td><td>' + item.ItemName + '</td><td>' + item.QuantityVuotTonKho.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,") + '</td><td>' + (item.Price * item.QuantityVuotTonKho).toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,") + '</td></tr>');
                    });
                    $('#modalConfirm').modal({ backdrop: 'static', keyboard: false, show: true });
                    $("#gui-calllog").off('click').click(function () {
                        console.log(datas); //return;
                        $('#Details').val(JSON.stringify(datas));
                        $('#DetailsLimited').val(JSON.stringify([]));
                        $('#Description').val(catagoryInfo.Description);
                        $('#TitleRequest').val($('#Title').val());
                        $('#typeId').val(catagoryInfo.Id);
                        var form = $("form#form-create");
                        form.attr("action", "/Requests/Create");
                        form.submit();
                        $('#WaitDialog').modal('show');
                        return true;
                    });
                    $("#khong-gui-calllog").off('click').click(function () {
                        $('#modalConfirm').modal("hide");
                        $('#tableVuotTonKho').empty();
                        datas = [];
                        return false;
                    });
                }
                else {
                    console.log(datas); //return;
                    $('#Details').val(JSON.stringify(datas));
                    $('#DetailsLimited').val(JSON.stringify([]));
                    $('#Description').val(catagoryInfo.Description);
                    $('#TitleRequest').val($('#Title').val());
                    $('#typeId').val(catagoryInfo.Id);
                    var form = $("form#form-create");
                    form.attr("action", "/Requests/Create");
                    form.submit();
                    $('#WaitDialog').modal('show');
                    return true;
                }
            }
        });
    };      //Đồ dùng hành chính - HC tạo cho Shop mới*/    
    function contruct_165() {
        //▼ Add - NghiaTV5 - 1/12/2017 - 165 - Thêm mới v1
        var DefaultValueEmty = function (value) {
            var valueRe = "";
            if (value === '' || value === null || value === undefined) {
                valueRe = "";
            } else {
                valueRe = value;
            }
            if (value instanceof Array) {
                valueRe = value.length == 0 ? "" : value.join(",");
            }
            return valueRe;
        };
        //lấy shop 
        var LoadDataShop = [], dataShop = [], DataShopFull = [];
        var LoaddataMaSP = [], dataSP = [], DataSPFull = [];
        var LoadDataSystem = [], DataSystem = [], DataSystemFull = [];
        var LoaiCap = [];
        LoaiCap.push('Cấp mới', 'Cấp bổ sung')
        $.get('/Requests/Get_AllShop', { regionId: 0 }, function (data) {
            $.each(data, function (index, item) {
                var ShopName = item.WarehouseCode + ' - ' + item.WarehouseName
                LoadDataShop.push(ShopName);
                DataShopFull.push({ WarehouseCode: item.WarehouseCode, ShopName: ShopName })
                dataShop.push({ WarehouseCode: item.WarehouseCode });
            });

        });
        //lấy sản phẩm 
        $.get('/Requests/Get_SanPham_ITSupport', null, function (data) {
            DataSPFull = data;
            $.each(data, function (index, item) {
                LoaddataMaSP.push(item.ItemId);
                dataSP.push({ ItemId: item.ItemId });
            })
        })
        //lấy hệ thống
        $.get('/Requests/GetCatagoryTree', { type: 165 }, function (dataSys) {
            $.each(dataSys, function (index, item) {
                DataSystemFull.push({ MaHeThong: item.Id, TenHeThong: item.Name })
                LoadDataSystem.push(item.Name)
                DataSystem.push({ Id: item.Id });
            })
        })
        $('#hd165_RSMMoi').show();
        $('#dowloadSupport165').show();
        function endFile(name) {

            var extension = name.split('.').pop().toLowerCase();
            if ($.inArray(extension, ['xlsx']) == -1) {
                renderMessage('error', 'File exel không hợp lệ định dạng file hỗ trợ : xlsx');
                return false;
            }
            else {
                return true;
            }
        };
        $('#FileSupport_165').change(function (event) {
            var X = XLSX;
            function fixdata(data) {
                var o = "", l = 0, w = 10240;
                for (; l < data.byteLength / w; ++l) o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w, l * w + w)));
                o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w)));
                return o;
            }
            function to_json(workbook) {
                var result = {};
                workbook.SheetNames.forEach(function (sheetName) {
                    var roa = X.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);
                    if (roa.length > 0) {
                        result[sheetName] = roa;
                    }
                });
                return result;
            }
            var fileValid = false;
            fileValid = endFile($('#FileSupport_165').val());

            if (fileValid) {
                var files = event.target.files;
                var f = files[0];
                var reader = new FileReader();
                var name = f.name;
                reader.onload = function (e) {
                    var data = e.target.result;
                    var arr = fixdata(data);
                    var wb;
                    wb = X.read(btoa(arr), { type: 'base64' });
                    var output = to_json(wb);
                    var dataDemo = [];
                    if (output.ImportMau !== null && output.ImportMau !== '' && output.ImportMau !== undefined) {
                        var dataImport = [];
                        var colnameRe = ["LoaiCap", "MaShop", "HeThong", "MaSanPham", "SoLuong"];
                        var regex = /^[0-9]+$/;
                        var dem = 1;
                        var CheckLoaiCap = [], Checkmashop = [], CheckHeThong = [], CheckMaSanPham = [], dataInvalidShopCode = [], dataInvalidLoaiCap = [];
                        var dataInvalidProduct = [], dataInvalidSystem = [];
                        // kiểm tra số 
                        var InvalidNumBerShop = [], InvalidNumBerHethong = [], InvalidNumBerMaSP = [], InvalidNumBerSoLuong = [], InvalidNumBerLoaiCap = [];
                        var checkdataFull = [];
                        var DuLieuTrungExcel = [], DuLieuTrungLuoi = [];
                        //Loại cấp	Mã shop	Hệ thống Mã sản phẩm đổi mới Số lượng
                        $.each(output.ImportMau, function (index, item) {
                            dataImport.push({
                                LoaiCap: item["Loại cấp"],
                                MaShop: item["Mã shop"],
                                ShopName: null,
                                HeThong: item["Hệ thống"],
                                SystemName: null,
                                MaSanPham: item['Mã sản phẩm đổi mới'],
                                ProductName: null,
                                SoLuong: item['Số lượng'],
                            });
                        })
                        if (dataImport.length > 0) {

                            // check dữ liệu tồn tại 
                            var check = true;
                            $.each(dataImport, function (index, item) {
                                //kiểm tra dữ liệu đầy đủ 
                                $.each(colnameRe, function (count, element) {
                                    if (item[element] === null || item[element] === '' || item[element] === undefined) {
                                        check = false;
                                    }
                                })
                                if (check == false) {
                                    checkdataFull.push((index + 2));
                                    return false;
                                }
                                //kiểm tra dữ liệu trùng trong Excel 
                                var TrungExcel = $.grep(dataImport, function (itemTrung, indexTrung) {
                                    return itemTrung.LoaiCap == item.LoaiCap && itemTrung.MaShop == item.MaShop && itemTrung.HeThong == item.HeThong && itemTrung.MaSanPham == item.MaSanPham;
                                })
                                if (TrungExcel.length > 1) {
                                    DuLieuTrungExcel.push((index + 2))
                                }
                                // Kiểm tra dữ liệu trùng trong Lưới chi tiết  với File Excel

                                var TrungLuoi = $.grep(hot.getData(), function (itemTrung, indexTrung) {
                                    var Cap = "";
                                    itemTrung.LoaiCap == "Cấp mới" ? Cap = 1 : itemTrung.LoaiCap == "Cấp bổ sung" ? Cap = 2 : "";
                                    return Cap == item.LoaiCap && itemTrung.ShopCode == item.MaShop && itemTrung.ItemCode == item.HeThong && itemTrung.ProductCode == item.MaSanPham;
                                })
                                if (TrungLuoi.length > 0) {
                                    DuLieuTrungLuoi.push((index + 2))
                                }
                                //****** kiểm tra số các cột 
                                if ($.isNumeric(item.LoaiCap) == false) {
                                    InvalidNumBerLoaiCap.push(index + 2);
                                }
                                if ($.isNumeric(item.MaShop) == false) {
                                    InvalidNumBerShop.push(index + 2);
                                }
                                if ($.isNumeric(item.HeThong) == false) {
                                    InvalidNumBerHethong.push(index + 2);
                                }
                                if ($.isNumeric(item.MaSanPham) == false) {
                                    InvalidNumBerMaSP.push(index + 2);
                                }
                                if ($.isNumeric(item.SoLuong) == false) {
                                    InvalidNumBerSoLuong.push(index + 2);
                                }
                                ////*****************/////
                                //check loại cấp 1 : cấp mới 2: cấp bổ sung 
                                if (item.LoaiCap != 1 && item.LoaiCap != 2) {
                                    dataInvalidLoaiCap.push((index + 2))
                                    return false;
                                }

                                //check shop tồn tại
                                var checkShop = $.grep(DataShopFull, function (itemShop, indexShop) {

                                    if (itemShop.WarehouseCode === item.MaShop) {
                                        item.ShopName = itemShop.ShopName
                                    }
                                    return itemShop.WarehouseCode === item.MaShop;
                                });
                                if (checkShop.length == 0) {
                                    dataInvalidShopCode.push((index + 2))
                                }
                                //check sản phẩm 
                                var checkProduct = $.grep(DataSPFull, function (itemProduct, indexProduct) {
                                    if (itemProduct.ItemId === item.MaSanPham) {
                                        item.ProductName = itemProduct.ItemName
                                    }
                                    return itemProduct.ItemId === item.MaSanPham;
                                });
                                if (checkProduct.length == 0) {
                                    dataInvalidProduct.push((index + 2))
                                }
                                // check hệ thống 
                                var checkSystem = $.grep(DataSystemFull, function (itemSystem, indexSystem) {

                                    if (itemSystem.MaHeThong == item.HeThong) {
                                        item.SystemName = itemSystem.TenHeThong
                                    }
                                    return itemSystem.MaHeThong == item.HeThong;
                                });
                                if (checkSystem.length == 0) {
                                    dataInvalidSystem.push((index + 2))
                                }

                            })

                            if (dataInvalidLoaiCap.length > 0) {
                                $('#FileSupport_165').val('')
                                dataImport = [];
                                $('#modalErrorMes_165').modal('show');
                                document.getElementById('Value').innerHTML = 'Lỗi Import!!! Loại cấp 1: cấp mới , 2: cấp bổ sung <br> Loại cấp không đúng. Vui lòng xem lại dòng ' + dataInvalidLoaiCap.join(',');
                                return false;
                            }
                            if (InvalidNumBerLoaiCap.length > 0) {
                                $('#FileSupport').val('')
                                dataImport = [];
                                $('#modalErrorMes_165').modal('show');
                                document.getElementById('Value').innerHTML = 'Lỗi Import!!! Loại cấp yêu cầu nhập số Vui lòng xem lại dòng ' + InvalidNumBerLoaiCap.join(',');
                                return false;
                            }
                            if (InvalidNumBerHethong.length > 0) {
                                $('#FileSupport').val('')
                                dataImport = [];
                                $('#modalErrorMes_165').modal('show');
                                document.getElementById('Value').innerHTML = 'Lỗi Import!!! Mã hệ thống yêu cầu nhập số ' + InvalidNumBerHethong.join(',');
                                return false;
                            }

                            if (InvalidNumBerShop.length > 0) {
                                $('#FileSupport').val('')
                                dataImport = [];
                                $('#modalErrorMes_165').modal('show');
                                document.getElementById('Value').innerHTML = 'Lỗi Import!!! Mã shop yêu cầu nhập số Vui lòng xem lại dòng  ' + InvalidNumBerShop.join(',');
                                return false;
                            }
                            if (InvalidNumBerMaSP.length > 0) {
                                $('#FileSupport').val('')
                                dataImport = [];
                                $('#modalErrorMes_165').modal('show');
                                document.getElementById('Value').innerHTML = 'Lỗi Import!!! Mã sản phẩm cầu nhập số Vui lòng xem lại dòng ' + InvalidNumBerMaSP.join(',');
                                return false;
                            }
                            if (InvalidNumBerSoLuong.length > 0) {
                                $('#FileSupport').val('')
                                dataImport = [];
                                $('#modalErrorMes_165').modal('show');
                                document.getElementById('Value').innerHTML = 'Lỗi Import!!! Số lượng phải là số  Vui lòng xem lại dòng ' + InvalidNumBerSoLuong.join(',');
                                return false;
                            }

                            if (dataInvalidSystem.length > 0) {
                                $('#FileSupport').val('')
                                dataImport = [];
                                $('#modalErrorMes_165').modal('show');
                                document.getElementById('Value').innerHTML = 'Lỗi Import!!! Mã hệ thống không tồn tại Vui lòng xem lại dòng ' + dataInvalidSystem.join(',');
                                return false;
                            }
                            if (dataInvalidProduct.length > 0) {
                                $('#FileSupport').val('')
                                dataImport = [];
                                $('#modalErrorMes_165').modal('show');
                                document.getElementById('Value').innerHTML = 'Lỗi Import!!! Mã Sản phẩm không tồn tại Vui lòng xem lại dòng ' + dataInvalidProduct.join(',');
                                return false;
                            }
                            if (dataInvalidShopCode.length > 0) {
                                $('#FileSupport').val('')
                                dataImport = [];
                                $('#modalErrorMes_165').modal('show');
                                document.getElementById('Value').innerHTML = 'Lỗi Import!!! Mã shop không tồn tại Vui lòng xem lại dòng ' + dataInvalidShopCode.join(',');
                                return false;
                            }
                            if (DuLieuTrungExcel.length > 0) {
                                $('#modalErrorMes_165').modal('show');
                                document.getElementById('Value').innerHTML = 'Lỗi Import!!!  Có ' + dem + ' Dữ liệu trùng trong file Excel Vui lòng xem dòng ' + DuLieuTrungExcel.join(',');
                                $('#FileSupport').val('')
                                dataImport = [], DuLieuTrungExcel = [];
                                return false;
                            }
                            if (DuLieuTrungLuoi.length > 0) {
                                $('#modalErrorMes_165').modal('show');
                                document.getElementById('Value').innerHTML = 'Lỗi Import!!!  Có ' + dem + ' Dữ liệu trùng trong File Excel với lưới chi tiết calllog ! <br> Vui lòng xem dòng ' + DuLieuTrungLuoi.join(',') + " trong File Excel !";
                                $('#FileSupport').val('')
                                dataImport = [], DuLieuTrungLuoi = [];
                                return false;
                            }
                            if (checkdataFull.length > 0) {
                                $('#FileSupport').val('')
                                dataImport = [];
                                $('#modalErrorMes_165').modal('show');
                                document.getElementById('Value').innerHTML = 'Lỗi Import!!! Dữ liệu nhập chưa đầy đủ Vui lòng xem lại dòng  ' + checkdataFull.join(',');
                                return false;
                            }

                            //gán dữ liệu cho lưới
                            dataHcCreateHandsontable = [];
                            $.grep(hot.getData(), function (item, index) {

                                if (item.LoaiCap !== undefined && item.ProductCode !== undefined && item.ShopCode !== undefined && item.Quantity !== undefined && item.ShopCode !== undefined) {
                                    dataHcCreateHandsontable.push(item);
                                }
                            });
                            var CheckLuoi = hot.getSettings().data;
                            $.each(dataImport, function (index, item) {
                                dataHcCreateHandsontable.push({
                                    Id: null,
                                    ItemCode: item.HeThong,
                                    ItemName: item.SystemName,
                                    ProductCode: item.MaSanPham,
                                    ProductName: item.ProductName,
                                    Quantity: item.SoLuong,
                                    ShopCode: item.MaShop,
                                    ShopName: item.ShopName,
                                    LoaiCap: item.LoaiCap == 1 ? "Cấp mới" || item.LoaiCap == 2 : "Cấp bổ sung",
                                })
                            })
                            console.log(dataHcCreateHandsontable);
                            hot.loadData(dataHcCreateHandsontable);
                            hot.render();
                        }
                        else {
                            alert("Không lấy được File Excel lỗi Dev");
                        }
                    }
                }
                reader.readAsArrayBuffer(f);
            }
            else {
                $('#FileSupport_165').val('');
                dataImport = [];
                $('#myModal').modal('hide');
                $('#modalErrorMes').modal('show');
                document.getElementById('Value1').innerHTML = 'File không đúng mẫu !';
                return false;
            }
        });
        //▲ Add - NghiaTV5 - 1/12/2017 - 165 - Thêm mới v1
        $areaChiTiet.show(); $areaDowloadAndImport.hide();// vùng chi tiết call Log        
        $.get('/Requests/Get_AllShop', null, function (dataShop) {
            $.get('/Requests/GetCatagoryTree', { type: 165 }, function (dataSys) {
                $.get('/Requests/Get_SanPham_ITSupport', null, function (dataSP) {
                    var dataShopAll = [];
                    var dataSystem = [];
                    var dataProduct = [];
                    var arrShopAll = [''];
                    var arrSysName = [''];
                    var arrNameProduct = [''];
                    var arrProductCode = [''];
                    dataShopAll = dataShop;
                    dataSystem = dataSys;
                    dataProduct = dataSP;
                    if (dataShop != null && dataShop != '' && dataShop != undefined) {
                        $.each(dataShop, function (index, item) {
                            arrShopAll.push(item.WarehouseCode + ' - ' + item.WarehouseName);
                        });
                    }
                    $.each(dataSys, function (index, item) {
                        arrSysName.push(item.Name);
                    });
                    $.each(dataSP, function (index, item) {
                        arrNameProduct.push(item.ItemName);
                        arrProductCode.push(item.ItemId);
                    });
                    var setting = function () {
                        return {
                            //=================================Data=======
                            data: dataHcCreateHandsontable,
                            //================================Cols=======
                            maxCols: 9,
                            minCols: 9,
                            startCols: 9,
                            minSpareCols: 0,
                            allowInsertColumn: false,
                            allowRemoveColumn: false,
                            autoColumnSize: true,
                            autoWrapCol: true,
                            columnSorting: false,
                            colWidths: 'undefined',
                            copyColsLimit: 9,
                            currentColClassName: 'currentCol', //currentCol
                            fixedColumnsLeft: 0,
                            manualColumnMove: false,
                            manualColumnResize: true,
                            viewportColumnRenderingOffset: 9,
                            sortIndicator: true,
                            //================================Rows=======
                            allowInsertRow: true,
                            allowRemoveRow: true,
                            autoRowSize: true,
                            autoWrapRow: true,
                            copyRowsLimit: 1000,
                            currentRowClassName: 'currentRow',
                            fixedRowsTop: 0,
                            manualRowMove: false,
                            manualRowResize: true,
                            rowHeaders: true,
                            minSpareRows: 10,
                            startRows: 0,
                            //viewportRowRenderingOffset : 'auto',
                            //maxRows: dataMkoMkoHandsontable+1,
                            //minRows: dataMkoMkoHandsontable+1,
                            //================================Oder=======
                            allowInvalid: false,
                            stretchH: 'all',
                            commentedCellClassName: 'htCommentCell',
                            comments: true,
                            contextMenu: true,
                            copyable: true,
                            customBorders: false,
                            debug: false,
                            disableVisualSelection: true,
                            enterBeginsEditingBoolean: true,
                            fillHandle: true,
                            outsideClickDeselects: true,
                            fragmentSelection: false,
                            groups: false,
                            invalidCellClassName: 'htInvalid',
                            mergeCells: false,
                            multiSelect: true,
                            noWordWrapClassName: 'htNoWrap',
                            placeholder: false,
                            placeholderCellClassName: 'htPlaceholder',
                            readOnlyCellClassName: 'htDimmed',
                            search: false,
                            trimWhitespace: true,
                            undo: true,
                            formulas: true,
                            wordWrap: true,
                            //====================================Oder ==============================================
                            //▼ Add - NghiaTV5 - 1/12/2017 - 165 - Thêm mới v1
                            colHeaders: ["Loại Cấp ", "Tên Shop", "Hệ thống", "Mã sản phẩm cấp mới", "Tên sản phẩm cấp mới", "Số lượng"],
                            columns: [
                                {
                                    data: "LoaiCap", type: 'dropdown',
                                    className: 'htLeft',
                                    source: LoaiCap,
                                    strict: true,
                                    width: 150
                                },
                                //▲ Add - NghiaTV5 - 1/12/2017 - 165 - Thêm mới v1
                                { data: "ShopName", type: 'dropdown', source: arrShopAll, strict: false, className: 'htLeft', width: 250 },
                                { data: "ItemName", type: 'dropdown', source: arrSysName, strict: false, className: 'htLeft', width: 250 },
                                { data: 'ProductCode', type: 'dropdown', source: arrProductCode, className: 'htLeft' },
                                { data: 'ProductName', type: 'dropdown', source: arrNameProduct, className: 'htLeft' },
                                { data: "Quantity", type: 'numeric', format: '0,0', validator: Validater.quantity, allowInvalid: false, },
                            ],
                            afterChange: function (changes, source) {
                                if (!changes || source == 'not') {
                                    return;
                                }
                                var instance = this;
                                changes.forEach(function (change) {
                                    var row = change[0];
                                    var col = change[1];
                                    var newValue = change[3];
                                    var cellProperties, options;

                                    if (col == 'ProductCode') {
                                        var namePr = $.grep(dataProduct, function (item, index) {
                                            return item.ItemId == newValue;
                                        });
                                        if (namePr != null && namePr != '' && namePr != undefined)
                                            hot.setDataAtRowProp(row, 'ProductName', namePr[0].ItemName, 'not');
                                    }
                                    if (col == 'ProductName') {
                                        var namePr = $.grep(dataProduct, function (item, index) {
                                            return item.ItemName == newValue;
                                        });
                                        if (namePr != null && namePr != '' && namePr != undefined)
                                            hot.setDataAtRowProp(row, 'ProductCode', namePr[0].ItemId, 'not');
                                    }
                                    if (col == 'ShopName') {
                                        var shopN = $.grep(dataShopAll, function (item, index) {
                                            return item.WarehouseCode + ' - ' + item.WarehouseName == newValue;
                                        });
                                        if (shopN != null && shopN != '' && shopN != undefined) {
                                            hot.setDataAtRowProp(row, 'ShopCode', shopN[0].WarehouseCode, 'not');
                                            $.each(dataHcCreateHandsontable, function (index, item) {
                                                if (item.ShopName != '' && item.ShopName != undefined && item.ShopName != null) {
                                                    instance.setDataAtRowProp(index, 'ShopName', newValue, 'not');
                                                    if (shopN != '' && shopN != null && shopN != undefined)
                                                        instance.setDataAtRowProp(index, 'ShopCode', shopN[0].WarehouseCode, 'not');
                                                    else
                                                        instance.setDataAtRowProp(index, 'ShopCode', '', 'not');
                                                }
                                            });
                                            instance.render();
                                        }
                                        else {
                                            instance.setDataAtRowProp(row, 'ShopCode', '', 'not');
                                        }
                                    }
                                    if (col == 'ItemName') {
                                        var itemN = $.grep(dataSystem, function (item, index) {
                                            return item.Name == newValue;
                                        });

                                        if (itemN != null && itemN != '' && itemN != undefined) {
                                            hot.setDataAtRowProp(row, 'ItemCode', itemN[0].Id, 'not');
                                            var shopGet = $.grep(dataHcCreateHandsontable, function (item, index) {
                                                return item.ShopName != '' && item.ShopName != undefined && item.ShopName != null;
                                            });
                                            if (shopGet != '' && shopGet != undefined && shopGet != null) {
                                                instance.setDataAtRowProp(row, 'ShopName', shopGet[0].ShopName, 'not');
                                                instance.setDataAtRowProp(row, 'ShopCode', shopGet[0].ShopCode, 'not');
                                            }
                                        }
                                        else {
                                            hot.setDataAtRowProp(row, 'ItemCode', '', 'not');
                                            hot.setDataAtRowProp(row, 'ShopName', '', 'not');
                                            hot.setDataAtRowProp(row, 'ShopCode', '', 'not');
                                        }

                                    }
                                });
                            },//End Afterchanges
                        };
                    };
                    hot = new Handsontable(container, setting());
                    hot.selectCell(0, 0, 0, 0);//
                    $btnSend.on('click', function () {
                        var myData = hot.getData() == undefined ? [] : $.grep(hot.getData(), function (item, index) {
                            return (item.ShopCode !== null && item.ShopCode !== undefined && item.ShopCode !== '') ||
                                (item.ItemName !== null && item.ItemName !== undefined && item.ItemName !== '') ||
                                (item.ProductCode !== null && item.ProductCode !== undefined && item.ProductCode !== '') ||
                                (item.Quantity !== null && item.Quantity !== undefined && item.Quantity !== '');
                        });

                        var dataInvalid = [];
                        $.each(myData, function (index, item) {
                            if (item.ShopCode == '' || item.ShopCode == null || item.ShopCode == undefined ||
                                item.ItemName == '' || item.ItemName == null || item.ItemName == undefined ||
                                item.ProductCode == '' || item.ProductCode == null || item.ProductCode == undefined ||
                                item.Quantity == '' || item.Quantity == null || item.Quantity == undefined) {
                                dataInvalid.push(item);
                            }
                        });
                        if (dataInvalid.length > 0) {
                            XFunction.RenderMessage('error', 'Vui lòng nhập đầy đủ thông tin!');
                            return;
                        }
                        var datareturn = [];
                        $.each(myData, function (index, item) {
                            datareturn.push({
                                'ShopCode': item.ShopCode,
                                'ShopName': item.ShopName,
                                'ItemCode': item.ItemCode,
                                'ItemName': item.ItemName,
                                'ProductCode': item.ProductCode,
                                'ProductName': item.ProductName,
                                'Quantity': item.Quantity
                                , 'Quantity1': item.LoaiCap == "Cấp mới" ? 1 : 2 // Add - NghiaTV5 - 1/12/2017 - 165 - Thêm mới v1
                            });
                        });

                        if (datareturn.length == 0) {
                            XFunction.RenderMessage('error', 'Chi tiết không được để trống <br/>Xin hãy nhập chi tiết vào bảng chi tiết');
                            return false;
                        }
                        else {
                            //▼ Add - NghiaTV5 - 1/12/2017 - 165 - Thêm mới v1
                            var a = hot.getSettings().data;
                            var dem = 0
                            var b = [];
                            for (i = 0; i < a.length; i++) {
                                if (a[i].ShopCode !== undefined && a[i].ItemName !== undefined && a[i].ProductCode !== undefined && a[i].LoaiCap !== undefined && a[i].ShopCode !== null && a[i].ItemName !== null && a[i].ProductCode !== null && a[i].LoaiCap !== null) {
                                    for (j = 0; j < i; j++) {
                                        if (a[i].LoaiCap == a[j].LoaiCap && a[i].ShopCode == a[j].ShopCode && a[i].ItemName == a[j].ItemName && a[i].ProductCode == a[j].ProductCode) {
                                            //alert(a[i].ShopCode + "mã" + "-" + a[i].ItemName + "-" + a[i].ProductCode)
                                            //alert(a[i].ShopCode + "-" + a[j].ShopCode + "----" + a[i].ItemName + "-" + a[j].ItemName + "----" + a[i].ProductCode + "-" + a[j].ProductCode)
                                            dem++;
                                        }
                                    }
                                    if (dem > 0) {
                                        b.push(i + 1);
                                    }
                                }
                            }
                            if (dem > 0) {
                                XFunction.RenderMessage('error', 'Dữ liệu trùng trên lưới chi tiết Vui lòng xem lại dòng ' + b.join(",") + '');
                                return false;
                            }
                            //▲ Add - NghiaTV5 - 1/12/2017 - 165 - Thêm mới v1
                            $('#Details').val(JSON.stringify(datareturn));
                            $('#DetailsLimited').val(JSON.stringify([]));
                            $('#Description').val(catagoryInfo.Description);
                            $('#TitleRequest').val($('#Title').val());
                            $('#typeId').val(catagoryInfo.Id);
                            $('#GroupId').val(datareturn[0].ItemCode);
                            var form = $("form#form-create");
                            form.attr("action", "/Requests/Create");
                            form.submit();
                            $('#WaitDialog').modal('show');
                            return true;
                        }
                    });
                });
            });
        });
    };

    //--------------- Hiền.Đoàn 07.11.2016 Đồ dùng Mkts - khối BO
    function contruct_161() {//====================================================ok
        var dataLimitedMko_161 = [], dataMktsBO = [];
        $('.compose-message').hide();
        $('#detail').show();
        $('#sum-total').hide();  // not support dowload file
        $('#handsontableEx').css('overflow', 'hidden');

        $.get('/Requests/GetDevices', { type: 22 }, function (data) {
            dataProduct = data;
            $.each(data, function (index, item) {
                arrNameProduct.push(item.ItemName);
            });
        });
        $.get('/Requests/GetLimitedValue', { type: 22 }, function (data) {
            dataLimitedMko_161 = data;
        });

        var DataFormsProcessing = ['Cấp mới', 'Bảo hành'];
        var setting = function () {
            return {
                //=================================Data=======
                data: dataMktsBO,
                //================================Cols=======
                maxCols: 8,
                minCols: 8,
                startCols: 8,
                minSpareCols: 0,
                allowInsertColumn: false,
                allowRemoveColumn: false,
                autoColumnSize: true,
                autoWrapCol: true,
                columnSorting: false,
                colWidths: 'undefined',
                copyColsLimit: 8,
                currentColClassName: 'currentCol', //currentCol
                fixedColumnsLeft: 0,
                manualColumnMove: false,
                manualColumnResize: true,
                viewportColumnRenderingOffset: 8,
                sortIndicator: true,
                //================================Rows=======
                allowInsertRow: true,
                allowRemoveRow: true,
                autoRowSize: true,
                autoWrapRow: true,
                copyRowsLimit: 1000,
                currentRowClassName: 'currentRow',
                fixedRowsTop: 0,
                manualRowMove: false,
                manualRowResize: true,
                rowHeaders: true,
                minSpareRows: 10,
                startRows: 10,
                //viewportRowRenderingOffset : 'auto',
                //maxRows: 'Infinity',
                //minRows: 'Infinity',
                //================================Oder=======
                allowInvalid: false,
                stretchH: 'all',
                commentedCellClassName: 'htCommentCell',
                comments: true,
                contextMenu: true,
                copyable: true,
                customBorders: false,
                debug: false,
                disableVisualSelection: true,
                enterBeginsEditingBoolean: true,
                fillHandle: true,
                outsideClickDeselects: true,
                fragmentSelection: false,
                groups: false,
                invalidCellClassName: 'htInvalid',
                mergeCells: false,
                multiSelect: true,
                noWordWrapClassName: 'htNoWrap',
                placeholder: false,
                placeholderCellClassName: 'htPlaceholder',
                readOnlyCellClassName: 'htDimmed',
                search: false,
                trimWhitespace: true,
                undo: true,
                formulas: true,
                wordWrap: true,
                //====================================Oder ==============================================
                colHeaders: ["Tên mặt hàng", "Nhóm hàng", "Số lượng", "Đơn giá", "Thành tiền", "Đ.V tính", "Hình thức xử lý", "Ghi chú"],
                columns: [
                    { data: "ItemName", type: 'autocomplete', source: arrNameProduct, strict: false, className: 'htLeft', width: 250 },
                    { data: "GroupName", readOnly: true, className: 'htLeft' },
                    { data: "soluongdat", type: 'numeric', format: '0,0', validator: Validater.quantity, allowInvalid: false, },
                    {
                        data: "Price", type: 'numeric', format: '0,0', readOnly: true,
                        renderer: function (instance, td, row, col, prop, value) {
                            if (col === 3 && row === dataMktsBO.length - 1) {
                                td.style.fontWeight = 'bold';
                                td.style.textAlign = 'right';
                                td.style.color = 'green';
                                value = 'Tổng tiền:';
                            }
                            Handsontable.NumericRenderer.apply(this, arguments);
                        }, width: 90,
                    },
                    {
                        data: "thanhtien", type: 'numeric', format: '0,0', readOnly: true,
                        renderer: function (instance, td, row, col, prop, value) {
                            if (col === 4 && row === dataMktsBO.length - 1) {
                                td.style.fontWeight = 'bold';
                                td.style.color = 'green';
                                sum = 0;
                                $.each(dataMktsBO, function (index, item) {
                                    if (item.thanhtien !== "" && item.thanhtien !== undefined && item.thanhtien !== null && !isNaN(item.thanhtien)) {
                                        sum += item.thanhtien;
                                    } else {
                                        sum += 0;
                                    }
                                });
                                value = sum;
                            }
                            Handsontable.NumericRenderer.apply(this, arguments);
                        }
                    },
                    { data: "Unit", className: 'htLeft', readOnly: true },
                    { data: "FormsProcessing", type: 'dropdown', source: DataFormsProcessing, className: 'htLeft' },
                    { data: "ghichu", className: 'htLeft' }
                ],
                afterRemoveRow: function (index, amount) {
                    hot.updateSettings({
                        cells: function (row, col, prop) {
                            var cellProperties = {};

                            if (row === dataMktsBO.length - 1) {
                                cellProperties.readOnly = false;
                            }

                            return cellProperties;

                        }
                    });
                },
                cells: function (row, col, prop) {
                    var cellProperties = {};

                    if (row === dataMktsBO.length - 1) {
                        cellProperties.readOnly = false;
                    }

                    return cellProperties;

                },
                beforeChange: function (change, source) {
                    if (source === 'not') return;
                    for (i = 0, len = change.length; i < len; i++) {
                        var row = change[i][0], col = change[i][1];
                        if (col === 'ItemName') {
                            var thietbiCu = change[i][2], thietbi = change[i][3];
                            var colls = hot.getDataAtCol(0);
                            var trung = $.grep(colls, function (item, index) {
                                return item == thietbi
                                    && item !== "" && item !== null && item !== undefined
                                    && thietbiCu != thietbi;
                            });
                            if (trung.length > 0) {
                                XFunction.RenderMessage('error', 'Đã tồn tại sản phẩm này trên lưới..vui lòng chọn sản phẩm khác!');
                                return false;
                            }
                            else {
                                if (thietbi !== undefined && thietbi !== "" && thietbi !== null) {
                                    var timthietbi = $.grep(dataProduct, function (item, index) { return item.ItemName === thietbi; });

                                    if (timthietbi !== undefined && timthietbi !== null && timthietbi !== "" && timthietbi.length > 0) {
                                        hot.setDataAtCell(row, 1, timthietbi[0].GroupName, 'not');
                                        hot.setDataAtCell(row, 2, 0, 'not');
                                        hot.setDataAtCell(row, 3, timthietbi[0].Price, 'not');
                                        hot.setDataAtCell(row, 4, 0, 'not'),
                                            hot.setDataAtCell(row, 5, timthietbi[0].Unit, 'not'),
                                            hot.setDataAtCell(row, 6, DataFormsProcessing[0], 'not'),//Add - TrungNC3 - 01/12/2017 - điều chỉnh mặc định là Cấp mới trong calllog mkts
                                            hot.setDataAtCell(row, 7, "", 'not');

                                        hot.selectCell(row, 2, row, 2);

                                        hot.updateSettings({
                                            cells: function (row, col, prop) {
                                                var cellProperties = {};

                                                if (row === dataMktsBO.length - 1) {
                                                    cellProperties.readOnly = false;
                                                }

                                                return cellProperties;

                                            }
                                        });

                                        return true;
                                    } else {
                                        return false;
                                    }
                                }
                            }
                        }
                        if (col === 'soluongdat') {
                            var thietbi = hot.getDataAtCell(row, 0);
                            if (thietbi !== "" && thietbi !== undefined && thietbi !== null) {
                                var a = change[i][3], b = hot.getDataAtCell(row, 3);
                                if (a === "" || a === undefined || isNaN(a) || a === null) {
                                    a = 0;
                                    hot.setDataAtCell(row, 2, 0, 'not');
                                }
                                if (b === "" || b === undefined || isNaN(b) || b === null) {
                                    b = 0;
                                    hot.setDataAtCell(row, 3, 0, 'not');
                                }
                                var rs = Math.ceil(a * b);
                                if (!isNaN(rs) && rs !== undefined && rs !== null && rs !== "")
                                    hot.setDataAtCell(row, 4, rs, 'not');
                                else
                                    hot.setDataAtCell(row, 4, 0, 'not');

                                //hot.selectCell(row + 1, 0, row + 1, 0);
                                return true;
                            } else {
                                // hot.selectCell(row, 0, row, 0);
                                return false;
                            }

                        }
                        if (col === 'FormsProcessing') {
                            var item = hot.getDataAtRowProp(row, 'ItemName');
                            if (item !== "" && item !== undefined && item !== null) {
                                return true;
                            } else {
                                hot.selectCell(row, 0, row, 0);
                                return false;
                            }
                        }
                        if (col === 'ghichu') {
                            var thietbi = hot.getDataAtCell(row, 0);
                            if (thietbi !== "" && thietbi !== undefined && thietbi !== null) {
                                //hot.selectCell(row, 0, row, 0);
                                return true;
                            } else {
                                hot.selectCell(row, 0, row, 0);
                                //return false;
                            }
                        }
                    }
                },


            };
        };
        hot = new Handsontable(container, setting());
        hot.selectCell(0, 0, 0, 0);

        $btnSend.on('click', function () {
            var myData = hot.getData(0, 0, hot.getData().length, 7), datas = [], dataCheckLimitedHc = [];
            $.each(myData, function (index, item) {
                if (item[0] != null && item[0] != undefined && item[0] != "") {
                    var timkiemthietbi = $.grep(dataProduct, function (element, index) {
                        return element.ItemName === item[0] && item[2] > 0;
                    });
                    if (timkiemthietbi != null && timkiemthietbi != undefined && timkiemthietbi.length > 0) {
                        var newData = {
                            'ItemId': timkiemthietbi[0].ItemId,
                            'ItemName': timkiemthietbi[0].ItemName,
                            'GroupId': timkiemthietbi[0].GroupId,
                            'GroupName': timkiemthietbi[0].ItemName,
                            'Quantity': item[2],
                            'Price': timkiemthietbi[0].Price,
                            'Sum': item[4],
                            'Unit': timkiemthietbi[0].Unit,
                            'FormsProcessing': item[6],
                            'Note': item[7],
                        };
                        datas.push(newData);
                    }
                }
            });
            if (datas.length == 0) {
                XFunction.RenderMessage('error', 'Chi tiết không được để trống <br/>Xin hãy nhập chi tiết vào bảng chi tiết!');
                return false;
            }
            else {

                $.each(dataLimitedMko_161, function (index, item) {
                    var nhomgioihan = $.grep(datas, function (element, index) {
                        return element.GroupId == item.MaNhom;
                    });

                    if (nhomgioihan != null && nhomgioihan != undefined && nhomgioihan != "" && nhomgioihan.length > 0) {
                        var thanhtien = 0, vuot = 0;
                        $.each(nhomgioihan, function (index, itemGroup) {
                            thanhtien += itemGroup.Sum;
                        });
                        if (thanhtien > item.DinhMuc) {
                            vuot = thanhtien - item.DinhMuc;
                        }
                        var newData =
                        {
                            'ItemGroup': item.TenNhom,
                            'DinhMuc': item.DinhMuc,
                            'Vuot': vuot,
                            'Sum': thanhtien,
                            'MaNhom': item.MaNhom
                        };
                        dataCheckLimitedHc.push(newData);
                    }
                });

                var checkVuot = $.grep(dataCheckLimitedHc, function (item, index) { return item.Vuot > 0; });

                if (checkVuot != null && checkVuot != undefined && checkVuot != "" && checkVuot.length > 0) {
                    $.each(checkVuot, function (index, item) {
                        $('#tableGioiHan').append('<tr class="danger"><td>' + item.ItemGroup + '</td><td>' + item.DinhMuc.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,") + '</td><td>' + item.Vuot.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,") + '</td><td>' + item.Sum.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,") + '</td></tr>');
                    });
                    $('#warningModal').modal('show');
                    $("#SendModal").off('click').click(function () {
                        $('#Details').val(JSON.stringify(datas));
                        $('#DetailsLimited').val(JSON.stringify(dataCheckLimitedHc));
                        $('#Description').val(catagoryInfo.Description);
                        $('#TitleRequest').val($('#Title').val());
                        $('#typeId').val(catagoryInfo.Id);

                        var form = $("form#form-create");
                        form.attr("action", "/Requests/Create");
                        form.submit();
                        $('#WaitDialog').modal('show');
                        return true;
                    });
                    $("#NoSendModal").off('click').click(function () {
                        $('#warningModal').modal("hide");
                        $('#tableGioiHan').empty();
                        dataCheckLimitedHc = [], datas = [];
                        return false;
                    });
                }
                else {
                    $('#Details').val(JSON.stringify(datas));
                    $('#DetailsLimited').val(JSON.stringify(dataCheckLimitedHc));
                    $('#Description').val(catagoryInfo.Description);
                    $('#TitleRequest').val($('#Title').val());
                    $('#typeId').val(catagoryInfo.Id);

                    var form = $("form#form-create");
                    form.attr("action", "/Requests/Create");
                    form.submit();
                    $('#WaitDialog').modal('show');
                    return true;
                }
            }
        });
    };
    /*▼ Add - TrungNC3 - 2017.09.27 - Up thực CR - Cấp bóng đèn bảo hành bóng đèn*/
    function contruct_163() {
        $('.compose-message').hide();
        $('#detail').show();
        $('#sum-total').hide();   // not support dowload file
        $('#handsontableEx').css('overflow', 'hidden');
        $areaDowloadAndImport.show();
        $('#FileSupport').hide();
        var dataShopAll_B1 = [], arrItems = [], dataShop_B1 = [];
        $.get('/Requests/GetDevices', { type: 23 }, function (data) {
            $.get('/Requests/GetInfoUserCreteRequest', function (respone) {
                arrItems = data;
                if (respone[0].WarehouseCode == null || respone[0].WarehouseCode == '' || respone[0].WarehouseCode == undefined) {
                    dataShop_B1 = respone;
                    dataDevices = $.grep(data, function (item, index) {
                        return item.GroupId === 2;
                    });
                    $.each(dataDevices, function (index, item) {
                        arrNameProduct_HcCreate.push(item.ItemName);
                    });
                } else {
                    dataShop_B1 = respone;
                    dataDevices = $.grep(data, function (item, index) {
                        return item.GroupId === 2;
                    });
                    $.each(dataDevices, function (index, item) {
                        arrNameProduct_HcCreate.push(item.ItemName);
                    });
                };
            });
        });
        $.get('/Requests/GetLimitedValue', { type: 23 }, function (data) {
            dataLimitedHc = data;
        });
        $.get('/Requests/GetShopByRegion', { regionId: 0 }, function (data) {
            dataShopAll_B1 = data;
        });

        var setting = function () {
            return {
                //=================================Data=======
                data: dataHcHandsontable,
                //================================Cols=======
                maxCols: 8,
                minCols: 8,
                startCols: 8,
                minSpareCols: 0,
                allowInsertColumn: false,
                allowRemoveColumn: false,
                autoColumnSize: true,
                autoWrapCol: true,
                columnSorting: false,
                colWidths: 'undefined',
                copyColsLimit: 8,
                currentColClassName: 'currentCol', //currentCol
                fixedColumnsLeft: 0,
                manualColumnMove: false,
                manualColumnResize: true,
                viewportColumnRenderingOffset: 8,
                sortIndicator: true,
                //================================Rows=======
                allowInsertRow: true,
                allowRemoveRow: true,
                autoRowSize: true,
                autoWrapRow: true,
                copyRowsLimit: 1000,
                currentRowClassName: 'currentRow',
                fixedRowsTop: 0,
                manualRowMove: false,
                manualRowResize: true,
                rowHeaders: true,
                minSpareRows: 10,
                startRows: 10,
                //================================Oder=======
                allowInvalid: false,
                stretchH: 'all',
                commentedCellClassName: 'htCommentCell',
                comments: true,
                contextMenu: true,
                copyable: true,
                customBorders: false,
                debug: false,
                disableVisualSelection: true,
                enterBeginsEditingBoolean: true,
                fillHandle: true,
                outsideClickDeselects: true,
                fragmentSelection: false,
                groups: false,
                invalidCellClassName: 'htInvalid',
                mergeCells: false,
                multiSelect: true,
                noWordWrapClassName: 'htNoWrap',
                placeholder: false,
                placeholderCellClassName: 'htPlaceholder',
                readOnlyCellClassName: 'htDimmed',
                search: false,
                trimWhitespace: true,
                undo: true,
                formulas: true,
                wordWrap: true,
                //====================================Oder ==============================================
                colHeaders: ["Tên mặt hàng", "Số lượng", "Ghi chú"],
                columns: [
                    { data: "ItemName", type: 'autocomplete', source: arrNameProduct_HcCreate, strict: false, className: 'htLeft', width: 300 },
                    { data: "soluongdat", type: 'numeric', format: '0,0', validator: Validater.quantity, allowInvalid: false, },
                    { data: "ghichu", className: 'htLeft', width: 400 }
                ],
                beforeChange: function (change, source) {
                    if (source === 'not') return;
                    for (i = 0, len = change.length; i < len; i++) {
                        var row = change[i][0], col = change[i][1];
                        if (col === 'ItemName') {
                            var thietbiCu = change[i][2], thietbi = change[i][3];
                            var colls = hot.getDataAtCol(0);

                            var trung = $.grep(colls, function (item, index) {
                                return item == thietbi
                                    && item !== "" && item !== null && item !== undefined
                                    && thietbiCu != thietbi;
                            });
                            if (trung.length > 0) {
                                XFunction.RenderMessage('error', 'Đã tồn tại sản phẩm này trên lưới..vui lòng chọn sản phẩm khác');
                                return false;
                            }
                            else {
                                if (thietbi !== undefined && thietbi !== "" && thietbi !== null) {
                                    var timthietbi;
                                    timthietbi = $.grep(arrItems, function (item, index) { return item.ItemName === thietbi; });
                                    if (timthietbi !== undefined && timthietbi !== null && timthietbi !== "" && timthietbi.length > 0) {
                                        hot.setDataAtCell(row, 0, timthietbi[0].ItemName, 'not');
                                        //hot.setDataAtCell(row, 1, timthietbi[0].GroupName, 'not');
                                        hot.setDataAtCell(row, 1, 0, 'not');
                                        //hot.setDataAtCell(row, 3, timthietbi[0].Price, 'not');
                                        //hot.setDataAtCell(row, 4, 0, 'not'),
                                        //hot.setDataAtCell(row, 5, timthietbi[0].Unit, 'not'),
                                        //hot.updateSettings({
                                        //    cells: function (row, col, prop) {
                                        //        cellProperties = {};
                                        //        if (col === 1 || col === 3 || col === 4 || col == 5 || row === dataHcHandsontable.length - 1) {
                                        //            cellProperties.readOnly = true;
                                        //        } else {
                                        //            cellProperties.readOnly = false;
                                        //        }

                                        //        return cellProperties;
                                        //    }
                                        //});
                                        hot.selectCell(row, 1, row, 1);
                                    } else {
                                        return false;
                                    };
                                };
                            };
                        };
                        if (col === 'soluongdat') {
                            var col0 = hot.getDataAtCell(row, 0);
                            if (col0 === '' || col0 === undefined || col0 === null) {
                                hot.selectCell(row, 0, row, 0);
                                return false;
                            } else {
                                hot.selectCell(row + 1, 0, row + 1, 0);
                            };
                        };
                        if (col === 'ghichu') {
                            var col0 = hot.getDataAtCell(row, 0);
                            if (col0 === "" || col0 === undefined || col0 === null) {
                                return false;
                            };
                            hot.selectCell(row, 0, row, 0);
                        };
                    };
                },
            };
        };
        hot = new Handsontable(container, setting());
        hot.selectCell(0, 0, 0, 0);
        $btnSend.on('click', function () {
            var myData = hot.getData(0, 0, hot.getData().length, 3), datas = [], dataCheckLimitedHcCreate = [];
            $.each(myData, function (index, item) {
                if (item[0] != null && item[0] != undefined && item[0] != "") {
                    var timkiemthietbi = $.grep(arrItems, function (element, index) {
                        return element.ItemName === item[0] && item[1] > 0;
                    });
                    var timkiemShop = $.grep(dataShopAll_B1, function (element, index) {
                        return (element.WarehouseCode === dataShop_B1[0].WarehouseCode);
                    });
                    if (timkiemthietbi != null && timkiemthietbi != undefined && timkiemthietbi.length > 0
                        && timkiemShop != null && timkiemShop != undefined && timkiemShop.length > 0) {
                        var newData = {
                            'ShopCode': timkiemShop[0].WarehouseCode.split("--")[0],
                            'ShopName': timkiemShop[0].WarehouseName.split("--")[0],
                            'ItemId': timkiemthietbi[0].ItemId,
                            'ItemName': timkiemthietbi[0].ItemName,
                            'GroupId': timkiemthietbi[0].GroupId,
                            'GroupName': timkiemthietbi[0].GroupName,
                            'Quantity': item[1],
                            'Price': timkiemthietbi[0].Price,
                            'Sum': item[1] * timkiemthietbi[0].Price,
                            'Unit': timkiemthietbi[0].Unit,
                            'Note': item[2],
                        };
                        datas.push(newData);
                    };
                };
            });
            if (datas.length == 0) {
                XFunction.RenderMessage('error', 'Chi tiết không được để trống <br/>Xin hãy nhập chi tiết vào bảng chi tiết');
                return false;
            }
            else {

                $.ajax({
                    url: '/Requests/CheckWarehouseConfig',
                    type: 'GET',
                    data: {
                        WarehouseCode: warehouseCode,
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.log("ERROR!");
                    },
                    success: function (datasCF) {
                        if (datasCF[0].ShopConfig === 0) {
                            $('#PassApproved').val('0');
                            ///console.log(datas); return false;
                            $('#Details').val(JSON.stringify(datas));
                            $('#DetailsLimited').val(JSON.stringify([]));
                            $('#Description').val(catagoryInfo.Description);
                            $('#TitleRequest').val($('#Title').val());
                            $('#typeId').val(catagoryInfo.Id);
                            var form = $("form#form-create");
                            form.attr("action", "/Requests/Create");
                            form.submit();
                            $('#WaitDialog').modal('show');
                            return true;
                        }
                        else if (datasCF[0].ShopConfig === 1) {
                            $('#PassApproved').val('1');
                            ///console.log(datas); return false;
                            $('#Details').val(JSON.stringify(datas));
                            $('#DetailsLimited').val(JSON.stringify([]));
                            $('#Description').val(catagoryInfo.Description);
                            $('#TitleRequest').val($('#Title').val());
                            $('#typeId').val(catagoryInfo.Id);
                            var form = $("form#form-create");
                            form.attr("action", "/Requests/Create");
                            form.submit();
                            $('#WaitDialog').modal('show');
                            return true;
                        }
                        else if (datasCF[0].ShopConfig === -1) {
                            if (confirm("Shop này chưa được định nghĩa nội/ngoại thành." + "\n" + "Bạn có chắc chắn muốn tạo calllog Bill vận chuyển?!") == true) {
                                $('#PassApproved').val('0');
                                ///console.log(datas); return false;
                                $('#Details').val(JSON.stringify(datas));
                                $('#DetailsLimited').val(JSON.stringify([]));
                                $('#Description').val(catagoryInfo.Description);
                                $('#TitleRequest').val($('#Title').val());
                                $('#typeId').val(catagoryInfo.Id);
                                var form = $("form#form-create");
                                form.attr("action", "/Requests/Create");
                                form.submit();
                                $('#WaitDialog').modal('show');
                                return true;
                            }
                            else {
                                $('#PassApproved').val('1');
                                ///console.log(datas); return false;
                                $('#Details').val(JSON.stringify(datas));
                                $('#DetailsLimited').val(JSON.stringify([]));
                                $('#Description').val(catagoryInfo.Description);
                                $('#TitleRequest').val($('#Title').val());
                                $('#typeId').val(catagoryInfo.Id);
                                var form = $("form#form-create");
                                form.attr("action", "/Requests/Create");
                                form.submit();
                                $('#WaitDialog').modal('show');
                                return true;
                            };
                        };
                    }
                });
            };
        });
    };
    //▲ Add - TrungNC3 - 2017.09.27 - =======================================
    //--------------- TrungNC3 Duyệt mua trả góp máy tính bảng
    function contruct_169() {
        $('.compose-message').hide();
        $('#detail').show();
        $('#handsontableEx').css('overflow', 'hidden');
        $areaDowloadAndImport.hide();
        $('#FileSupport').hide();
        var dataEmployeeOfShop = [], dataFullNameShop = [], dataProductMTB = [], dataProductNameMTB = [];
        $.get('/Requests/Get_Itemcode_MTB_MTXT', { Type: 0 }, function (dataProduct) {
            dataProductMTB = dataProduct;
            $.each(dataProduct, function (index, item) {
                dataProductNameMTB.push(item.ItemCode + '--' + item.ItemName);
            });
        });
        $.get('/Requests/GetEmps', { ShopCode: '0' }, function (dataEmps) {
            $.get('/Requests/sp_ApproveEmployeesInfo', { Type: 0 }, function (dataEmployees) {
                $.get('/Requests/GetShopByRegion', { regionId: 0 }, function (dataRegion) {
                    $.each(dataRegion, function (count, element) {
                        if (element.WarehouseCode === warehouseCode) {
                            dataEmployeeOfShop.push(element);
                        }
                        dataFullNameShop.push(element.WarehouseCode + '--' + element.WarehouseName);
                    });
                    var dataUser = $.grep(dataEmps, function (item, index) {
                        return item.text.split(' - ')[2] === nameNotCode;
                    });
                    var datagridHandsontable = [{
                        SaleShop: dataEmployeeOfShop[0].WarehouseCode + '--' + dataEmployeeOfShop[0].WarehouseName,
                        Employee: dataUser[0].text,
                        Product: null,
                        Price: null
                    }];
                    var setting = function () {
                        return {
                            //=================================Data=======
                            data: datagridHandsontable,
                            //================================Cols=======
                            maxCols: 7,
                            minCols: 7,
                            startCols: 0,
                            minSpareCols: 0,
                            allowInsertColumn: false,
                            allowRemoveColumn: false,
                            autoColumnSize: true,
                            autoWrapCol: true,
                            columnSorting: false,
                            colWidths: 'undefined',
                            copyColsLimit: 7,
                            currentColClassName: 'currentCol', //currentCol
                            fixedColumnsLeft: 0,
                            manualColumnMove: false,
                            manualColumnResize: true,
                            viewportColumnRenderingOffset: 7,
                            sortIndicator: true,
                            //================================Rows=======
                            allowInsertRow: true,
                            allowRemoveRow: true,
                            autoRowSize: true,
                            autoWrapRow: true,
                            copyRowsLimit: 1000,
                            currentRowClassName: 'currentRow',
                            fixedRowsTop: 0,
                            manualRowMove: false,
                            manualRowResize: true,
                            rowHeaders: true,
                            minSpareRows: 5,
                            startRows: 10,
                            //================================Oder=======
                            allowInvalid: false,
                            stretchH: 'all',
                            commentedCellClassName: 'htCommentCell',
                            comments: true,
                            contextMenu: true,
                            copyable: true,
                            customBorders: false,
                            debug: false,
                            disableVisualSelection: true,
                            enterBeginsEditingBoolean: true,
                            fillHandle: true,
                            outsideClickDeselects: true,
                            fragmentSelection: false,
                            groups: false,
                            invalidCellClassName: 'htInvalid',
                            mergeCells: false,
                            multiSelect: true,
                            noWordWrapClassName: 'htNoWrap',
                            placeholder: false,
                            placeholderCellClassName: 'htPlaceholder',
                            readOnlyCellClassName: 'htDimmed',
                            search: false,
                            trimWhitespace: true,
                            undo: true,
                            formulas: true,
                            wordWrap: true,
                            //====================================Oder ==============================================
                            colHeaders: ["Tên shop", "Nhân viên", "Tên sản phẩm", "Đơn giá"],
                            columns: [
                                { data: "SaleShop", type: 'autocomplete', source: dataFullNameShop, width: 250 },
                                { data: "Employee", type: 'numeric', width: 300 },
                                { data: "Product", type: 'autocomplete', source: dataProductNameMTB, width: 300 },
                                { data: "Price", type: 'numeric', format: '0,0', validator: Validater.quantity, allowInvalid: false, className: 'htLeft', readOnly: true, width: 150 },
                            ],
                            cells: function (row, col, prop) {
                                cellProperties = {};
                                if ((row === 0 && (col === 1 || col === 3)) || (row > 0)) {
                                    cellProperties.readOnly = true;
                                } else {
                                    cellProperties.readOnly = false;
                                }
                                return cellProperties;
                            },
                            beforeChange: function (change, source) {
                                if (source === 'not') return;
                                for (i = 0, len = change.length; i < len; i++) {
                                    var row = change[i][0], col = change[i][1];
                                    var newValue = change[3];
                                    if (col === 'Product') {
                                        var Item = change[i][3];
                                        if (Item !== undefined && Item !== "" && Item !== null) {
                                            var timItem = $.grep(dataProductMTB, function (item, index) {
                                                return item.ItemCode + '--' + item.ItemName === Item;
                                            });
                                            if (timItem !== undefined && timItem !== null && timItem !== "" && timItem.length > 0) {
                                                hot.setDataAtRowProp(row, 'Price', timItem[0].Price, 'not');
                                            }
                                        }
                                        else {
                                            hot.setDataAtRowProp(row, 'Price', '', 'not');
                                        }
                                    }
                                }
                            },
                        };
                    };
                    hot = new Handsontable(container, setting());
                    hot.selectCell(0, 0, 0, 0);
                    $btnSend.on('click', function () {
                        var myData = hot.getData(0, 0, 0, 4);
                        var datas = $.grep(myData, function (item, index) {
                            return (item[0] !== null && item[0] !== '' && item[0] !== undefined)
                                && (item[2] !== null && item[2] !== '' && item[2] !== undefined);
                        });
                        var dataReturn = [], dataCheckValidProduct = [];
                        if (datas.length > 0) {
                            $.each(datas, function (index, item) {
                                var datacheckValid = $.grep(dataProductMTB, function (element, count) {
                                    return (element.ItemCode + '--' + element.ItemName) === item[2];
                                });
                                if (datacheckValid.length === 0) {
                                    dataCheckValidProduct.push(item);
                                };
                                dataReturn.push({
                                    ShopSales: item[0].split('--')[0],
                                    Product: item[2].split('--')[0],
                                });
                            });
                        } else {
                            XFunction.RenderMessage('error', 'Chi tiết không được để trống <br/>Xin hãy nhập chi tiết vào bảng chi tiết');
                            return false;
                        };
                        if (!!dataEmployees && dataEmployees.length > 0) {
                            if (!!dataEmployees[0].Result && dataEmployees[0].Result == 1) {
                                //  Do nothing
                            }
                            else {
                                XFunction.RenderMessage('error', dataEmployees[0].Msg);
                                return false;
                            }
                        };
                        if (dataCheckValidProduct.length > 0) {
                            XFunction.RenderMessage('error', 'Sản phẩm đã chọn không hợp lệ. Vui lòng chọn lại sản phẩm');
                            return false;
                        }

                        if (datas.length == 0) {
                            XFunction.RenderMessage('error', 'Chi tiết không được để trống <br/>Xin hãy nhập chi tiết vào bảng chi tiết');
                            return false;
                        }
                        else {
                            //console.log(dataReturn); return false;
                            $('#Details').val(JSON.stringify(dataReturn));
                            $('#DetailsLimited').val(JSON.stringify([]));
                            $('#Description').val(catagoryInfo.Description);
                            $('#TitleRequest').val($('#Title').val());
                            $('#typeId').val(catagoryInfo.Id);
                            var form = $("form#form-create");
                            form.attr("action", "/Requests/Create");
                            form.submit();
                            $('#WaitDialog').modal('show');
                            return true;
                        };
                    });
                });
            });
        });
    };
    //--------------- TrungNC3 Duyệt mua laptop giảm 2 triệu
    function contruct_170() {
        $('.compose-message').hide();
        $('#detail').show();
        $('#handsontableEx').css('overflow', 'hidden');
        $areaDowloadAndImport.hide();
        $('#FileSupport').hide();
        var dataEmployeeOfShop = [], dataFullNameShop = [], dataProductMTB = [], dataProductNameMTB = [];
        $.get('/Requests/Get_Itemcode_MTB_MTXT', { Type: 1 }, function (dataProduct) {
            dataProductMTB = dataProduct;
            $.each(dataProduct, function (index, item) {
                dataProductNameMTB.push(item.ItemCode + '--' + item.ItemName);
            });
        });
        $.get('/Requests/GetEmps', { ShopCode: '0' }, function (dataEmps) {
            $.get('/Requests/sp_ApproveEmployeesInfo', { Type: 1 }, function (dataEmployees) {
                $.get('/Requests/GetShopNotInBO', { regionId: 0 }, function (dataRegion) {
                    $.get('/Requests/GetPhongBan', null, function (dataOrganizationHierachies) {
                        $.each(dataRegion, function (count, element) {
                            if (element.WarehouseCode === warehouseCode) {
                                dataEmployeeOfShop.push(element);
                            }
                            dataFullNameShop.push(element.WarehouseCode + '--' + element.WarehouseName);
                        });
                        var dataUser = $.grep(dataEmps, function (item, index) {
                            return item.text.split(' - ')[2] === nameNotCode;
                        });
                        var dataUserOrganizationHierachies = $.grep(dataOrganizationHierachies, function (item, index) {
                            return item.Code === maPhongBanGui;
                        });
                        if (dataEmployeeOfShop.length > 0) {
                            var datagridHandsontable = [{
                                SaleShop: dataEmployeeOfShop[0].WarehouseCode + '--' + dataEmployeeOfShop[0].WarehouseName,
                                Employee: dataUser[0].text,
                                OrganizationHierachyCode: dataUserOrganizationHierachies[0].FullName,
                                Product: null,
                                Price: null
                            }];
                        }
                        else {
                            var datagridHandsontable = [{
                                SaleShop: null,
                                Employee: dataUser[0].text,
                                OrganizationHierachyCode: dataUserOrganizationHierachies[0].FullName,
                                Product: null,
                                Price: null
                            }];
                        }
                        var setting = function () {
                            return {
                                //=================================Data=======
                                data: datagridHandsontable,
                                //================================Cols=======
                                maxCols: 7,
                                minCols: 7,
                                startCols: 0,
                                minSpareCols: 0,
                                allowInsertColumn: false,
                                allowRemoveColumn: false,
                                autoColumnSize: true,
                                autoWrapCol: true,
                                columnSorting: false,
                                colWidths: 'undefined',
                                copyColsLimit: 8,
                                currentColClassName: 'currentCol', //currentCol
                                fixedColumnsLeft: 0,
                                manualColumnMove: false,
                                manualColumnResize: true,
                                viewportColumnRenderingOffset: 8,
                                sortIndicator: true,
                                //================================Rows=======
                                allowInsertRow: true,
                                allowRemoveRow: true,
                                autoRowSize: true,
                                autoWrapRow: true,
                                copyRowsLimit: 1000,
                                currentRowClassName: 'currentRow',
                                fixedRowsTop: 0,
                                manualRowMove: false,
                                manualRowResize: true,
                                rowHeaders: true,
                                minSpareRows: 5,
                                startRows: 10,
                                //================================Oder=======
                                allowInvalid: false,
                                stretchH: 'all',
                                commentedCellClassName: 'htCommentCell',
                                comments: true,
                                contextMenu: true,
                                copyable: true,
                                customBorders: false,
                                debug: false,
                                disableVisualSelection: true,
                                enterBeginsEditingBoolean: true,
                                fillHandle: true,
                                outsideClickDeselects: true,
                                fragmentSelection: false,
                                groups: false,
                                invalidCellClassName: 'htInvalid',
                                mergeCells: false,
                                multiSelect: true,
                                noWordWrapClassName: 'htNoWrap',
                                placeholder: false,
                                placeholderCellClassName: 'htPlaceholder',
                                readOnlyCellClassName: 'htDimmed',
                                search: false,
                                trimWhitespace: true,
                                undo: true,
                                formulas: true,
                                wordWrap: true,
                                //====================================Oder ==============================================
                                colHeaders: ["Tên shop bán hàng", "Nhân viên", "Phòng ban nhân viên", "Tên sản phẩm", "Đơn giá"],
                                columns: [
                                    { data: "SaleShop", type: 'autocomplete', source: dataFullNameShop, width: 250 },
                                    { data: "Employee", type: 'numeric', width: 300 },
                                    { data: "OrganizationHierachyCode", type: 'numeric', width: 300 },
                                    { data: "Product", type: 'autocomplete', source: dataProductNameMTB, width: 300 },
                                    { data: "Price", type: 'numeric', format: '0,0', validator: Validater.quantity, allowInvalid: false, className: 'htLeft', readOnly: true, width: 150 },
                                ],
                                cells: function (row, col, prop) {
                                    cellProperties = {};
                                    if ((row === 0 && (col === 1 || col === 4 || col === 2)) || (row > 0)) {
                                        cellProperties.readOnly = true;
                                    } else {
                                        cellProperties.readOnly = false;
                                    }
                                    return cellProperties;
                                },
                                beforeChange: function (change, source) {
                                    if (source === 'not') return;
                                    for (i = 0, len = change.length; i < len; i++) {
                                        var row = change[i][0], col = change[i][1];
                                        
                                        //▼	Edit - VietMXH - 18/06/2020 - MTXT chặn shop không được tạo CL==================================================
                                        var newValue = change[i][3];
                                        if (col === 'Product') {
                                            if (!!newValue) {
                                                var timItem = $.grep(dataProductMTB, function (item, index) {
                                                    return item.ItemCode + '--' + item.ItemName === newValue;
                                                });
                                                if (!!timItem && timItem.length > 0) {
                                                    hot.setDataAtRowProp(row, 'Price', timItem[0].Price, 'not');
                                                }
                                            }
                                            else {
                                                hot.setDataAtRowProp(row, 'Price', '', 'not');
                                            }
                                        }
                                        else if (col == 'SaleShop') {
                                            if (!!newValue) {
                                                var l__List__SaleShop = $.grep(dataFullNameShop, function (p__Item, p__Index) {
                                                    return p__Item == newValue;
                                                });
                                                if (!!l__List__SaleShop && l__List__SaleShop.length > 0) {
                                                    //  Do nothing
                                                }
                                                else {
                                                    XFunction.RenderMessage('error', 'Tên shop bán hàng không hợp lệ! Vui lòng liên hệ Support hỗ trợ!');
                                                    change[i][3] = '';
                                                }
                                            }
                                        }
                                        //▲	Edit - VietMXH - 18/06/2020 - MTXT chặn shop không được tạo CL==================================================

                                    }
                                },
                            };
                        };
                        hot = new Handsontable(container, setting());
                        hot.selectCell(0, 0, 0, 0);
                        $btnSend.on('click', function () {
                            var myData = hot.getData(0, 0, 0, 4);
                            var datas = $.grep(myData, function (item, index) {
                                return (item[0] !== null && item[0] !== '' && item[0] !== undefined)
                                    && (item[3] !== null && item[3] !== '' && item[3] !== undefined);
                            });
                            var dataReturn = [], dataCheckValidProduct = [];
                            if (datas.length > 0) {
                                $.each(datas, function (index, item) {
                                    var datacheckValid = $.grep(dataProductMTB, function (element, count) {
                                        return (element.ItemCode + '--' + element.ItemName) === item[3];
                                    });
                                    if (datacheckValid.length === 0) {
                                        dataCheckValidProduct.push(item);
                                    };
                                    dataReturn.push({
                                        ShopSales: item[0].split('--')[0],
                                        Product: item[3].split('--')[0],
                                    });
                                });
                            } else {
                                XFunction.RenderMessage('error', 'Chi tiết không được để trống <br/>Xin hãy nhập chi tiết vào bảng chi tiết');
                                return false;
                            };
                            if (!!dataEmployees && dataEmployees.length > 0) {
                                if (!!dataEmployees[0].Result && dataEmployees[0].Result == 1) {
                                    //  Do nothing
                                }
                                else {
                                    XFunction.RenderMessage('error', dataEmployees[0].Msg);
                                    return false;
                                }
                            };
                            if (dataCheckValidProduct.length > 0) {
                                XFunction.RenderMessage('error', 'Sản phẩm đã chọn không hợp lệ. Vui lòng chọn lại sản phẩm');
                                return false;
                            }

                            if (datas.length == 0) {
                                XFunction.RenderMessage('error', 'Chi tiết không được để trống <br/>Xin hãy nhập chi tiết vào bảng chi tiết');
                                return false;
                            }
                            else {
                                ////console.log(dataReturn); return false;
                                $('#Details').val(JSON.stringify(dataReturn));
                                $('#DetailsLimited').val(JSON.stringify([]));
                                $('#Description').val(catagoryInfo.Description);
                                $('#TitleRequest').val($('#Title').val());
                                $('#typeId').val(catagoryInfo.Id);
                                var form = $("form#form-create");
                                form.attr("action", "/Requests/Create");
                                form.submit();
                                $('#WaitDialog').modal('show');
                                return true;
                            };
                        });
                    });
                });
            });
        });
    };
    //---------------- Hiền.Đoàn Import calllog chờ xử lý 24.05.2017
    function contruct_171() {
        $('.compose-message').hide();
        $('#detail').show();
        $('#sum-total').hide();  // not support dowload file
        $('#handsontableEx').css('overflow', 'hidden');
        $areaDowloadAndImport.show();

        let dataShop = [], dataShopName = [];
        $.ajax({
            url: "/Requests/GetShopByRegion?regionId=" + 0,
            type: "get",
            async: false,
            success: function (data) {
                dataShop = data;

                let Setting = function () {
                    return {
                        data: dataHandsontable,
                        autoColumnSize: true,
                        autoRowSize: true,
                        manualRowMove: false,
                        manualRowResize: true,
                        rowHeaders: true,
                        minSpareRows: 10,
                        stretchH: 'all',
                        colHeaders: ['Tên shop', 'Mã sản phẩm', 'Tên sản phẩm', 'SL/Imei', 'Nội dung xử lý', 'Ghi chú'],
                        columns: [
                            { data: "WarehouseName", type: 'text', className: 'htLeft', readOnly: true },
                            { data: "ProductsCode", type: 'text', className: 'htLeft', readOnly: true },
                            { data: "ProductsName", type: 'text', className: 'htLeft', readOnly: true },
                            { data: "SLIM", type: 'text', className: 'htLeft', readOnly: true },
                            { data: "NoiDung", type: 'text', className: 'htLeft', readOnly: true },
                            { data: "Notes", type: 'text', className: 'htLeft', readOnly: true },
                        ]
                    }
                };
                hot = new Handsontable(container, Setting());
                function contructExel_171() {
                    var X = XLSX;
                    function fixdata(data) {
                        var o = "", l = 0, w = 10240;
                        for (; l < data.byteLength / w; ++l) o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w, l * w + w)));
                        o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w)));
                        return o;
                    }
                    function to_json(workbook) {
                        var result = {};
                        workbook.SheetNames.forEach(function (sheetName) {
                            var roa = X.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);
                            if (roa.length > 0) {
                                result[sheetName] = roa;
                            }
                        });
                        return result;
                    }
                    $('#FileSupport').change(function (event) {
                        var fileValid = false;
                        fileValid = Validater.endFile($('#FileSupport').val());
                        if (fileValid) {
                            var files = event.target.files;
                            var f = files[0];
                            {
                                var reader = new FileReader();
                                var name = f.name;
                                reader.onload = function (e) {
                                    var data = e.target.result;
                                    var arr = fixdata(data);
                                    wb = X.read(btoa(arr), { type: 'base64' });
                                    var wb;
                                    var output = to_json(wb);
                                    var dataH = [];
                                    if (output.Import !== null && output.Import !== '' && output.Import !== undefined) {
                                        var DataP = [];
                                        // tao du lieu day du
                                        $.each(output.Import, function (index, item) {
                                            DataP.push({
                                                'WarehouseName': item["Tên Shop"],
                                                'ProductsCode': item["Mã Sản Phẩm"],
                                                'ProductsName': item["Tên Sản Phẩm"],
                                                'SLIM': item['SL/imei'],
                                                'NoiDung': item["Nội dung xử lý"],
                                                'Notes': item["Ghi Chú"]
                                            });
                                        });
                                        //kiem tra nhap day du thong tin
                                        var colnameRe = ["WarehouseName", "ProductsCode", "ProductsName", "SLIM", "NoiDung"];
                                        var dataInvalidRe = [];
                                        var dataInvalidShopCode = [], invaliEmp = [];
                                        let CoutShop = 0, ShopT = [];
                                        $.each(DataP, function (index, item) {
                                            // kiem tra day du du lieu
                                            var check = true;
                                            $.each(colnameRe, function (count, element) {
                                                if (item[element] === null || item[element] === '' || item[element] === undefined) {
                                                    check = false;
                                                }

                                            });
                                            if (check == false) {
                                                dataInvalidRe.push((index + 2));
                                            }
                                            // kiem tra sai shop
                                            var dataShopS = $.grep(dataShop, function (itemShop, indexShop) {
                                                return itemShop.WarehouseName === item.WarehouseName;
                                            });
                                            if (dataShopS.length == 0) {
                                                dataInvalidShopCode.push((index + 2));
                                            }
                                            else {
                                                if (item.ProductsCode == '' || item.ProductsCode == null || item.ProductsCode == undefined
                                                    || item.ProductsName == '' || item.ProductsName == null || item.ProductsName == undefined
                                                    || item.SLIM == '' || item.SLIM == null || item.SLIM == undefined
                                                    || item.NoiDung == '' || item.NoiDung == null || item.NoiDung == undefined) {
                                                    invaliEmp.push((index + 2));
                                                }
                                            }
                                            $.each(DataP, function (pig, lion) {
                                                if (lion.WarehouseName != item.WarehouseName) {
                                                    CoutShop++;
                                                }
                                            });
                                            if (CoutShop > 1) {
                                                ShopT.push(index + 2);
                                            }
                                        });
                                        // bao loi ra man hinh tao
                                        //if (dataInvalidRe.length > 0) {
                                        //    XFunction.RenderMessage('error', 'Lỗi Import!!! Dữ liệu nhập chưa đầy đủ! Vui lòng xem lại!'); return false;
                                        //}
                                        if (dataInvalidShopCode.length > 0) {
                                            XFunction.RenderMessage('error', 'Lỗi Import!!! Tên shop không tồn tại! Vui lòng xem lại dòng ' + dataInvalidShopCode.join(',') + ' !'); return false;
                                        }
                                        if (ShopT.length > 0) {
                                            XFunction.RenderMessage('error', 'Lỗi Import!!! Chỉ được import 1 shop duy nhất!'); return false;
                                        }
                                        if (invaliEmp.length > 0) {
                                            XFunction.RenderMessage('error', 'Lỗi Import!!! Dữ liệu nhập chưa đầy đủ! Vui lòng xem lại dòng ' + $.unique(invaliEmp).join(',') + '!'); return false;
                                        }
                                        //gan du lieu cho luoi
                                        $.each(DataP, function (index, item) {
                                            var shopInfo = $.grep(dataShop, function (itemShopInfo, indexShopInfo) {
                                                return itemShopInfo.WarehouseName == item.WarehouseName;
                                            });

                                            if (shopInfo.length == 0) {
                                                return false;
                                            }

                                            else {
                                                dataH.push(
                                                    {
                                                        'WarehouseName': shopInfo[0].WarehouseCode + '--' + shopInfo[0].WarehouseCodeB1 + '--' + shopInfo[0].WarehouseName,
                                                        'WarehouseCode': shopInfo[0].WarehouseCode,
                                                        'ProductsCode': item.ProductsCode,
                                                        'ProductsName': item.ProductsName,
                                                        'SLIM': item.SLIM,
                                                        'NoiDung': item.NoiDung,
                                                        'Notes': item.Notes
                                                    });
                                            }

                                        });

                                        dataHandsontable = [];
                                        dataHandsontable = dataH;
                                        hot.updateSettings({
                                            minRows: dataHandsontable.length,
                                            minSpareRows: 0
                                        });
                                        hot.loadData(dataHandsontable);
                                        hot.render();
                                    }
                                    else {
                                        XFunction.RenderMessage('error', 'Lỗi Import!!! Không có dữ liệu để import!'); return false;
                                    }

                                };
                                reader.readAsArrayBuffer(f);
                            }
                        }
                        $('#FileSupport').val('');
                    });
                }
                contructExel_171();
                hot.selectCell(0, 0, 0, 0);
                $btnSend.on('click', function () {
                    var myData = $.grep(hot.getData(), function (value, number) {
                        return value.WarehouseName != '' && value.WarehouseName != null && value.WarehouseName != undefined
                            && value.ProductsCode != '' && value.ProductsCode != null && value.ProductsCode != undefined
                            && value.ProductsName != '' && value.ProductsName != null && value.ProductsName != undefined
                            && value.SLIM != '' && value.SLIM != null && value.SLIM != undefined
                            && value.NoiDung != '' && value.NoiDung != null && value.NoiDung != undefined
                    });
                    var datas = [], dataCheckLimitedHcCreate = [];

                    if (myData.length == 0) {
                        XFunction.RenderMessage('error', 'Chi tiết không được để trống <br/>Xin hãy nhập chi tiết vào bảng chi tiết');
                        return false;
                    }
                    else {
                        $.each(myData, function (index, item) {
                            var timkiemShop = $.grep(dataShop, function (element, index) {
                                return (item.WarehouseName === (element.WarehouseCode + '--' + element.WarehouseCodeB1 + '--' + element.WarehouseName));
                            });
                            if (timkiemShop != null && timkiemShop != undefined && timkiemShop.length > 0) {
                                var newData = {
                                    'WarehouseCode': timkiemShop[0].WarehouseCode,
                                    'ProductsCode': item.ProductsCode,
                                    'ProductsName': item.ProductsName,
                                    'SLIM': item.SLIM,
                                    'NoiDung': item.NoiDung,
                                    'Notes': item.Notes
                                };
                                datas.push(newData);
                            }
                        });
                        if (datas.length == 0) {
                            XFunction.RenderMessage('error', 'Chi tiết không được để trống <br/>Xin hãy nhập chi tiết vào bảng chi tiết');
                            return false;
                        }
                        else {
                            $('#Details').val(JSON.stringify(datas));
                            $('#DetailsLimited').val(JSON.stringify([]));
                            $('#Description').val(catagoryInfo.Description);
                            $('#TitleRequest').val($('#Title').val());
                            $('#typeId').val(catagoryInfo.Id);
                            $('#WaitDialog').modal('show');
                            var form = $("form#form-create");
                            form.attr("action", "/Requests/Create");
                            form.submit();
                            return true;
                        }
                    }

                });
            }
        });
    };
    //▼ Add - TrungNC3 - 2017.09.01 - Thêm loại 175 - Hành chính hỗ trợ shop
    //---------------- NgoanHT Hành chính hổ trợ
    function contruct_175() {
        $('.compose-message').hide();
        $('#detail').show();

        $('#sum-total').hide();   // not support dowload file
        $('#handsontableEx').css('overflow', 'hidden');
        $areaDowloadAndImport.show();
        $('#FileSupport').hide();

        var rowf = '';
        var rowm = '';
        var rowsl = '';

        var setting = function () {
            return {
                //=================================Data=======
                data: dataHcHandsontable,
                //================================Cols=======
                maxCols: 8,
                minCols: 8,
                startCols: 8,
                minSpareCols: 0,
                allowInsertColumn: false,
                allowRemoveColumn: false,
                autoColumnSize: true,
                autoWrapCol: true,
                columnSorting: false,
                colWidths: 'undefined',
                copyColsLimit: 8,
                currentColClassName: 'currentCol', //currentCol
                fixedColumnsLeft: 0,
                manualColumnMove: false,
                manualColumnResize: true,
                viewportColumnRenderingOffset: 8,
                sortIndicator: true,
                //================================Rows=======
                maxRows: 3, //NgoanHT - 02/10/2017 - Loại 175 - sửa maxRows
                allowInsertRow: true,
                allowRemoveRow: true,
                autoRowSize: true,
                autoWrapRow: true,
                copyRowsLimit: 1000,
                currentRowClassName: 'currentRow',
                fixedRowsTop: 0,
                manualRowMove: false,
                manualRowResize: true,
                rowHeaders: true,
                minSpareRows: 3,
                startRows: 10,
                //================================Oder=======
                allowInvalid: false,
                stretchH: 'all',
                commentedCellClassName: 'htCommentCell',
                comments: true,
                contextMenu: true,
                copyable: true,
                customBorders: false,
                debug: false,
                disableVisualSelection: true,
                enterBeginsEditingBoolean: true,
                fillHandle: true,
                outsideClickDeselects: true,
                fragmentSelection: false,
                groups: false,
                invalidCellClassName: 'htInvalid',
                mergeCells: false,
                multiSelect: true,
                noWordWrapClassName: 'htNoWrap',
                placeholder: false,
                placeholderCellClassName: 'htPlaceholder',
                readOnlyCellClassName: 'htDimmed',
                search: false,
                trimWhitespace: true,
                undo: true,
                formulas: true,
                wordWrap: true,
                //====================================Oder ==============================================
                colHeaders: ["Nội dung shop yêu cầu hỗ trợ", "Phân loại yêu cầu", "Hướng Xử lý shop đề xuất", "Ghi chú"], //NgoanHT - 23/09/2017 - Loại: 175 - Sửa Xử lý shop đề xuất => Hướng Xử lý shop đề xuất
                columns: [
                    { data: "NoiDungShopYeuCau", type: 'text', source: arrNameProduct_HcCreate, strict: false, className: 'htLeft', width: 300 },
                    {
                        type: 'dropdown',
                        source: ['Claim Bảo hiểm', 'Claim NCC (VPP, đồ dùng HC giao thiếu...)', 'Claim bảo vệ, tạp vụ (thay bảo vệ, tạp vụ...)', 'Khác'],//NgoanHT - 03/10/2017 - Loại: 175 - Claim Nhà Bảo hiểm ==> Claim Bảo hiểm
                        width: 300
                    },
                    { data: "XuLyShopDeXuat", type: 'text', className: 'htLeft', width: 400 },
                    { data: "ghichu", type: 'text', className: 'htLeft', width: 400 }
                ],
                afterChange: function (changes, source) {

                    if (changes == null) {
                        return;
                    }
                    else (changes != null)
                    {

                        $.each(changes, function (index, item) {
                            if (item[1] == 'NoiDungShopYeuCau' && item[0] == 0 && item[3] != '') {
                                rowf = item[1];
                                rowm = item[0];
                            }
                            else if (item[0] == 0 && item[1] == 1 && item[3] != '') {
                                rowsl = item[3];
                            }
                            else if (rowf != '' && rowm != null && item[3] != '' && rowsl != '') {
                                hot.setDataAtCell(item[0], 1, rowsl, 'SO');
                            }
                            else if (rowf === '' || rowm === '' || rowsl === '') {
                                XFunction.RenderMessage('error', 'Vui lòng không bỏ trống hàng đầu tiên !');
                                if (item[0] != 0) {
                                    hot.alter('remove_row', item[0]);
                                }
                                else {
                                    hot.setDataAtCell(item[0], 0, item[2], 'TEST');
                                }
                            }
                        });
                    }
                },

            };
        };
        hot = new Handsontable(container, setting());
        hot.selectCell(0, 0, 0, 0);
        $btnSend.on('click', function () {
            var myData = hot.getData(0, 0, hot.getData().length, 4);
            var DK = false;
            $.each(myData, function (index, item) {

                if ((item[0] != null && item[1] != null) || (item[0] == null && item[1] == null)) {
                    DK = true;
                }
                else {
                    XFunction.RenderMessage('error', 'Vui lòng Nhập dữ liệu đầy đủ ở cột "Nội dung yêu cầu shop hổ trợ" và "Phân loại yêu cầu"');
                    return DK = false;
                }
            });
            if (DK == true) {
                var datas = $.grep(myData, function (item, index) {
                    return (item[0] !== null && item[0] !== '' && item[0] !== undefined)
                        && (item[1] !== null && item[1] !== '' && item[1] !== undefined);
                });
                var dataReturn = [], dataCheckValidProduct = [];
                if (datas.length > 0) {
                    $.each(datas, function (index, item) {
                        dataReturn.push({
                            NoiDung: item[0],
                            LoaiYeuCau: item[1],
                            XuLy: item[2],
                            GhiChu: item[3],
                        });
                    });

                    $('#Details').val(JSON.stringify(dataReturn));
                    $('#DetailsLimited').val(JSON.stringify([]));
                    $('#Description').val(catagoryInfo.Description);
                    $('#TitleRequest').val($('#Title').val());
                    $('#typeId').val(catagoryInfo.Id);
                    var form = $("form#form-create");
                    form.attr("action", "/Requests/Create");
                    form.submit();
                    $('#WaitDialog').modal('show');
                    return true;
                }
                else {
                    XFunction.RenderMessage('error', 'Không có nội dung<br/>Vui lòng nhập nội dung theo yêu cầu.');
                    return false;
                };
            }
        });
    };
    //▲ Add - =======================================
    //▼ ChuongNT3 - 07/07/2018 - loại 181
    function contruct_181() {
        $('.compose-message').hide();
        $('#detail').show();
        $('#sum-total').hide();
        $('#handsontableEx').css('overflow', 'hidden');
        //$areaDowloadAndImport.show();
        $('#FileSupport').hide();
        $('#HangDemo').css('display', 'block');

        $.get('/Requests/Get_RepairItem', null, function (data) {
            $.get('/Requests/Get_HangDemo', { Shop: '' }, function (dataHangDemo) { //Edit - NgoanHT - 18/04/2018 - Loại: 181 - sửa
                var stringBanDemo = [], stringHangTheoYeuCau = [], CKTenYeuCau, stringHangPTTheoYeuCau = [];             //ChuongNT3 - 04/07/2018 - loại 181
                $.each(data, function (index, item) {
                    stringBanDemo.push({ value: item.Id, label: item.Name, parent: item.ParentId })
                })
                var dt = new Date();
                //▼ Add - NgoanHT - 10/04/2018 - Loại: 181 – Xét data của hãng
                $('#CKHopDenHang').click(function () {
                    if (document.getElementById("CKHopDenHang").checked == true) {
                        $('#CKBanDemo').val('');
                        $("#CKBanDemo").prop("checked", false)
                        $("#CKBanDemo").parent().removeClass('checked');
                        CKTenYeuCau = '6775';
                        stringHangTheoYeuCau = $.grep(stringBanDemo, function (item, index) {
                            return item.parent == '6775'
                        })
                        stringHangPTTheoYeuCau = $.grep(dataHangDemo, function (item, index) {
                            return item.HopDenHang == 1
                        })

                        $('#Title').val('Sửa chữa Hộp đèn hãng(lightbox)-Bàn Demo' + ' - ' + stringHangPTTheoYeuCau[0].label + shopB1 + ' - ' + dt.getDate() + '/' + (dt.getMonth() + 1) + '/' + dt.getFullYear());
                    }
                    else {
                        $("#CKBanDemo").prop("checked", true);
                        $("#CKBanDemo").parent().addClass('checked');
                        CKTenYeuCau = '6779';
                        stringHangTheoYeuCau = $.grep(stringBanDemo, function (item, index) {
                            return item.parent == '6779'
                        })

                        stringHangPTTheoYeuCau = $.grep(dataHangDemo, function (item, index) {
                            return item.HangDemo == 1
                        })
                        $('#Title').val('Sửa chữa Hộp đèn hãng(lightbox)-Bàn Demo' + ' - ' + stringHangPTTheoYeuCau[0].label + shopB1 + ' - ' + dt.getDate() + '/' + (dt.getMonth() + 1) + '/' + dt.getFullYear());

                    }
                    $('#HangMuc').multiselect('dataprovider', stringHangTheoYeuCau);
                    $('#HangMuc').multiselect('enable');
                    $('#HangMuc').multiselect('refresh');

                    $('#Hang').multiselect('dataprovider', stringHangPTTheoYeuCau);
                    $('#Hang').multiselect('enable');
                    $('#Hang').multiselect('refresh');
                })
                $('#CKBanDemo').click(function () {
                    if (document.getElementById("CKBanDemo").checked == true) {
                        $('#CKHopDenHang').val('');
                        $("#CKHopDenHang").prop("checked", false);
                        $("#CKHopDenHang").parent().removeClass('checked');
                        CKTenYeuCau = '6779';
                        stringHangTheoYeuCau = $.grep(stringBanDemo, function (item, index) {
                            return item.parent == '6779'
                        })
                        stringHangPTTheoYeuCau = $.grep(dataHangDemo, function (item, index) {
                            return item.HangDemo == 1
                        })
                        $('#Title').val('Sửa chữa Hộp đèn hãng(lightbox)-Bàn Demo' + ' - ' + stringHangPTTheoYeuCau[0].label + shopB1 + ' - ' + dt.getDate() + '/' + (dt.getMonth() + 1) + '/' + dt.getFullYear());

                    }
                    else {
                        $("#CKHopDenHang").prop("checked", true);
                        $("#CKHopDenHang").parent().addClass('checked');
                        CKTenYeuCau = '6775';
                        stringHangTheoYeuCau = $.grep(stringBanDemo, function (item, index) {
                            return item.parent == '6775'
                        })
                        stringHangPTTheoYeuCau = $.grep(dataHangDemo, function (item, index) {
                            return item.HopDenHang == 1
                        })
                        $('#Title').val('Sửa chữa Hộp đèn hãng(lightbox)-Bàn Demo' + ' - ' + stringHangPTTheoYeuCau[0].label + shopB1 + ' - ' + dt.getDate() + '/' + (dt.getMonth() + 1) + '/' + dt.getFullYear());

                    }
                    $('#HangMuc').multiselect('dataprovider', stringHangTheoYeuCau);
                    $('#Hang').multiselect('dataprovider', stringHangPTTheoYeuCau);
                })
                $('#HangMuc').multiselect({
                    includeSelectAllOption: true,
                    buttonWidth: '100%',
                    nonSelectedText: 'Hạng mục sửa chữa',//Edit - NgoanHT - 27/04/2018 - Loại: 181 - sửa
                    allSelectedText: 'Tất cả',
                    selectAllText: 'Tất cả',
                    maxHeight: 300
                });
                $('#Hang').multiselect({
                    includeSelectAllOption: false,
                    buttonWidth: '100%',
                    nonSelectedText: 'Hãng',
                    maxHeight: 300
                });
                //▲ Add - NgoanHT - 10/04/2018 - Loại: 181 – Xét data của hãng

                //ChuongNT3 - 04/07/2018 - loại 181
                $('#Hang').change(function () {
                    var tenHang = '';
                    $.grep(stringHangPTTheoYeuCau, function (item, index) {
                        if (item.value == $('#Hang').val()) {
                            tenHang = item.label;
                        }
                    });
                    $('#Title').val('Sửa chữa Hộp đèn hãng(lightbox)-Bàn Demo' + ' - ' + tenHang + shopB1 + ' - ' + dt.getDate() + '/' + (dt.getMonth() + 1) + '/' + dt.getFullYear());
                });
                //ChuongNT3 - 04/07/2018 - loại 181
                var dataFiles = [], lisDataFilesName = [], ListNameFile = '';
                function endFile(name) {
                    var extension = name.split('.').pop().toLowerCase();
                    if ($.inArray(extension, ['jpg', 'png', 'gif', 'jpeg']) == -1) {
                        return false;
                    }
                    else {
                        return true;
                    }
                }

                $('#UploadHinhHangMucSuaChua').change(function () {
                    var selectedFiles = $(this)[0].files;
                    $.each(selectedFiles, function (index, item) {
                        var d = new Date();
                        var n = d.getTime();
                        selectedFiles[index].nameNew = n.toString() + '_' + selectedFiles[index].name;
                        dataFiles.push(selectedFiles[index]);
                        lisDataFilesName.push(selectedFiles[index].nameNew);
                        var tmppath = URL.createObjectURL(selectedFiles[index]);
                        if (endFile(selectedFiles[index].nameNew)) {
                            $('.HinhHangMucSuaChua').append('<div class="ULH1"><a href="' + tmppath + '" target="_blank" class="renderlink" data-value="' + selectedFiles[index].nameNew + '" ><img class="IMG1" src="' + tmppath + '"height="84" width="84"></a><button class="BTN1" type="button" class="btn btn-success" data-lisDataFilesName="' + selectedFiles[index].nameNew + '" onclick="DeleteIMG(this)">X</button></div>')
                        };
                        ListNameFile = lisDataFilesName.join(',');

                    });
                    $('#UploadHinhHangMucSuaChua').val('');//Edit - NgoanHT - 18/04/2018 - Loại: 181 - sửa
                })
                DeleteIMG = function (data) {
                    var NameIMG = $(data).context.dataset.lisdatafilesname;
                    var indexL = $(data).context.dataset.id;
                    var indexDelete = [];
                    $.each(dataFiles, function (index, item) {
                        if (item.nameNew == NameIMG) {
                            indexDelete.push(index);
                        }

                    });
                    $.each(indexDelete, function (index, item) {
                        dataFiles.splice(item.toString(), 1);
                        lisDataFilesName.splice(item.toString(), 1);
                    })
                    ListNameFile = lisDataFilesName.join(',');
                    $(data).parent().remove();
                }

                $btnSend.on('click', function () {
                    var data = new FormData();
                    var Hang = $('#Hang').val();
                    //Add - NgoanHT - 20/04/2018 - Loại: 181 - Thêm hãng pos
                    var HangSelect = $.grep(dataHangDemo, function (item, index) {
                        return item.value == Hang
                    })
                    var HangPos = HangSelect[0].ShowcaseTypeCode;
                    //Add - NgoanHT - 20/04/2018 - Loại: 181 - Thêm hãng pos
                    var HangMuc = $('#HangMuc').val();
                    var LyGiaiChiTiet = $('#LyGiaiChiTiet').val();
                    if (CKTenYeuCau === null || CKTenYeuCau === '' || CKTenYeuCau === undefined) {
                        XFunction.RenderMessage('error', 'Vui lòng chọn <b>Loại yêu cầu</b>'); return;
                    }
                    if (Hang === null || Hang === '' || Hang === undefined || Hang == 0) {
                        XFunction.RenderMessage('error', 'Vui lòng chọn <b>Hãng</b>'); return;
                    }
                    if (HangMuc === null || HangMuc === '' || HangMuc === undefined) {
                        XFunction.RenderMessage('error', 'Vui lòng chọn hạng mục cần sửa chữa'); return; //Edit - NgoanHT - 23/04/2018 - Loại: 181 - sửa thông báo
                    }
                    //Delete - NgoanHT - 18/04/2018 - Loại: 181 - Xóa điều kiện
                    //if (LyGiaiChiTiet === null || LyGiaiChiTiet === '' || LyGiaiChiTiet === undefined) {
                    //    XFunction.RenderMessage('error', 'Vui lòng chọn <b>Lý giải chi tiết</b>'); return;
                    //}
                    //Delete - NgoanHT - 18/04/2018 - Loại: 181 - Xóa điều kiện
                    if (dataFiles.length === 0 || dataFiles === undefined) {
                        XFunction.RenderMessage('error', 'Vui lòng Upload hình ảnh hạng mục sửa chữa'); return;//Edit - NgoanHT - 27/04/2018 - Loại: 181 - sửa
                    }
                    var dataReturn = [];
                    $('#myModalWatting').modal('show');
                    dataReturn.push({
                        TenYeuCau: CKTenYeuCau,
                        Hang: Hang,
                        HangPos: HangPos,//Add - NgoanHT - 20/04/2018 - Loại: 181 - Thêm hãng pos
                        HangMuc: HangMuc.join(','),
                        LyGiaiChiTiet: LyGiaiChiTiet,
                        HinhAnh: ListNameFile
                    });
                    if (dataFiles !== '' && dataFiles !== null && dataFiles !== undefined && dataFiles.length > 0) {
                        $.each(dataFiles, function (cout, element) {
                            data.append(element.nameNew, element);
                        });
                    }

                    data.append("Details", JSON.stringify(dataReturn));
                    data.append("DetailsLimited", JSON.stringify([]));
                    data.append("Description", catagoryInfo.Description);
                    data.append("TitleRequest", $('#Title').val());
                    data.append("typeId", catagoryInfo.Id);
                    data.append("TimeFutureFinish", $('#TimeFutureFinish').val());
                    data.append("Cc", $('#Cc').val());
                    data.append("sender", $('#sender').val());
                    data.append("fileUpload", $('#fileUpload').val());
                    data.append("dateFrom", $('#dateFrom').val());
                    data.append("dateTo", $('#dateTo').val());
                    data.append("timeSend", $('#timeSend').val());
                    data.append("Message", $('#Message').val());

                    $.ajax({
                        type: "POST",
                        url: "/Requests/CreateSuaChua",
                        contentType: false,
                        processData: false,
                        data: data,
                        success: function (result) {
                            var win = window.open('/Home', '_self');
                        },
                        error: function () {
                            $('#myModalWatting').modal('hide');
                            XFunction.RenderMessage('error', 'Dung lượng file upload quá lớn');
                            return;
                        }
                    });
                });
            });
        });
    }
    //▲ ChuongNT3 - 07/07/2018 - loại 181
    //▲ Add - =======================================
    //▼ Add - PhiN - 06/12/2017 - add category : 186 -Claim subsidy==================================================
    function contruct_186() {
        $('.compose-message').hide();
        $('#detail').show();
        $('#sum-total').hide();   // not support dowload file
        $('#handsontableEx').css('overflow', 'hidden');
        $areaDowloadAndImport.hide();
        $('#FileSupport').hide();
        var rowf = '';
        var rowm = '';
        var rowsl = '';
        var LoaiYeuCau = [];
        var dataHandsontable = [];
        //load tỉnh
        var sourceCity = [];
        var sourceCityFull = [];
        //load nha mang
        var sourceNetworkServiceProviderAll = [];
        var sourceNetworkServiceProvider = [];
        //load vấn đề
        var sourceProblem = [];
        var sourceProblemFull = [];
        var a;
        var b;
        //load lí do
        var sourceReason = [];
        var sourceReasonFull = [];
        $.get('/Requests/GetClaimSubsidy', { Type: 'city' }, function (respone) {
            $.each(respone, function (index, item) {
                sourceCityFull.push(item);
                sourceCity.push(item.Name);
            });
        });
        $.get('/Requests/GetClaimSubsidy', { Type: 'provider' }, function (respone) {
            $.each(respone, function (index, item) {
                sourceNetworkServiceProviderAll.push(item);
                sourceNetworkServiceProvider.push(item.Name);
            });
        });
        $.get('/Requests/GetClaimSubsidy', { Type: 'problem' }, function (respone) {
            $.each(respone, function (index, item) {
                sourceProblemFull.push(item);
                sourceProblem.push(item.Name);
            });
        });
        $.get('/Requests/GetClaimSubsidy', { Type: 'SubsidyProb' }, function (respone) {
            sourceReasonFull = respone;
        });
        function contructdata() {
            dataHandsontable.push({
                'ColHtml': '',
                'ColHtmlArray': '',
                'DataFiles': '',
                'ListNameFile': '',
                'ListNameFileArray': '',
            })
        }; contructdata();
        var actionRendererUpload = function (instance, td, row, col, prop, value, cellProperties) {
            if (prop == 'UploadHinh') {
                var valid = instance.getDataAtRowProp(row, 'TenYeuCau');
                var $button = '';
                if (valid === null || valid === '' || valid === undefined) {
                    $button = '';
                } else {
                    $button = $('<i id="r' + row + '" data-value="' + row + '" class="fa fa-cloud-upload" aria-hidden="true" style="color:green"></i>');//Edit - NgoanHT - 23/11/2017 - Loại: 181 - Sửa lại icon
                    $button.click(function () {
                        var row = $(this).attr('data-value');
                        $('#uploadDetails').attr('data-value', row).attr('data-id', 'UploadHinh');
                        $('#uploadDetails').val('');
                        $('#uploadDetails').trigger('click');
                    });
                }
                $button != '' ?
                    $(td).empty().append($button) :
                    $(td).empty().append('');
            } else {
                $(td).empty().append('');
            }
        };
        function readURL(input) {
            var tmppath = URL.createObjectURL(input);
            var win = window.open(tmppath, '_blank');
            if (win) {
                win.focus();
            } else {
                alert('Please allow popups for this site');
            }
        }
        function endFile(name) {
            var extension = name.split('.').pop().toLowerCase();
            if ($.inArray(extension, ['jpg', 'png', 'gif', 'jpeg']) == -1) {
                return false;
            }
            else {
                return true;
            }
        }
        $('#uploadDetails').on('change', function () {
            var rowline = $(this).attr('data-value');
            var selectedFiles = $(this)[0].files;
            $.each(dataHandsontable, function (index, item) {
                if (rowline == index) {
                    var dataFiles = [];
                    var listHtml = [];
                    var lisDataFilesName = [];
                    $.each(selectedFiles, function (index, item) {
                        var d = new Date();
                        var n = d.getTime();
                        selectedFiles[index].nameNew = n.toString() + '_' + selectedFiles[index].name;
                        dataFiles.push(selectedFiles[index]);
                        lisDataFilesName.push(selectedFiles[index].nameNew);
                        var tmppath = URL.createObjectURL(selectedFiles[index]);
                        if (endFile(selectedFiles[index].nameNew)) {
                            listHtml.push('<div class="ULH"><a href="' + tmppath + '" target="_blank" class="renderlink" data-id="' + rowline + '" data-value="' + selectedFiles[index].nameNew + '" ><img class="IMG" src="' + tmppath + '"height="42" width="42"></a><button class="BTN" type="button" class="btn btn-success" data-id="' + rowline + '" data-lisDataFilesName="' + selectedFiles[index].nameNew + '" onclick="DeleteIMG(this)">X</button></div>');
                        }
                    });
                    item.DataFiles = dataFiles;
                    item.ColHtmlArray = listHtml;
                    item.ListNameFileArray = lisDataFilesName;
                    item.ColHtml = listHtml.join(' ');
                    item.ListNameFile = lisDataFilesName.join(',');
                }
            });
            hot.render();
            $(this).val('');
        });
        function strip_tags(input, allowed) {
            var tags = /<\/?([a-z][a-z0-9]*)\b[^>]*>/gi,
                commentsAndPhpTags = /<!--[\s\S]*?-->|<\?(?:php)?[\s\S]*?\?>/gi;
            // making sure the allowed arg is a string containing only tags in lowercase (<a><b><c>)
            allowed = (((allowed || "") + "").toLowerCase().match(/<[a-z][a-z0-9]*>/g) || []).join('');
            return input.replace(commentsAndPhpTags, '').replace(tags, function ($0, $1) {
                return allowed.indexOf('<' + $1.toLowerCase() + '>') > -1 ? $0 : '';
            });
        }
        var readOnly_Grid = true;
        var setting = function () {
            return {
                //=================================Data=======
                data: dataHandsontable,
                //================================Cols=======
                maxCols: 16,
                minCols: 16,
                startCols: 1,
                minSpareCols: 0,
                allowInsertColumn: false,
                allowRemoveColumn: false,
                autoColumnSize: true,
                autoWrapCol: true,
                columnSorting: false,
                colWidths: 'undefined',
                copyColsLimit: 11,
                currentColClassName: 'currentCol', //currentCol
                fixedColumnsLeft: 0,
                manualColumnMove: false,
                manualColumnResize: true,
                viewportColumnRenderingOffset: 15,
                sortIndicator: true,
                //================================Rows=======
                allowInsertRow: true,
                allowRemoveRow: true,
                autoRowSize: true,
                autoWrapRow: true,
                copyRowsLimit: 1000,
                currentRowClassName: 'currentRow',
                fixedRowsTop: 0,
                manualRowMove: false,
                manualRowResize: true,
                rowHeaders: true,
                minSpareRows: 0,
                startRows: 11,
                maxRows: 1,
                //================================Oder=======
                allowInvalid: false,
                stretchH: 'all',
                commentedCellClassName: 'htCommentCell',
                comments: true,
                contextMenu: true,
                copyable: true,
                customBorders: false,
                debug: false,
                disableVisualSelection: true,
                enterBeginsEditingBoolean: true,
                fillHandle: true,
                outsideClickDeselects: true,
                fragmentSelection: false,
                groups: false,
                invalidCellClassName: 'htInvalid',
                mergeCells: false,
                multiSelect: true,
                noWordWrapClassName: 'htNoWrap',
                placeholder: false,
                placeholderCellClassName: 'htPlaceholder',
                readOnlyCellClassName: 'htDimmed',
                search: false,
                trimWhitespace: true,
                undo: true,
                formulas: true,
                wordWrap: true,
                //====================================Oder ==============================================
                colHeaders:
                    [
                        "Chọn nhà mạng",
                        "Phân loại vấn đề",
                        "Lý do",
                        "Chi tiết lí do khác",
                        "Thông tin KH",
                        "SĐT liên hệ",
                        "SĐT đăng kí SSD",
                        "Địa chỉ KH",
                        "Tỉnh",
                        "Nội dung chi tiết"
                    ],
                columns: [
                    {
                        data: "chonNhaMang",
                        type: 'autocomplete',
                        source: sourceNetworkServiceProvider,
                        strict: false,
                        width: 100,
                        className: 'htLeft'
                    },
                    {
                        data: "phanLoaiVande",
                        type: 'dropdown',
                        source: sourceProblem,
                        strict: false,
                        width: 250,
                        className: 'htLeft'
                    },
                    {
                        data: "liDo",
                        type: 'autocomplete',
                        source: [],
                        strict: false,
                        width: 400,
                        className: 'htLeft'
                    },
                    { data: "loaiLyDokhac", type: 'text', clasName: 'htLeft', width: 300, readOnly: true },
                    { data: "thongTinKH", type: 'text', className: 'htLeft', width: 150 },
                    { data: "sdtLienHe", type: 'text', className: 'htLeft', width: 150 },
                    { data: "sdtDangKi", type: 'text', className: 'htLeft', width: 150 },
                    { data: "diaChiKH", type: 'text', className: 'htLeft', width: 200 },
                    {
                        data: "tinh",
                        type: 'autocomplete',
                        source: sourceCity,
                        strict: false,
                        width: 100
                    },
                    { data: "noiDungChiTiet", type: 'text', className: 'htLeft', width: 300 }
                ],
                //▼ Add - PhiN -08/01/2018 - edit validate : 186 -Claim subsidy==================================================
                beforeChange: function (changes, source) {
                    if (changes == null) {
                        return;
                    }
                    instance = this;
                    var cellProperties = {}, options;
                    for (i = 0, len = changes.length; i < len; i++) {
                        var row = changes[i][0], col = changes[i][1];
                        var newValue = changes[i][3];
                        var dataNew = [];
                        var dataProvider = [];
                        if (col === 'chonNhaMang' && row > 0) {
                            var oldProvider = hot.getDataAtRowProp(0, "chonNhaMang");
                            if (newValue != oldProvider) {
                                XFunction.RenderMessage('error', 'Xin chọn nhà mạng như hàng đầu tiên!');
                                return false;
                            }
                        }
                        if (col === 'phanLoaiVande') {
                            a = $.grep(sourceProblemFull, function (v, i) {
                                return v['Name'] == newValue;
                            }),
                                b = $.grep(sourceReasonFull, function (v, i) {
                                    return v['Group'] == a[0]['Code'];
                                }),
                                $.each(b, function (index, item) {
                                    dataNew.push(item.Name);
                                });
                            cellProperties = instance.getCellMeta(row, 2);
                            cellProperties.source = dataNew;
                        }
                        if (col === 'sdtLienHe') {
                            if (!!newValue && isNaN(newValue)) {
                                XFunction.RenderMessage('error', 'sdt liên hệ không hợp lệ vui lòng nhập lại!');
                                return false;
                            }
                        }
                        if (col === 'sdtDangKi') {
                            if (!!newValue && isNaN(newValue)) {
                                XFunction.RenderMessage('error', 'sdt đăng kí không hợp lệ vui lòng nhập lại!');
                                return false;
                            }
                        }
                        //▲ Add - PhiN - 08/01/2018 - edit validate : 186 -Claim subsidy==================================================
                    }
                },
                afterChange: function (changes, source) {
                    if (!changes) {
                        return;
                    }
                    var instance = this;
                    changes.forEach(function (change) {
                        var row = change[0];
                        var col = change[1];
                        var newValue = change[3];
                        var cellProperties = {}, options;
                        if (col === 'liDo') {
                            if (!!newValue && newValue == 'Lí do khác') {
                                instance.updateSettings({
                                    cells: function (row_c, col_c, prop_c) {
                                        if (col_c === 3) {
                                            if (row_c == row) {
                                                cellProperties.readOnly = false;
                                            } else {
                                                cellProperties.readOnly = true;
                                            }
                                        }
                                        else {
                                            cellProperties.readOnly = false;
                                        }
                                        return cellProperties;
                                    }
                                });
                                instance.render();
                            }
                        }
                        if (col === 'liDo') {
                            if (newValue == 'Lí do khác') {
                                var dataloailidokhac = [];
                                var checkloailidokhac = $.grep(hot.getData(), function (item, index) {
                                    if (!!item.loaiLyDokhac) {
                                        return dataloailidokhac.push((index + 1));
                                    }
                                });
                                if (checkloailidokhac == null || dataloailidokhac == 0) {
                                    XFunction.RenderMessage('error', 'Vui lòng nhập chi tiết lí do khác!'); return false;
                                }
                            }
                        }
                    })
                },
            };
        };
        hot = new Handsontable(container, setting());
        hot.selectCell(0, 0, 0, 0);
        $btnSend.on('click', function () {
            var data = new FormData();
            var dataReturn = [];
            var dataAll = [];
            var check = $.grep(hot.getData(), function (item, index) {
                return (!!item.chonNhaMang && !!item.phanLoaiVande && !!item.liDo && !!item.thongTinKH && item.sdtLienHe !== ''
                    && item.sdtDangKi !== '' && item.sdtDangKi !== undefined
                    && !!item.diaChiKH && !!item.tinh && !!item.noiDungChiTiet
                );
            });
            var dataSDTLienHe = [];
            var dataSDTDangKi = [];
            var dataloailidokhac = [];
            var checkLoailido = $.grep(hot.getData(), function (item, index) {
                return (!item.loaiLyDokhac && item.liDo === 'Lí do khác' && !!item.liDo);
            });
            if (checkLoailido.length > 0) {
                XFunction.RenderMessage('error', 'Vui lòng nhập chi tiết lí do khác!');
                return;
            }
            var checkSDTLienHe = $.grep(hot.getData(), function (item, index) {
                if ((isNaN(item.sdtLienHe)) && (item.sdtLienHe).length < 10 || (item.sdtLienHe).length > 11) {
                    dataSDTLienHe.push((index + 1));
                }
            });
            var checkSDTDangKi = $.grep(hot.getData(), function (item, index) {
                if ((isNaN(item.sdtDangKi)) && (item.sdtDangKi).length < 10 || (item.sdtDangKi).length > 11) {
                    dataSDTDangKi.push((index + 1));
                }
            });
            if (check == null || check.length == 0) {
                XFunction.RenderMessage('error', 'Dữ liệu chi tiết chưa đầy đủ! Vui lòng nhập đầy đủ chi tiết!'); return;
            }
            if (dataSDTLienHe.length > 3) {
                XFunction.RenderMessage('error', 'sdt liên hệ không hợp lệ vui lòng nhập lại!'); return false;
            }
            if (dataSDTDangKi.length > 3) {
                XFunction.RenderMessage('error', 'sdt đăng kí không hợp lệ vui lòng nhập lại!'); return false;
            }
            checkTenYeuCau = true;
            checkTenLoaiYeuCau = true;
            $('#myModalWatting').modal('show');
            $.each(check, function (index, item) {
                var NhaMang = '', NhaMangGrep = [];
                var phanloaivande = '', phanloaiGrep = [];
                var lydovande = '', lydoGrep = [];
                var tinhkh = '', tinhgrep = [];
                NhaMangGrep = $.grep(sourceNetworkServiceProviderAll, function (element, count) {
                    return item.chonNhaMang === element.Name;
                });
                if (!!NhaMangGrep && NhaMangGrep.length > 0) {
                    NhaMang = NhaMangGrep[0].Code;
                }
                phanloaiGrep = $.grep(sourceProblemFull, function (element, count) {
                    return item.phanLoaiVande === element.Name;
                });
                if (!!phanloaiGrep && phanloaiGrep.length > 0) {
                    phanloaivande = phanloaiGrep[0].Code;
                }
                lydoGrep = $.grep(sourceReasonFull, function (element, count) {
                    return item.liDo === element.Name;
                });
                if (!!lydoGrep && lydoGrep.length > 0) {
                    lydovande = lydoGrep[0].Code;
                }
                tinhgrep = $.grep(sourceCityFull, function (element, count) {
                    return item.tinh === element.Name;
                });
                if (!!tinhgrep && tinhgrep.length > 0) {
                    tinhkh = tinhgrep[0].Code;
                }
                dataReturn.push({
                    Row: index,
                    ChonNhaMang: NhaMang,
                    PhanLoaiVanDe: phanloaivande,
                    LiDo: lydovande,
                    loaiLyDokhac: item.loaiLyDokhac,
                    ThongTinKH: item.thongTinKH,
                    SDTLienHe: item.sdtLienHe,
                    SDTDangKi: item.sdtDangKi,
                    DiaChiKh: item.diaChiKH,
                    Tinh: tinhkh,
                    NoiDungChiTiet: item.noiDungChiTiet
                });
            });
            console.log(dataReturn);
            data.append("Details", JSON.stringify(dataReturn));
            data.append("DetailsLimited", JSON.stringify([]));
            data.append("Description", catagoryInfo.Description);
            data.append("TitleRequest", $('#Title').val());
            data.append("typeId", catagoryInfo.Id);
            data.append("TimeFutureFinish", $('#TimeFutureFinish').val());
            data.append("Cc", $('#Cc').val());
            data.append("sender", $('#sender').val());
            data.append("fileUpload", $('#fileUpload').val());
            data.append("dateFrom", $('#dateFrom').val());
            data.append("dateTo", $('#dateTo').val());
            data.append("timeSend", $('#timeSend').val());
            data.append("Message", $('#Message').val());
            $.ajax({
                type: "POST",
                url: "/Requests/CreateClaimSubsidy",
                contentType: false,
                processData: false,
                data: data,
                success: function (result) {
                    var win = window.open('/Home', '_self');
                },
                error: function () {
                    $('#myModalWatting').modal('hide');
                    XFunction.RenderMessage('error', 'Dung lượng file upload quá lớn');
                    return;
                }
            });
        });
    };
    //▲ Add - PhiN - 06/12/2017 - add category : 186 -Claim subsidy==================================================
    //▲ Add - =======================================

    //▼ Add - PhiN - 06/12/2017 - Thêm loại 187
    function contruct_187() {
        $('#detail').show();
        $('#handsontableEx').css('overflow', 'hidden');
        $areaDowloadAndImport.show();
        $('#FileSupport').show(); //Edit - NgoanHT - 22/03/2018 - hiển thị FileSupport
        var rowf = '';
        var rowm = '';
        var rowsl = '';
        var LoaiYeuCau = [];
        var dataHandsontable = [];
        var CategoryData = [];
        var shop = [];
        var shopdata = [];
        var CategoryDataId = [];
        var ShopNameSM = '';
        var checkAccSM = false;
        $.get('/Requests/GetLayoutShop', { Type: '187' }, function (respone) {
            $.each(respone, function (index, item) {
                if (item.Id !== 189) {
                    CategoryDataId.push(item);
                    CategoryData.push(item.Name);
                }

            });
        });
        $.get('/Requests/Get_AllShop', function (respone) {
            $.each(respone, function (index, item) {
                shopdata.push(item);
                shop.push(item.WarehouseName);
            });

        });

        if (JobTitleCode === '00004' || JobTitleCode === '00005') {
            var d = new Date()
            var day = d.getDate() < 10 ? '0' + d.getDate() : d.getDate()
            var month = (d.getMonth() + 1) < 10 ? '0' + (d.getMonth() + 1) : (d.getMonth() + 1) //ThươngNM2 FixMonth - 2019/01/04
            var dateHT = day + '/' + month + '/' + d.getFullYear()//ThươngNM2 FixMonth - 2019/01/04
            dataHandsontable.push({
                tenShop: warehouseName,
                loaiYeuCau: 'Cập nhật Layout shop thông thường',
                thongTinThayDoiLayout: '',
                upHinhLayoutMattien: '',
                hinhLayoutMatTien: '',
                upHinhLayoutMatBang: '',
                hinhLayoutMatbang: '',
                thoiGianHienThi: dateHT,
            })
            checkAccSM = true;
        }
        DeleteIMG = function (data) {
            var NameIMG = $(data).context.dataset.lisdatafilesname;
            var indexL = $(data).context.dataset.id;
            var indexDelete = [];
            $.each(hot.getSettings().data, function (index, item) {
                if (item.DataFiles !== null && item.DataFiles !== '' && item.DataFiles !== undefined && index == indexL)
                    $.each(item.DataFiles, function (index, item) {
                        if (item.nameNew == NameIMG) {
                            indexDelete.push(index);
                        }

                    });
            })
            $.each(hot.getSettings().data, function (index, item1) {
                if (index == indexL) {
                    $.each(indexDelete, function (index, item) {
                        item1.DataFiles.splice(item.toString(), 1);
                        item1.ColHtmlArray.splice(item.toString(), 1);
                        item1.ListNameFileArray.splice(item.toString(), 1);
                        item1.hinhLayoutMatTien = item1.ColHtmlArray.join(' ');
                        item1.ListNameFile = item1.ListNameFileArray.join(',');
                    })
                }
            });
            $(data).parent().remove();
        }

        DeleteIMG2 = function (data) {
            var NameIMG = $(data).context.dataset.lisdatafilesname;
            var indexL = $(data).context.dataset.id;
            var indexDelete = [];
            $.each(hot.getSettings().data, function (index, item) {
                if (item.DataFiles_2 !== null && item.DataFiles_2 !== '' && item.DataFiles_2 !== undefined && index == indexL)
                    $.each(item.DataFiles_2, function (index, item) {
                        if (item.nameNew == NameIMG) {
                            indexDelete.push(index);
                        }

                    });
            })
            $.each(hot.getSettings().data, function (index, item1) {
                if (index == indexL) {
                    $.each(indexDelete, function (index, item) {
                        item1.DataFiles_2.splice(item.toString(), 1);
                        item1.ListNameFileArray_2.splice(item.toString(), 1);
                        item1.ListNameFile_2 = item1.ListNameFileArray_2.join(',');
                        item1.ColHtmlArray_2.splice(item.toString(), 1);
                        item1.hinhLayoutMatbang = item1.ColHtmlArray_2.join(' ');
                    })
                }
            });
            $(data).parent().remove();
        }

        DeleteIMG3 = function (data) {
            var NameIMG = $(data).context.dataset.lisdatafilesname;
            var indexL = $(data).context.dataset.id;
            var indexDelete = [];
            $.each(hot.getSettings().data, function (index, item) {
                if (item.DataFiles_3 !== null && item.DataFiles_3 !== '' && item.DataFiles_3 !== undefined && index == indexL)
                    $.each(item.DataFiles_3, function (index, item) {
                        if (item.nameNew == NameIMG) {
                            indexDelete.push(index);
                        }

                    });
            })
            $.each(hot.getSettings().data, function (index, item1) {
                if (index == indexL) {
                    $.each(indexDelete, function (index, item) {
                        item1.DataFiles_3.splice(item.toString(), 1);
                        item1.ListNameFileArray_3.splice(item.toString(), 1);
                        item1.ListNameFile_3 = item1.ListNameFileArray_3.join(',');
                        item1.ColHtmlArray_3.splice(item.toString(), 1);
                        item1.hinhAnhThucTe = item1.ColHtmlArray_3.join(' ');
                    })
                }
            });
            $(data).parent().remove();
        }
        //▼ Add - NgoanHT - 22/03/2018 - Loại: 187 - Thêm chức năng import
        var Validate = {
            endFile: function (name) {
                var extension = name.split('.').pop().toLowerCase();
                if ($.inArray(extension, ['xlsx']) == -1) {
                    $('#myModal').modal('hide');
                    XFunction.RenderMessage('error', 'File exel không hợp lệ định dạng file hỗ trợ : xlsx');
                    return false;
                }
                else {
                    return true;
                }
            }
        };
        var parseDate = function (str) { // fucntion kiểm tra date import lên có hợp lệ hay không
            var dateformat = /^([0]?[1-9]|[1|2][0-9]|[3][0|1])[/]([0]?[1-9]|[1][0-2])[/]([0-9]{4}|[0-9]{2})$/;
            function pad(x) { return ((('' + x).length == 2) ? '' : '0') + x; }
            var m = str.match(/^([0]?[1-9]|[1|2][0-9]|[3][0|1])[/]([0]?[1-9]|[1][0-2])[/]([0-9]{4}|[0-9]{2})$/)
                , d = (m) ? new Date(m[3], pad((m[2] - 1).toString()), pad(m[1].toString())) : null
                , matchesPadded = (d && (str == [pad(d.getDate()), pad(d.getMonth() + 1), d.getFullYear()].join('/')))
                , matchesNonPadded = (d && (str == [d.getDate(), d.getMonth() + 1, d.getFullYear()].join('/')))
                , matchesPaddedDate = (d && (str == [pad(d.getDate()), (d.getMonth() + 1), d.getFullYear()].join('/')))
                , matchesPaddedMonth = (d && (str == [d.getDate(), pad(d.getMonth() + 1), d.getFullYear()].join('/')))
            //return (matchesPadded || matchesNonPadded || matchesPaddedDate || matchesPaddedMonth) ? d : null;
            return (matchesPadded || matchesNonPadded || matchesPaddedDate || matchesPaddedMonth) ? d : null;
        }
        //console.log(parseDate('16/11/2018'))
        function contructExecl() {


            var X = XLSX;
            function fixdata(data) {
                var o = "", l = 0, w = 10240;
                for (; l < data.byteLength / w; ++l) o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w, l * w + w)));
                o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w)));
                return o;
            }
            function to_json(workbook) {
                var result = {};
                workbook.SheetNames.forEach(function (sheetName) {
                    var roa = X.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);
                    if (roa.length > 0) {
                        result[sheetName] = roa;
                    }
                });
                return result;
            }
            $('#FileSupport').on('change', function (event) {
                $('#myModal').modal({ backdrop: 'static', keyboard: false, show: true });
                dataImport = [];
                var fileValid = false;
                fileValid = Validate.endFile($('#FileSupport').val());
                if (fileValid) {
                    var files = event.target.files;
                    var f = files[0];
                    {
                        var reader = new FileReader();
                        var name = f.name;
                        reader.onload = function (e) {
                            var data = e.target.result;
                            var arr = fixdata(data);
                            wb = X.read(btoa(arr), { type: 'base64' });
                            var wb;
                            var output = to_json(wb);
                            if (output.Import !== null && output.Import !== '' && output.Import !== undefined) {
                                dataPages = output.Import;
                                var dataValid = [];
                                var checkData = true;
                                var CheckSM = false
                                var dayfinal = new Date()
                                var d = new Date(dayfinal.getFullYear(), dayfinal.getMonth(), dayfinal.getDate())
                                var day = d.getDate() < 10 ? '0' + d.getDate() : d.getDate()
                                var month = (d.getMonth() + 1) < 10 ? '0' + (d.getMonth() + 1) : d.getMonth() + 1 //ThươngNM2 FixMonth - 2019/01/04
                                var dateHT = day + '/' + month + '/' + d.getFullYear() //ThươngNM2 FixMonth - 2019/01/04
                                $.each(dataPages, function (index, item) {
                                    var dateImport = "";
                                    if (item["Thời gian hiển thị Calllog (DD/MM/YYYY)"] !== null && item["Thời gian hiển thị Calllog (DD/MM/YYYY)"] !== "" && item["Thời gian hiển thị Calllog (DD/MM/YYYY)"] !== undefined) {
                                        dateImport = item["Thời gian hiển thị Calllog (DD/MM/YYYY)"];
                                    }
                                    if (JobTitleCode === '00004' || JobTitleCode === '00005') {
                                        if (item['Mã shop'].toString() !== warehouseCodeB1_Sender) {
                                            CheckSM = true;
                                            dataValid.push({ MaShop: item['Mã shop'], MaloaiYeuCau: item['Mã Loại yêu cầu'], ThongTinThayDoiLayout: item['Thông tin thây đổi layout'], thoiGianHienThi: dateImport })
                                        }
                                        else {
                                            if (dateImport !== "" && dateImport !== null && dateImport !== undefined) {
                                                // SM shop không import thì lấy ngày hiện tại
                                                dataValid.push({ MaShop: item['Mã shop'], MaloaiYeuCau: item['Mã Loại yêu cầu'], ThongTinThayDoiLayout: item['Thông tin thây đổi layout'], thoiGianHienThi: dateImport })
                                            }
                                            else {
                                                dataValid.push({ MaShop: item['Mã shop'], MaloaiYeuCau: item['Mã Loại yêu cầu'], ThongTinThayDoiLayout: item['Thông tin thây đổi layout'], thoiGianHienThi: dateHT })
                                            }

                                        }
                                    }
                                    else {
                                        dataValid.push({ MaShop: item['Mã shop'], MaloaiYeuCau: item['Mã Loại yêu cầu'], ThongTinThayDoiLayout: item['Thông tin thây đổi layout'], thoiGianHienThi: item["Thời gian hiển thị Calllog (DD/MM/YYYY)"] })
                                    }

                                });

                                var linedatefail_SM = "", linedatefail = "", linedatefinal = "";
                                function pad(x) { return ((('' + x).length == 2) ? '' : '0') + x; }
                                $.each(dataValid, function (index, item) {
                                    //console.log(item.thoiGianHienThi)
                                    if (item.thoiGianHienThi !== "" && item.thoiGianHienThi !== undefined && item.thoiGianHienThi !== null) {
                                        //console.log(1)
                                        var dateht = parseDate(item.thoiGianHienThi)
                                        console.log
                                        if (dateht !== null) {/// nếu parse ngày đúng
                                            var dateimport = new Date(dateht.getFullYear(), dateht.getMonth(), dateht.getDate())
                                            if (d < dateimport || d > dateimport) {// phải đúng ngày hiện tại
                                                linedatefail_SM += (index + 2).toString() + ", ";
                                            }
                                            if (dateimport < d) { // không chọn ngày trong quá khứ
                                                linedatefail += (index + 2).toString() + ", ";
                                            }
                                            dataValid[index].thoiGianHienThi = [pad(dateimport.getDate()), pad(dateimport.getMonth() + 1), dateimport.getFullYear()].join('/')
                                        }
                                        else {

                                            linedatefinal += (index + 2).toString() + ", "; // định dạng ngày không hợp lệ
                                        }
                                    }

                                });
                                if (linedatefinal !== "") { // kiểm tra ngày không hợp lệ
                                    XFunction.RenderMessage('error', 'Ngày hiển thị calllog không hợp lệ. Vui lòng xem lại line: ' + linedatefinal.slice(0, linedatefinal.length - 2) + "</br> <b>Lưu ý:</b> Định dạng ngày như sau (DD/MM/YYYY)");
                                    $('#FileSupport').val('')
                                    dataHandsontable = [];
                                    contructdata()
                                    hot.loadData(dataHandsontable);
                                    return false;
                                } else
                                    if (JobTitleCode === '00004' || JobTitleCode === '00005') { // SM shop 
                                        if (CheckSM) {
                                            XFunction.RenderMessage('error', 'Bạn chỉ được import đối với shop của chính mình!');
                                            $('#FileSupport').val('')
                                            dataHandsontable = [];
                                            contructdata()
                                            hot.loadData(dataHandsontable);
                                            return false;
                                        }
                                        var import191 = 0;
                                        $.each(dataValid, function (index, item) {
                                            if (item.MaloaiYeuCau !== "191") {
                                                import191++;
                                            }
                                        })

                                        if (import191 > 0) { // chỉ import loại 191
                                            XFunction.RenderMessage('error', 'Bạn chỉ được import đối với loại yêu cầu 191 - Cập nhật Layout shop thông thường!');
                                            $('#FileSupport').val('')
                                            dataHandsontable = [];
                                            contructdata()
                                            hot.loadData(dataHandsontable);
                                            return false;
                                        }

                                        if (linedatefail_SM !== "") { // check ngày hiển thị có đúng ngày hiện tại
                                            XFunction.RenderMessage('error', 'Ngày hiển thị calllog không hợp lệ. Vui lòng xem lại line: ' + linedatefail_SM.slice(0, linedatefail_SM.length - 2) + "</br> <b>Lưu ý:</b> Bạn chỉ được chọn ngày hiển thị calllog là ngày hiện tại!");
                                            $('#FileSupport').val('')
                                            dataHandsontable = [];
                                            contructdata()
                                            hot.loadData(dataHandsontable);
                                            return false;
                                        }
                                    }
                                if (linedatefail !== "") { // không phải SM shop
                                    XFunction.RenderMessage('error', 'Ngày hiển thị calllog không hợp lệ. Vui lòng xem lại line: ' + linedatefail.slice(0, linedatefail.length - 2) + "</br> <b>Lưu ý:</b> Bạn chỉ được chọn ngày hiển thị kể từ ngày hôm nay trở về sau!");
                                    $('#FileSupport').val('')
                                    dataHandsontable = [];
                                    contructdata()
                                    hot.loadData(dataHandsontable);
                                    return false;
                                } else {
                                    dataHandsontable = [];
                                    var CheckTrung = false;
                                    var messTrungLine = '';

                                    for (i = 1; i < dataValid.length; i++) {
                                        for (j = 0; j < i; j++) {
                                            if (dataValid[i].MaShop == dataValid[j].MaShop && dataValid[i].MaloaiYeuCau == dataValid[j].MaloaiYeuCau) {
                                                CheckTrung = true;
                                                messTrungLine += ' ' + (j + 2).toString() + ' & ' + (i + 2).toString() + ' ; '
                                            }
                                        }
                                    }
                                    if (CheckTrung) {
                                        XFunction.RenderMessage('error', 'Vui lòng xem lại file excel có những cặp line trùng:' + messTrungLine.substring(0, messTrungLine.length - 2));
                                        $('#FileSupport').val('');
                                        contructdata()
                                        hot.loadData(dataHandsontable);
                                        return false;
                                    }
                                    else {
                                        $.each(dataValid, function (index, item) {
                                            var TenShopB1, LoaiYeuCau;
                                            $.each(shopdata, function (index, itemShop) {
                                                if (item.MaShop == itemShop.WarehouseCodeB1) {
                                                    TenShopB1 = itemShop.WarehouseName;
                                                };
                                            });
                                            $.each(CategoryDataId, function (index, itemCategory) {
                                                if (item.MaloaiYeuCau == itemCategory.Id) {
                                                    LoaiYeuCau = itemCategory.Name;
                                                };
                                            });
                                            dataHandsontable.push({
                                                tenShop: TenShopB1,
                                                loaiYeuCau: LoaiYeuCau,
                                                thongTinThayDoiLayout: item.ThongTinThayDoiLayout,
                                                thoiGianHienThi: item.thoiGianHienThi,
                                                hinhLayoutMatTien: '',
                                                ColHtmlArray: '',
                                                DataFiles: '',
                                                ListNameFile: '',
                                                ListNameFileArray: '',

                                                hinhLayoutMatbang: '',
                                                ColHtmlArray_2: '',
                                                DataFiles_2: '',
                                                ListNameFile_2: '',
                                                ListNameFileArray_2: '',

                                                hinhAnhThucTe: '',
                                                ColHtmlArray_3: '',
                                                DataFiles_3: '',
                                                ListNameFile_3: '',
                                                ListNameFileArray_3: '',
                                            })
                                        });
                                        hot.loadData(dataHandsontable);
                                        $('#FileSupport').val('')
                                    }
                                }

                            }
                            else {
                                XFunction.RenderMessage('error', 'File exel Không có trang (Sheet) hoặc nội dung <b>"Import"</b>');
                                $('#FileSupport').val('');
                                $('#myModal').modal('hide');
                            }
                        };
                        reader.readAsArrayBuffer(f);
                    }
                }
            });
        }
        contructExecl();
        //▲ Add - NgoanHT - 22/03/2018 - Loại: 187 - Thêm chức năng import

        function contructdata() {
            dataHandsontable.push({
                'hinhLayoutMatTien': '',
                'ColHtmlArray': '',
                'DataFiles': '',
                'ListNameFile': '',
                'ListNameFileArray': '',

                'hinhLayoutMatbang': '',
                'ColHtmlArray_2': '',
                'DataFiles_2': '',
                'ListNameFile_2': '',
                'ListNameFileArray_2': '',

                'hinhAnhThucTe': '',
                'ColHtmlArray_3': '',
                'DataFiles_3': '',
                'ListNameFile_3': '',
                'ListNameFileArray_3': '',
            })
        };
        //▼ Add - NgoanHT - 22/03/2018 - Loại: 187 - Thêm điều kiện
        if (dataHandsontable.length == 0 || dataHandsontable == undefined) {
            contructdata();
        }
        //▲ Add - NgoanHT - 22/03/2018 - Loại: 187 - Thêm điều kiện
        var actionRendererUpload = function (instance, td, row, col, prop, value, cellProperties) {
            if (prop == 'upHinhLayoutMattien') {
                var valid = instance.getDataAtRowProp(row, 'loaiYeuCau');
                var $button = '';
                if (valid === null || valid === '' || valid === undefined) {
                    $button = '';
                } else {
                    $button = $('<i id="r' + row + '" data-value="' + row + '" class="fa fa-cloud-upload" aria-hidden="true" style="color:green"></i>');//Edit - NgoanHT - 23/11/2017 - Loại: 181 - Sửa lại icon
                    $button.click(function () {
                        var row = $(this).attr('data-value');
                        $('#uploadDetails').attr('data-value', row).attr('data-id', 'upHinhLayoutMattien');
                        $('#uploadDetails').val('');
                        $('#uploadDetails').trigger('click');
                    });
                }
                $button != '' ?
                    $(td).empty().append($button) :
                    $(td).empty().append('');
            } else {
                $(td).empty().append('');
            }
        };
        var actionRendererUpload_2 = function (instance, td, row, col, prop, value, cellProperties) {
            if (prop == 'upHinhLayoutMatBang') {
                var valid = instance.getDataAtRowProp(row, 'loaiYeuCau');
                var $button = '';
                if (valid === null || valid === '' || valid === undefined) {
                    $button = '';
                } else {
                    $button = $('<i id="r' + row + '" data-value="' + row + '" class="fa fa-cloud-upload" aria-hidden="true" style="color:green"></i>');//Edit - NgoanHT - 23/11/2017 - Loại: 181 - Sửa lại icon
                    $button.click(function () {
                        var row = $(this).attr('data-value');
                        $('#uploadDetails').attr('data-value', row).attr('data-id', 'upHinhLayoutMatBang');
                        $('#uploadDetails').val('');
                        $('#uploadDetails').trigger('click');
                    });
                }
                $button != '' ?
                    $(td).empty().append($button) :
                    $(td).empty().append('');
            } else {
                $(td).empty().append('');
            }
        };
        var actionRendererUpload_3 = function (instance, td, row, col, prop, value, cellProperties) {
            if (prop == 'upHinhAnhThucTe') {
                var valid = instance.getDataAtRowProp(row, 'loaiYeuCau');
                var $button = '';
                if (valid === null || valid === '' || valid === undefined) {
                    $button = '';
                } else {
                    $button = $('<i id="r' + row + '" data-value="' + row + '" class="fa fa-cloud-upload" aria-hidden="true" style="color:green"></i>');//Edit - NgoanHT - 23/11/2017 - Loại: 181 - Sửa lại icon
                    $button.click(function () {
                        var row = $(this).attr('data-value');
                        $('#uploadDetails').attr('data-value', row).attr('data-id', 'upHinhAnhThucTe');
                        $('#uploadDetails').val('');
                        $('#uploadDetails').trigger('click');
                    });
                }
                $button != '' ?
                    $(td).empty().append($button) :
                    $(td).empty().append('');
            } else {
                $(td).empty().append('');
            }
        };
        function readURL(input) {
            var tmppath = URL.createObjectURL(input);
            var win = window.open(tmppath, '_blank');
            if (win) {
                win.focus();
            } else {
                alert('Please allow popups for this site');
            }
        }
        function endFile(name) {
            var extension = name.split('.').pop().toLowerCase();
            if ($.inArray(extension, ['jpg', 'png', 'gif', 'jpeg']) == -1) {
                return false;
            }
            else {
                return true;
            }
        }
        $('#uploadDetails').on('change', function () {
            var rowline = $(this).attr('data-value');
            var rowCol = $(this).attr('data-id');
            var selectedFiles = $(this)[0].files;
            //▼ Edit - ThuongNM2 - 2018/12/04 - Chỉ cho upload img
            var checkfile = [];
            $.each($(this)[0].files, function (index, item) {
                if (endFile(item.name) == false) {
                    checkfile.push(item);
                }
            })
            if (checkfile.length > 0) {
                XFunction.RenderMessage("error", "Bạn chỉ được upload file hình ảnh!"); return false;
            }
            else {
                $.each(dataHandsontable, function (index, item) {
                    if (rowline == index) {
                        var dataFiles = [];
                        var listHtml = [];
                        var lisDataFilesName = [];
                        $.each(selectedFiles, function (index, item) {
                            var d = new Date();
                            var n = d.getTime();
                            selectedFiles[index].nameNew = n.toString() + '_' + selectedFiles[index].name;
                            dataFiles.push(selectedFiles[index]);
                            lisDataFilesName.push(selectedFiles[index].nameNew);
                            var tmppath = URL.createObjectURL(selectedFiles[index]);
                            if (endFile(selectedFiles[index].nameNew)) {

                                if (rowCol === 'upHinhLayoutMattien') {
                                    listHtml.push('<div class="ULH"><a href="' + tmppath + '" target="_blank" class="renderlink" data-id="' + rowline + '" data-value="' + selectedFiles[index].nameNew + '" ><img class="IMG" src="' + tmppath + '"height="42" width="42"></a><button class="BTN" type="button" class="btn btn-success" data-id="' + rowline + '" data-lisDataFilesName="' + selectedFiles[index].nameNew + '" onclick="DeleteIMG(this)">X</button></div>');
                                }
                                else if (rowCol === 'upHinhLayoutMatBang') {
                                    listHtml.push('<div class="ULH"><a href="' + tmppath + '" target="_blank" class="renderlink" data-id="' + rowline + '" data-value="' + selectedFiles[index].nameNew + '" ><img class="IMG" src="' + tmppath + '"height="42" width="42"></a><button class="BTN" type="button" class="btn btn-success" data-id="' + rowline + '" data-lisDataFilesName="' + selectedFiles[index].nameNew + '" onclick="DeleteIMG2(this)">X</button></div>');
                                }
                                else if (rowCol === 'upHinhAnhThucTe') {
                                    listHtml.push('<div class="ULH"><a href="' + tmppath + '" target="_blank" class="renderlink" data-id="' + rowline + '" data-value="' + selectedFiles[index].nameNew + '" ><img class="IMG" src="' + tmppath + '"height="42" width="42"></a><button class="BTN" type="button" class="btn btn-success" data-id="' + rowline + '" data-lisDataFilesName="' + selectedFiles[index].nameNew + '" onclick="DeleteIMG3(this)">X</button></div>');
                                };
                            };

                        });
                        if (rowCol === 'upHinhLayoutMattien') {
                            item.DataFiles = dataFiles;
                            item.ColHtmlArray = listHtml;
                            item.ListNameFileArray = lisDataFilesName;
                            item.hinhLayoutMatTien = listHtml.join(' ');
                            item.ListNameFile = lisDataFilesName.join(',');
                        }
                        else if (rowCol === 'upHinhLayoutMatBang') {
                            item.DataFiles_2 = dataFiles;
                            item.ColHtmlArray_2 = listHtml;
                            item.ListNameFileArray_2 = lisDataFilesName;
                            item.hinhLayoutMatbang = listHtml.join(' ');
                            item.ListNameFile_2 = lisDataFilesName.join(',');
                        }
                        else if (rowCol === 'upHinhAnhThucTe') {
                            item.DataFiles_3 = dataFiles;
                            item.ColHtmlArray_3 = listHtml;
                            item.ListNameFileArray_3 = lisDataFilesName;
                            item.hinhAnhThucTe = listHtml.join(' ');
                            item.ListNameFile_3 = lisDataFilesName.join(',');
                        }
                    }
                });
                hot.render();
                $(this).val('');
            }
            //▲ Edit - ThuongNM2 - 2018/12/04 - Chỉ cho upload img
            //console.log(rowline, rowCol);
        });
        function strip_tags(input, allowed) {
            var tags = /<\/?([a-z][a-z0-9]*)\b[^>]*>/gi,
                commentsAndPhpTags = /<!--[\s\S]*?-->|<\?(?:php)?[\s\S]*?\?>/gi;
            // making sure the allowed arg is a string containing only tags in lowercase (<a><b><c>)
            allowed = (((allowed || "") + "").toLowerCase().match(/<[a-z][a-z0-9]*>/g) || []).join('');
            return input.replace(commentsAndPhpTags, '').replace(tags, function ($0, $1) {
                return allowed.indexOf('<' + $1.toLowerCase() + '>') > -1 ? $0 : '';
            });
        }
        function safeHtmlRenderer(instance, td, row, col, prop, value, cellProperties) {
            var escaped = Handsontable.helper.stringify(value);
            escaped = strip_tags(escaped, '<em><b><strong><a><big><i><br><img><button><div>');
            td.innerHTML = escaped;
            td.style.textAlign = 'left';
            return td;
        }
        var setting = function () {
            return {
                //=================================Data=======
                data: dataHandsontable,
                //================================Cols=======
                maxCols: 20,
                minCols: 20,
                startCols: 20,
                minSpareCols: 0,
                allowInsertColumn: false,
                allowRemoveColumn: false,
                autoColumnSize: true,
                autoWrapCol: true,
                columnSorting: false,
                colWidths: 'undefined',
                copyColsLimit: 20,
                currentColClassName: 'currentCol', //currentCol
                fixedColumnsLeft: 0,
                manualColumnMove: false,
                manualColumnResize: true,
                viewportColumnRenderingOffset: 8,
                sortIndicator: true,
                //================================Rows=======
                allowInsertRow: true,
                allowRemoveRow: true,
                autoRowSize: true,
                autoWrapRow: true,
                copyRowsLimit: 1000,
                currentRowClassName: 'currentRow',
                fixedRowsTop: 0,
                manualRowMove: false,
                manualRowResize: true,
                rowHeaders: true,
                minSpareRows: 3,
                startRows: 10,
                //================================Oder=======
                allowInvalid: false,
                stretchH: 'all',
                commentedCellClassName: 'htCommentCell',
                comments: true,
                contextMenu: true,
                copyable: true,
                customBorders: false,
                debug: false,
                disableVisualSelection: true,
                enterBeginsEditingBoolean: true,
                fillHandle: true,
                outsideClickDeselects: true,
                fragmentSelection: false,
                groups: false,
                invalidCellClassName: 'htInvalid',
                mergeCells: false,
                multiSelect: true,
                noWordWrapClassName: 'htNoWrap',
                placeholder: false,
                placeholderCellClassName: 'htPlaceholder',
                readOnlyCellClassName: 'htDimmed',
                search: false,
                trimWhitespace: true,
                undo: true,
                formulas: true,
                wordWrap: true,
                //====================================Oder ==============================================
                colHeaders:
                    [
                        //"STT",
                        "Tên shop",
                        //"Tên yêu cầu",
                        "Loại yêu cầu ",
                        "Thông tin thay đổi Layout",
                        "Upload hình Layout mặt tiền",
                        "Hình Layout mặt tiền",
                        "Upload hình Layout mặt bằng",
                        "Hình Layout mặt bằng",
                        "Upload hình ảnh thực tế shop",
                        "Hình ảnh thực tế shop",
                        "Thời gian hiển thị calllog" // Add  - NgoanHT - 10/01/2018 - Loại: 187 - Thêm cột Thời gian hiển thị
                    ],
                columns: [
                    {
                        data: "tenShop",
                        type: 'autocomplete',
                        source: shop,
                        strict: true,
                        allowInvalid: false,
                        width: 150,
                        readOnly: checkAccSM
                    },
                    //{ data: "tenLoaiYeucau", type: 'text', className: 'htLeft', width: 150 },
                    {
                        data: "loaiYeuCau",
                        type: 'autocomplete',
                        source: CategoryData,
                        strict: true,
                        allowInvalid: false,
                        width: 200,
                        readOnly: checkAccSM
                    }, { data: "thongTinThayDoiLayout", type: 'text', className: 'htLeft', width: 200 },
                    { data: "upHinhLayoutMattien", type: 'text', editor: false, renderer: actionRendererUpload, className: 'htLeft', width: 50 },
                    { data: "hinhLayoutMatTien", editor: false, type: 'text', className: 'htLeft', renderer: safeHtmlRenderer, width: 150 },
                    { data: "upHinhLayoutMatBang", type: 'text', editor: false, renderer: actionRendererUpload_2, className: 'htLeft', width: 50 },
                    { data: "hinhLayoutMatbang", editor: false, type: 'text', className: 'htLeft', renderer: safeHtmlRenderer, width: 150 },
                    { data: "upHinhAnhThucTe", type: 'text', editor: false, renderer: actionRendererUpload_3, className: 'htLeft', width: 50 },
                    { data: "hinhAnhThucTe", editor: false, type: 'text', className: 'htLeft', renderer: safeHtmlRenderer, width: 150 },

                    //▼ Add  - NgoanHT - 10/01/2018 - Loại: 187 - Thêm cột thoiGianHienThi
                    {
                        data: "thoiGianHienThi", type: 'date',
                        dateFormat: 'DD/MM/YYYY',
                        correctFormat: true,
                        readOnly: checkAccSM
                        //defaultDate: '01/01/2018'
                    }
                    //▲ Add  - NgoanHT - 10/01/2018 - Loại: 187 - Thêm cột thoiGianHienThi
                ],
                //▼ Add  - NgoanHT - 10/01/2018 - Loại: 187 - Thêm afterChange
                afterChange: function (changes, source) {
                    if (!changes) {
                        return;
                    }
                    var instance = this;
                    changes.forEach(function (change) {
                        var row = change[0];
                        var col = change[1];
                        var newValue = change[3];
                        var cellProperties = {}, options;
                        if (col === 'thoiGianHienThi') {
                            var d = new Date()
                            var dateHT = new Date(d.getFullYear() + '/' + (d.getMonth() + 1) + '/' + d.getDate())
                            var dateCh = new Date(newValue.split("/")[2] + '/' + newValue.split("/")[1] + '/' + newValue.split("/")[0])
                            if (dateCh < dateHT) {
                                XFunction.RenderMessage('error', 'Không thể chọn ngày trong quá khứ, <br>Hệ thống tự chọn ngày hiện tại');
                                hot.setDataAtRowProp(row, 'thoiGianHienThi', dateHT, 'NOT');
                            };
                        }
                        hot.render()
                    })
                },
                //▲ Add  - NgoanHT - 10/01/2018 - Loại: 187 - Thêm afterChange
                //▼ Add  - ThuongNM2 - 05/10/2018 - Loại: 187 - Thêm beforeChange
                beforeChange: function (change, source) {
                    if (source === 'not') return;
                    for (i = 0, len = change.length; i < len; i++) {
                        var row = change[i][0], col = change[i][1];
                        if (col === 'loaiYeuCau') {
                            var CollsTenShop = hot.getDataAtCol(0);
                            var CollsLoaiyeuCau = hot.getDataAtCol(1);
                            var newChange = change[i][3];
                            if (newChange !== null && newChange !== undefined && newChange !== "") {
                                for (j = 0; j <= CollsLoaiyeuCau.length; j++) {
                                    if (newChange === CollsLoaiyeuCau[j] && CollsTenShop[row] === CollsTenShop[j] && CollsTenShop[j] !== null && CollsTenShop[j] !== undefined && CollsTenShop[j] !== "") {
                                        XFunction.RenderMessage('error', 'Đã tồn tại loại yêu cầu ' + newChange + ' với shop ' + CollsTenShop[j]);
                                        return false;
                                    }
                                }
                            }
                        }
                        else if (col === 'tenShop') {
                            var CollsTenShop = hot.getDataAtCol(0);
                            var CollsLoaiyeuCau = hot.getDataAtCol(1);
                            var newChange = change[i][3];
                            if (newChange !== null && newChange !== undefined && newChange !== "") {
                                for (j = 0; j <= CollsTenShop.length; j++) {
                                    if (newChange === CollsTenShop[j] && CollsLoaiyeuCau[row] === CollsLoaiyeuCau[j] && CollsLoaiyeuCau[j] !== null && CollsLoaiyeuCau[j] !== undefined && CollsLoaiyeuCau[j] !== "") {
                                        XFunction.RenderMessage('error', 'Đã tồn tại shop ' + newChange + ' với loại yêu cầu ' + CollsLoaiyeuCau[j]);
                                        return false;
                                    }
                                }
                            }
                        }
                        if (col === 'tenShop' && (JobTitleCode === '00004' || JobTitleCode === '00005')) {
                            var newChangeShop = change[i][3];
                            if (newChangeShop !== warehouseName && newChangeShop !== null && newChangeShop !== undefined && newChangeShop !== "") {
                                XFunction.RenderMessage('error', 'Bạn chỉ được tạo yêu cầu với shop của mình!');
                                return false
                            }
                        }
                    }
                },
                //▲ Add  - ThuongNM2 - 05/10/2018 - Loại: 187 - Thêm beforeChange
            };
        };
        hot = new Handsontable(container, setting());
        hot.selectCell(0, 0, 0, 0);
        $btnSend.on('click', function () {
            $btnSend.prop("disabled", true);
            var data = new FormData();
            var myData = $.grep(hot.getData(), function (item, index) {
                //return (!!item.STT && !!item.tenShop && !!item.tenLoaiYeucau && !!item.loaiYeuCau && !!item.thongTinThayDoiLayout && !!item.upHinhLayoutMattien && !!item.hinhLayoutMatTien
                //    && !!item.upHinhLayoutMatBang && !!item.hinhLayoutMatbang && !!item.thoiGianHienThi);
                //▼ Edit  - NgoanHT - 10/01/2018 - Loại: 187 - Sửa điều kiện khi bấm nút gửi
                return (!!item.tenShop && !!item.loaiYeuCau);
            });
            if (myData.length == 0) {
                XFunction.RenderMessage('error', 'Vui lòng nhập đầy đủ thông tin trước khi gửi');
                $btnSend.prop("disabled", false);
                return false;
            }
            else {
                var dem = 0;
                $.each(myData, function (index, item) {
                    if (item.tenShop == '' || item.tenShop == null || item.tenShop == undefined ||
                        //item.tenLoaiYeucau == '' || item.tenLoaiYeucau == null || item.tenLoaiYeucau == undefined ||
                        item.loaiYeuCau == '' || item.loaiYeuCau == null || item.loaiYeuCau == undefined ||
                        item.thongTinThayDoiLayout == '' || item.thongTinThayDoiLayout == null || item.thongTinThayDoiLayout == undefined ||
                        //(item.loaiYeuCau == 'Cập nhật Layout shop thông thường' && (item.hinhLayoutMatTien == '' || item.hinhLayoutMatTien == null || item.hinhLayoutMatTien == undefined)) || //Edit - NgoanHT - 29/01/2018 - Loại: 187 - sửa điều kiện
                        //(item.loaiYeuCau == 'Cập nhật Layout shop thông thường' && (item.hinhLayoutMatbang == '' || item.hinhLayoutMatbang == null || item.hinhLayoutMatbang == undefined)) || //Edit - NgoanHT - 29/01/2018 - Loại: 187 - sửa điều kiện
                        item.thoiGianHienThi == '' || item.thoiGianHienThi == null || item.thoiGianHienThi == undefined) {
                        dem++;
                    }
                });
                if (dem > 0) {
                    XFunction.RenderMessage('error', 'Vui lòng nhập đầy đủ thông tin ');
                    $btnSend.prop("disabled", false);
                    return false;
                };
            }
            var dataReturn = [];
            //$('#myModalWatting').modal('show');
            var Check190 = false;
            $.each(myData, function (index, item) {
                var shopDT = '', shopDat = [], ShopDT1 = ''; //Add - NgoanHT - 29/01/2018 - Loại: 187 - Thêm biến ShopDT1
                var RegionHierachyName = ''
                var loaiYeuCauDT = '', LoaiYeuCauGrep = [];
                shopDat = $.grep(shopdata, function (element, count) {
                    return item.tenShop === element.WarehouseName;
                });
                if (!!shopDat && shopDat.length > 0) {
                    shopDT = shopDat[0].WarehouseCodeB1;
                    ShopDT1 = shopDat[0].WarehouseCode //Add - NgoanHT - 29/01/2018 - Loại: 187 - Thêm biến ShopDT1
                    RegionHierachyName = shopDat[0].RegionHierachyName;
                }
                LoaiYeuCauGrep = $.grep(CategoryDataId, function (element, count) {
                    return item.loaiYeuCau === element.Name;
                });
                if (!!LoaiYeuCauGrep && LoaiYeuCauGrep.length > 0) {
                    loaiYeuCauDT = LoaiYeuCauGrep[0].Id;
                };
                dataReturn.push({
                    Row: index,
                    //STT: item.STT,
                    MaShopB1: shopDT, //Add - NgoanHT - 29/01/2018 - Loại: 187 - Thêm biến MaShopB1
                    MaShop: ShopDT1, //Edit - NgoanHT - 29/01/2018 - Loại: 187 - Sủa biến MaShop
                    TenShop: item.tenShop,
                    TenVungMien: RegionHierachyName,
                    tenLoaiYeucau: item.tenLoaiYeucau,
                    loaiYeuCau: loaiYeuCauDT,
                    thongTinThayDoiLayout: item.thongTinThayDoiLayout,
                    HinhLayoutMatTien: item.ListNameFile,
                    HinhLayoutmatBang: item.ListNameFile_2,
                    HinhAnhThucTeShop: item.ListNameFile_3,
                    ThoiGianHienThi: item.thoiGianHienThi
                });
                if (loaiYeuCauDT === 190) {
                    Check190 = true;
                }
                if (item.DataFiles !== '' && item.DataFiles !== null && item.DataFiles !== undefined && item.DataFiles.length > 0) {
                    $.each(item.DataFiles, function (cout, element) {
                        data.append(element.nameNew, element);
                    });
                }
                if (item.DataFiles_2 !== '' && item.DataFiles_2 !== null && item.DataFiles_2 !== undefined && item.DataFiles_2.length > 0) {
                    $.each(item.DataFiles_2, function (cout, element) {
                        data.append(element.nameNew, element);
                    });
                }
                if (item.DataFiles_3 !== '' && item.DataFiles_3 !== null && item.DataFiles_3 !== undefined && item.DataFiles_3.length > 0) {
                    $.each(item.DataFiles_3, function (cout, element) {
                        data.append(element.nameNew, element);
                    });
                }
            });
            if (Check190) {
                XFunction.RenderMessage('error', 'Hiện tại hệ thống chưa cấu hình loại yêu cầu: Cập nhật Layout sửa chữa - Thi công.</br>Bạn vui lòng bỏ chọn loại yêu cầu này ra khỏi lưới!');
                $btnSend.prop("disabled", false);
                return false;
            }
            $('#myModalWatting').modal('show');
            var files = document.getElementById('fileUpload').files;
            for (var i = 0; i < files.length; i++) {
                var file = files[i];
                // Add the file to the request.
                data.append('fileUpload' + i.toString(), file, file.name);

            }
            //▲ Edit  - NgoanHT - 10/01/2018 - Loại: 187 - Sửa điều kiện khi bấm nút gửi
            data.append("Details", JSON.stringify(dataReturn));
            data.append("DetailsLimited", JSON.stringify([]));
            data.append("Description", catagoryInfo.Description);
            data.append("TitleRequest", $('#Title').val());
            data.append("typeId", catagoryInfo.Id);
            data.append("TimeFutureFinish", $('#TimeFutureFinish').val());
            data.append("Cc", $('#Cc').val());
            data.append("sender", $('#sender').val());
            data.append("dateFrom", $('#dateFrom').val());
            data.append("dateTo", $('#dateTo').val());
            data.append("timeSend", $('#timeSend').val());
            data.append("Message", $('#Message').val());
            $.ajax({
                type: "POST",
                url: "/Requests/CreateLayOutMatTien",
                contentType: false,
                processData: false,
                data: data,
                success: function (result) {
                    var win = window.open('/Home', '_self');
                },
                error: function () {
                    $('#myModalWatting').modal('hide');
                    XFunction.RenderMessage('error', 'Dung lượng file upload quá lớn');
                    $btnSend.prop("disabled", false);
                    return;
                    //var win = window.open('/Home', '_self');
                }
            });

        });
    };
    //▲ Add - =======================================
    //▼  Add - LuanNT44 - 02/02/2018 - Loại 201 - Kiểm hàng online
    function contruct_201() {
        $.get('/Requests/GetNameShop', function (data) {
            $.get('/Requests/GetEmps', { ShopCode: '' }, function (data1) {
                $('.compose-message').hide();
                $('#detail').show();

                $('#sum-total').hide();   // not support dowload file
                $('#handsontableEx').css('overflow', 'hidden');
                $areaDowloadAndImport.show();
                $('#FileSupport').hide();

                var rowf = '';
                var rowm = '';
                var rowsl = '';

                var LoaiYeuCau = [], arrNameEmp = [];
                var WarehouseCodeData = data[0].WarehouseCode;
                var WarehouseNameData = data[0].WarehouseName;
                var dataHandsontable = data;

                $.each(data1, function (index, item) {
                    arrNameEmp.push(item.text)
                })

                var dt = new Date(); // lấy ngày hiện tại
                var date = (dt.getDate() < 10 ? "0" + dt.getDate() : dt.getDate()) + '/' + ((dt.getMonth() + 1) ? "0" + (dt.getMonth() + 1) : (dt.getMonth() + 1)) + '/' + dt.getFullYear();
                $.each(dataHandsontable, function (index, item) {
                    item.NgayKiemKe = date
                });

                DeleteIMG = function (data) {
                    var NameIMG = $(data).context.dataset.lisdatafilesname;
                    var indexL = $(data).context.dataset.id;
                    var indexDelete = [];
                    $.each(hot.getSettings().data, function (index, item) {
                        if (item.DataFiles !== null && item.DataFiles !== '' && item.DataFiles !== undefined && index == indexL)
                            $.each(item.DataFiles, function (index, item) {
                                if (item.nameNew == NameIMG) {
                                    indexDelete.push(index);
                                }

                            });
                    })
                    $.each(hot.getSettings().data, function (index, item1) {
                        if (index == indexL) {
                            $.each(indexDelete, function (index, item) {
                                item1.DataFiles.splice(item.toString(), 1);
                                item1.ColHtmlArray.splice(item.toString(), 1);
                                item1.ListNameFileArray.splice(item.toString(), 1);
                                item1.ColHtml = item1.ColHtmlArray.join(' ');
                                item1.ListNameFile = item1.ListNameFileArray.join(',');
                            })
                        }
                    });
                    $(data).parent().remove();
                }
                var actionRendererUpload = function (instance, td, row, col, prop, value, cellProperties) {

                    if (prop == 'UploadHinh') {
                        var valid = instance.getDataAtRowProp(row, 'NguoiKiemKe');
                        var $button = '';
                        if (valid === null || valid === '' || valid === undefined) {
                            $button = '';
                        } else {
                            $button = $('<i id="r' + row + '" data-value="' + row + '" class="fa fa-cloud-upload" aria-hidden="true" style="color:green"></i>');//Edit - NgoanHT - 23/11/2017 - Loại: 181 - Sửa lại icon
                            $button.click(function () {
                                var row = $(this).attr('data-value');
                                $('#uploadDetails').attr('data-value', row).attr('data-id', 'UploadHinh');
                                $('#uploadDetails').val('');
                                $('#uploadDetails').trigger('click');
                            });
                        }
                        $button != '' ?
                            $(td).empty().append($button) :
                            $(td).empty().append('');

                    } else {
                        $(td).empty().append('');
                    }
                };
                function readURL(input) {
                    var tmppath = URL.createObjectURL(input);
                    var win = window.open(tmppath, '_blank');
                    if (win) {
                        win.focus();
                    } else {
                        alert('Please allow popups for this site');
                    }
                }
                function endFile(name) {
                    var extension = name.split('.').pop().toLowerCase();
                    if ($.inArray(extension, ['jpg', 'png', 'gif', 'jpeg']) == -1) {
                        return false;
                    }
                    else {
                        return true;
                    }
                }

                $('#uploadDetails').on('change', function () {
                    var rowline = $(this).attr('data-value');
                    var selectedFiles = $(this)[0].files;
                    $.each(dataHandsontable, function (index, item) {
                        if (rowline == index) {
                            var dataFiles = [];
                            var listHtml = [];
                            var lisDataFilesName = [];
                            $.each(selectedFiles, function (index, item) {

                                var d = new Date();
                                var n = d.getTime();
                                selectedFiles[index].nameNew = n.toString() + '_' + selectedFiles[index].name;

                                //console.log(selectedFiles[index], selectedFiles[index].name);

                                dataFiles.push(selectedFiles[index]);
                                lisDataFilesName.push(selectedFiles[index].nameNew);
                                var tmppath = URL.createObjectURL(selectedFiles[index]);
                                if (endFile(selectedFiles[index].nameNew)) {
                                    listHtml.push('<div class="ULH"><a href="' + tmppath + '" target="_blank" class="renderlink" data-id="' + rowline + '" data-value="' + selectedFiles[index].nameNew + '" ><img class="IMG" src="' + tmppath + '"height="42" width="42"></a><button class="BTN" type="button" class="btn btn-success" data-id="' + rowline + '" data-lisDataFilesName="' + selectedFiles[index].nameNew + '" onclick="DeleteIMG(this)">X</button></div>');
                                }
                            });
                            item.DataFiles = dataFiles;
                            item.ColHtmlArray = listHtml;
                            item.ListNameFileArray = lisDataFilesName;
                            item.ColHtml = listHtml.join(' ');
                            item.ListNameFile = lisDataFilesName.join(',');
                        }
                    });
                    hot.render();
                    $(this).val('');
                    //console.log(rowline, rowCol);
                });
                function strip_tags(input, allowed) {
                    var tags = /<\/?([a-z][a-z0-9]*)\b[^>]*>/gi,
                        commentsAndPhpTags = /<!--[\s\S]*?-->|<\?(?:php)?[\s\S]*?\?>/gi;

                    // making sure the allowed arg is a string containing only tags in lowercase (<a><b><c>)
                    allowed = (((allowed || "") + "").toLowerCase().match(/<[a-z][a-z0-9]*>/g) || []).join('');

                    return input.replace(commentsAndPhpTags, '').replace(tags, function ($0, $1) {
                        return allowed.indexOf('<' + $1.toLowerCase() + '>') > -1 ? $0 : '';
                    });
                }
                function safeHtmlRenderer(instance, td, row, col, prop, value, cellProperties) {
                    var escaped = Handsontable.helper.stringify(value);
                    escaped = strip_tags(escaped, '<em><b><strong><a><big><i><br><img><button><div>');
                    td.innerHTML = escaped;
                    td.style.textAlign = 'left';
                    return td;
                }

                var setting = function () {
                    return {
                        //=================================Data=======
                        data: dataHandsontable,
                        //================================Cols=======
                        maxCols: 8,
                        minCols: 8,
                        startCols: 8,
                        minSpareCols: 0,
                        allowInsertColumn: false,
                        allowRemoveColumn: false,
                        autoColumnSize: true,
                        autoWrapCol: true,
                        columnSorting: false,
                        colWidths: 'undefined',
                        copyColsLimit: 8,
                        currentColClassName: 'currentCol', //currentCol
                        fixedColumnsLeft: 0,
                        manualColumnMove: false,
                        manualColumnResize: true,
                        viewportColumnRenderingOffset: 8,
                        sortIndicator: true,
                        //================================Rows=======
                        allowInsertRow: true,
                        allowRemoveRow: true,
                        autoRowSize: true,
                        autoWrapRow: true,
                        copyRowsLimit: 1000,
                        currentRowClassName: 'currentRow',
                        fixedRowsTop: 0,
                        manualRowMove: false,
                        manualRowResize: true,
                        rowHeaders: true,
                        minSpareRows: 3,
                        startRows: 10,
                        //================================Oder=======
                        allowInvalid: false,
                        stretchH: 'all',
                        commentedCellClassName: 'htCommentCell',
                        comments: true,
                        contextMenu: true,
                        copyable: true,
                        customBorders: false,
                        debug: false,
                        disableVisualSelection: true,
                        enterBeginsEditingBoolean: true,
                        fillHandle: true,
                        outsideClickDeselects: true,
                        fragmentSelection: false,
                        groups: false,
                        invalidCellClassName: 'htInvalid',
                        mergeCells: false,
                        multiSelect: true,
                        noWordWrapClassName: 'htNoWrap',
                        placeholder: false,
                        placeholderCellClassName: 'htPlaceholder',
                        readOnlyCellClassName: 'htDimmed',
                        search: false,
                        trimWhitespace: true,
                        undo: true,
                        formulas: true,
                        wordWrap: true,
                        //====================================Oder ==============================================
                        colHeaders:
                            [
                                'Mã shop inside',
                                'Tên shop ',
                                'Người kiểm kê',
                                'Ngày kiểm kê',
                                'Model kiểm',
                                'Số lượng model kiểm',
                                'Up tất cả hình ảnh model',
                                'Hình ảnh đính kèm'
                            ],
                        columns: [
                            { data: "WarehouseCode", type: 'text', className: 'htLeft', readOnly: true },
                            { data: "WarehouseName", type: 'text', className: 'htLeft', readOnly: true },
                            { data: "NguoiKiemKe", type: 'autocomplete', source: arrNameEmp, strict: false, className: 'htLeft', width: 300 },
                            {
                                data: "NgayKiemKe", type: 'date',
                                dateFormat: 'DD/MM/YYYY',
                                correctFormat: true
                            },
                            { data: "ModelKiem", type: 'text', className: 'htLeft', width: 100 },
                            { data: "SoLuongModelKiem", type: 'numeric', className: 'htLeft', width: 100 },
                            { data: "UploadHinh", type: 'text', editor: false, renderer: actionRendererUpload, className: 'htLeft' },// - Khóa không cho nhập
                            { data: "ColHtml", editor: false, type: 'text', className: 'htLeft', renderer: safeHtmlRenderer, width: 200 } // Khóa không cho nhập
                        ],

                        afterChange: function (changes, source) {
                            if (changes == null) {
                                return;
                            }
                            else (changes != null)
                            {
                                $.each(changes, function (index, item) {
                                    if (item[1] == 'NguoiKiemKe') {

                                        //console.log(1, WarehouseCodeData, 2, WarehouseNameData)

                                        var Tam = hot.getDataAtRowProp(item[0], 'NguoiKiemKe');
                                        if (Tam !== null && Tam !== '' && Tam !== undefined) {
                                            hot.setDataAtRowProp(item[0], 'WarehouseCode', WarehouseCodeData)
                                            hot.setDataAtRowProp(item[0], 'WarehouseName', WarehouseNameData)
                                        }
                                        else {
                                            hot.alter('remove_row', item[0]);
                                        }

                                        hot.render();
                                    }
                                    if (item[1] === 'NgayKiemKe') {
                                        var d = new Date()
                                        var dateHT = new Date(d.getFullYear() + '/' + (d.getMonth() + 1) + '/' + d.getDate())
                                        var dateCh = new Date(item[3].split("/")[2] + '/' + item[3].split("/")[1] + '/' + item[3].split("/")[0])
                                        if (dateCh < dateHT) {
                                            XFunction.RenderMessage('error', 'Không thể chọn ngày trong quá khứ, <br>Hệ thống tự chọn ngày hiện tại');
                                            hot.setDataAtRowProp(item[0], 'NgayKiemKe', dateHT);
                                        };
                                    }

                                    var Dem = hot.getData().length
                                    //hot.mergeCells([{ row: 0, col: 6, rowspan: Dem, colspan: 1 }])

                                    hot.mergeCells = new Handsontable.MergeCells([{ row: 0, col: 6, rowspan: Dem - 3, colspan: 1 }, { row: 0, col: 7, rowspan: Dem - 3, colspan: 1 }]);
                                    hot.render();
                                });
                            }
                        },

                    };
                };
                hot = new Handsontable(container, setting());
                hot.selectCell(0, 0, 0, 0);
            });
        });
        $btnSend.on('click', function () {
            var data = new FormData();

            var dataReturn = [];

            var dataAll = $.grep(hot.getData(), function (item, index) { // lấy tất cả các dòng trên lưới có 1 trường có dữ liệu
                return ((item.NguoiKiemKe !== null && item.NguoiKiemKe !== '' && item.NguoiKiemKe !== undefined)
                    || (item.NgayKiemKe !== null && item.NgayKiemKe !== '' && item.NgayKiemKe !== undefined)
                    || (item.ModelKiem !== null && item.ModelKiem !== '' && item.ModelKiem !== undefined)
                    || (item.SoLuongModelKiem !== null && item.SoLuongModelKiem !== '' && item.SoLuongModelKiem !== undefined)
                    || (item.ColHtml !== null && item.ColHtml !== '' && item.ColHtml !== undefined));
            });
            var check = $.grep(hot.getData(), function (item, index) { // lấy các dòng trên lưới (dòng 1 đầu tiên có đầy đủ dữ liệu, các dòng sau ko có trường hình ảnh)
                return ((item.NguoiKiemKe !== null && item.NguoiKiemKe !== '' && item.NguoiKiemKe !== undefined)
                    && (item.NgayKiemKe !== null && item.NgayKiemKe !== '' && item.NgayKiemKe !== undefined)
                    && (item.ModelKiem !== null && item.ModelKiem !== '' && item.ModelKiem !== undefined)
                    && (item.SoLuongModelKiem !== null && item.SoLuongModelKiem !== '' && item.SoLuongModelKiem !== undefined)
                    && ((item.ColHtml !== null && item.ColHtml !== '' && item.ColHtml !== undefined && index == 0) || (index != 0)));
            });

            //alert(dataAll + '  ' + check)

            if (check.length != dataAll.length || dataAll === null || dataAll.length == 0) {
                XFunction.RenderMessage('error', 'Dữ liệu chi tiết chưa đầy đủ! Vui lòng nhập đầy đủ chi tiết!'); return;
            }
            $('#myModalWatting').modal('show');

            $.each(dataAll, function (index, item) {
                var NguoiKiemKe = item.NguoiKiemKe.split('-')[0];
                dataReturn.push({
                    Row: index,
                    NguoiKiemKe: NguoiKiemKe,
                    NgayKiemKe: item.NgayKiemKe,
                    ModelKiem: item.ModelKiem,
                    SoLuongModelKiem: item.SoLuongModelKiem,
                    ListNameFile: item.ListNameFile,
                    WarehouseCode: item.WarehouseCode,
                    WarehouseName: item.WarehouseName,
                });
                if (item.DataFiles !== '' && item.DataFiles !== null && item.DataFiles !== undefined && item.DataFiles.length > 0) {
                    $.each(item.DataFiles, function (cout, element) {
                        data.append(element.nameNew, element);
                    });
                }
            });

            data.append("Details", JSON.stringify(dataReturn));
            data.append("DetailsLimited", JSON.stringify([]));
            data.append("Description", catagoryInfo.Description);
            data.append("TitleRequest", $('#Title').val());
            data.append("typeId", catagoryInfo.Id);
            data.append("TimeFutureFinish", $('#TimeFutureFinish').val());
            data.append("Cc", $('#Cc').val());
            data.append("sender", $('#sender').val());
            data.append("fileUpload", $('#fileUpload').val());
            data.append("dateFrom", $('#dateFrom').val());
            data.append("dateTo", $('#dateTo').val());
            data.append("timeSend", $('#timeSend').val());
            data.append("Message", $('#Message').val());
            console.log(data)
            $.ajax({
                type: "POST",
                url: "/Requests/CreateCalllogKiemHang",
                contentType: false,
                processData: false,
                data: data,
                success: function (result) {
                    var win = window.open('/Home', '_self');
                },
                error: function () {
                    $('#myModalWatting').modal('hide');
                    XFunction.RenderMessage('error', 'Dung lượng file upload quá lớn');
                    return;
                    //var win = window.open('/Home', '_self');
                }
            });

        });
    };
    //▲  Add - LuanNT44 - 02/02/2018 - Loại 201 - Kiểm hàng online

    //▼  Add - LuanNT44 - 27/03/2018 - Loại 204 - Chốt CR qua Calllog
    function contruct_204() {
        $.get('/Requests/Get_PhongBan_ChotCR', function (phongban) {
            $.get('/Requests/GetCatagoryTree', { type: 204 }, function (hethong) {
                var arr_HeThong = [];
                $.each(hethong, function (index, item) { //Lấy hệ thống
                    arr_HeThong.push(item.Name);
                });

                var phong = $.grep(phongban, function (item) {
                    if (item.parent == '#') {
                        return item;
                    }
                });

                //alert(phong);

                $('.compose-message').hide();
                $('#detail').show();

                $('#sum-total').hide();   // not support dowload file
                $('#handsontableEx').css('overflow', 'hidden');
                $areaDowloadAndImport.show();
                $('#FileSupport').hide();

                function addDays(dateObj, numDays) { // hàm tính cộng ngày                  
                    var dateHT = dateObj;
                    dateHT.setDate(dateObj.getDate() + numDays);
                    return dateHT;
                }

                var userYC = InsideCode + '-' + EmployeeName; // lấy user gửi yêu cầu

                var datatrangthai = ['Chốt YC', 'Nhận YC', 'GOLIVE CANCEL', 'PENDING', 'UAT']; //trạng thái
                var list_KPI = ['ĐẠT', 'KHÔNG ĐẠT'];                                           // list KPI
                var list_Uutien = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];

                var dt = new Date(); // lấy ngày hiện tại                                                        

                var date = (dt.getDate() < 10 ? "0" + dt.getDate() : dt.getDate()) + '/' + ((dt.getMonth() + 1) < 10 ? "0" + (dt.getMonth() + 1) : (dt.getMonth() + 1)) + '/' + dt.getFullYear();

                //var dataHandsontable = [{ Uutien: 0 }]; // thiết lập nút checkbox
                var arrPhongBan = [];
                var arrNhomHT = [];
                $.each(phong, function (index, item) { //lấy danh sách phòng ban
                    arrPhongBan.push(item.codename)
                });

                var actionRendererCheck = function (instance, td, row, col, prop, value, cellProperties) {

                    if (prop == 'comesInBlack') {
                        var $CheckDY = '';
                        $CheckDY = $('<div class="checkbox" style="width: 49%;float: left;"><label><input name="Co" id="Co" type="checkbox" value="1">Có</label></div>');
                        $(td).empty().append($CheckDY).append($CheckDY)
                        $("#Co").click(function () {
                            $("#Khong").prop("checked", false);
                            dataHandsontable[0].XacNhanKVKhongCoSong = 1;
                        });
                    } else {
                        $(td).empty().append('');
                    }
                };
                var check = false;
                var setting = function () {
                    return {
                        data: dataHandsontable,
                        //maxCols: 6,
                        //minCols: 6,
                        //startCols: 6,
                        minSpareCols: 0,
                        allowInsertColumn: false,
                        allowRemoveColumn: false,
                        autoColumnSize: true,
                        autoWrapCol: true,
                        columnSorting: false,
                        //colWidths: 'undefined',
                        copyColsLimit: 6,
                        currentColClassName: 'currentCol', //currentCol
                        fixedColumnsLeft: 0,
                        manualColumnMove: false,
                        manualColumnResize: true,
                        viewportColumnRenderingOffset: 6,
                        sortIndicator: true,
                        //================================Rows=======
                        allowInsertRow: true,
                        allowRemoveRow: true,
                        autoRowSize: true,
                        autoWrapRow: true,
                        copyRowsLimit: 1000,
                        currentRowClassName: 'currentRow',
                        fixedRowsTop: 0,
                        manualRowMove: false,
                        manualRowResize: true,
                        rowHeaders: true,
                        minSpareRows: 10,
                        //startRows: 10,
                        //viewportRowRenderingOffset : 'auto',
                        //maxRows: 'Infinity',
                        //minRows: 'Infinity',
                        //================================Oder=======
                        allowInvalid: false,
                        stretchH: 'all',
                        commentedCellClassName: 'htCommentCell',
                        comments: true,
                        contextMenu: true,
                        copyable: true,
                        customBorders: false,
                        debug: false,
                        disableVisualSelection: true,
                        enterBeginsEditingBoolean: true,
                        fillHandle: true,
                        outsideClickDeselects: true,
                        fragmentSelection: false,
                        groups: false,
                        invalidCellClassName: 'htInvalid',
                        mergeCells: false,
                        multiSelect: true,
                        noWordWrapClassName: 'htNoWrap',
                        placeholder: false,
                        placeholderCellClassName: 'htPlaceholder',
                        readOnlyCellClassName: 'htDimmed',
                        search: false,
                        trimWhitespace: true,
                        undo: true,
                        formulas: true,
                        wordWrap: true,
                        copyPaste: false,
                        //====================================Oder ==============================================
                        colHeaders:
                            [
                                'Mã ID',
                                'Phòng ban',
                                'Nhóm hệ thống',
                                'Người yêu cầu',
                                'Hệ thống',
                                'Nội dung yêu cầu',
                                'Mô tả yêu cầu',
                                'Ngày yêu cầu',
                                'Ngày chốt YC',
                                'Ngày dự kiến UAT',
                                'Ngày dự kiến GoLive',
                                //'Ngày thực tế UAT',
                                //'Ngày thực tế GoLive',
                                //'Trạng thái',
                                //'KPI',
                                'Ưu tiên',
                                'Ghi chú'
                                //'Tháng tính KPI',
                                //'Tháng làm CR'
                            ],
                        columns: [
                            { data: "MaID", type: 'text', className: 'htCenter' },
                            { data: "PhongBan", type: 'autocomplete', width: 300, className: 'htCenter', source: arrPhongBan, strict: true, allowInvalid: false, readOnly: check },
                            { data: "NhomHeThong", type: 'autocomplete', width: 200, className: 'htCenter', source: arrNhomHT, strict: true, allowInvalid: false },

                            { data: "NguoiYC", type: 'text', className: 'htCenter', readOnly: true },
                            { data: "He_Thong", type: 'autocomplete', width: 100, source: arr_HeThong, strict: true, allowInvalid: false, className: 'htCenter' },
                            { data: "NoiDungYC", type: 'text', width: 300, className: 'htCenter' },
                            { data: "MoTaYC", type: 'text', width: 300, className: 'htCenter' },

                            { data: "NgayYC", type: 'date', dateFormat: 'DD/MM/YYYY', correctFormat: true, readOnly: true },
                            { data: "NgayChotYC", type: 'date', dateFormat: 'DD/MM/YYYY', correctFormat: true },
                            { data: "NgayDuKienUAT", type: 'date', dateFormat: 'DD/MM/YYYY', correctFormat: true, readOnly: true },
                            { data: "NgayDuKienGoLive", type: 'date', dateFormat: 'DD/MM/YYYY', correctFormat: true, readOnly: true },
                            //{ data: "NgayThucTeUAT", type: 'date', dateFormat: 'DD/MM/YYYY', correctFormat: true, readOnly: true },
                            //{ data: "NgayThucTeGoLive", type: 'date', dateFormat: 'DD/MM/YYYY', correctFormat: true, readOnly: true },

                            //{ data: "TrangThai", type: 'autocomplete', width: 200, className: 'htCenter', source: datatrangthai, strict: false, readOnly: true},
                            //{ data: "KPI", type: 'autocomplete', width: 150, className: 'htCenter', source: list_KPI, strict: false, readOnly: true },

                            {
                                data: "Uutien",
                                type: 'autocomplete', width: 100, className: 'htCenter', source: list_Uutien, strict: true, allowInvalid: false
                            },

                            { data: "GhiChu", type: 'text', width: 300, className: 'htLeft' }
                            //{ data: "ThangTinhKPI", type: 'numeric', className: 'htLeft', readOnly: true },
                            //{ data: "ThangLamCR", type: 'numeric', className: 'htLeft', readOnly: true }
                        ],
                        afterChange: function (changes, source) {
                            if (changes == null) {
                                return;
                            }
                            else (changes != null)
                            {
                                var instance = this;
                                $.each(changes, function (index, item) {
                                    if (item[1] == 'MaID') {

                                        var Get_DSid = [];

                                        Get_DSid = $.grep(hot.getDataAtCol(0), function (item) {
                                            return item !== null && item !== '' && item !== undefined;
                                        });  // lấy danh sách mã ID nhập vào khác null

                                        var check_MaId = 0;

                                        for (var i = 0; i < Get_DSid.length; i++) {
                                            //alert(item[3] + '-' + Get_DSid[i]);
                                            if (item[3] == Get_DSid[i])      // so sánh mã ID mới nhập với danh sách mã ID
                                            {
                                                check_MaId++;
                                            }
                                        }
                                        if (check_MaId > 1) // giá trị mới nhập vào sẽ bị trùng
                                        {
                                            XFunction.RenderMessage('error', 'Trùng mã ID !! Bạn vui lòng nhập lại !!');
                                            hot.setDataAtRowProp(item[0], 'MaID', '');
                                        }
                                        else {
                                            var Tam = hot.getDataAtRowProp(item[0], 'MaID');
                                            var PhongBanGoc = hot.getDataAtRowProp(0, 'PhongBan');    //lấy data cột phòng ban
                                            var NhomHeThongGoc = hot.getDataAtRowProp(0, 'NhomHeThong');//lấy data cột nhóm hệ thống
                                            if (Tam !== null && Tam !== '' && Tam !== undefined) {

                                                hot.setDataAtRowProp(item[0], 'NgayYC', date);
                                                hot.setDataAtRowProp(item[0], 'NguoiYC', userYC);
                                                hot.setDataAtRowProp(item[0], 'PhongBan', PhongBanGoc);
                                                hot.setDataAtRowProp(item[0], 'NhomHeThong', NhomHeThongGoc);

                                            }
                                            else {
                                                hot.alter('remove_row', item[0]);
                                            }
                                        }

                                        hot.render();
                                    }
                                    if (item[1] == 'PhongBan') {
                                        var PhongBanGoc = hot.getDataAtRowProp(0, 'PhongBan');
                                        var data = $.grep(hot.getData(), function (item, index) {
                                            return item.PhongBan !== null && item.PhongBan !== '' && item.PhongBan !== undefined
                                        });

                                        if (data.length > 1 && item[0] == 0) //hàng đầu tiên
                                        {
                                            for (var i = 1; i <= data.length - 1; i++) {
                                                hot.setDataAtRowProp(i, 'PhongBan', item[3]); //set giá trị tất cả các hàng giống hàng đầu tiên                                            
                                            }
                                            for (var j = 0; j < data.length; j++) {
                                                hot.setDataAtRowProp(j, 'NhomHeThong', '');
                                            }

                                        }
                                        if (data.length == 1) //hàng đầu tiên
                                        {
                                            hot.setDataAtRowProp(0, 'NhomHeThong', '');
                                        }


                                        if (item[0] > 0 && item[3] !== PhongBanGoc)  // các hàng tiếp theo
                                        {
                                            hot.setDataAtRowProp(item[0], 'PhongBan', PhongBanGoc);
                                            XFunction.RenderMessage('error', 'Thay đổi vui lòng chọn hàng đầu tiên');
                                        }
                                        var MaPhongBan = item[3].split('-')[0].toString();
                                        //alert(MaPhongBan);
                                        //$.get('/Requests/Get_NhomHeThong_ChotCR', { maphongban: MaPhongBan }, function (nhomhethong) {

                                        //    var arrNhomHT1 = [];
                                        //    $.each(nhomhethong, function (index, item) {
                                        //        arrNhomHT1.push(item.Name)
                                        //    })
                                        //    if (arrNhomHT1.length > 0) {
                                        //        cellProperties = instance.getCellMeta(item[0], 2);
                                        //        cellProperties.source = arrNhomHT1;
                                        //    }
                                        //});

                                        var nhomht = $.grep(phongban, function (item) {
                                            if (item.parent == MaPhongBan) {
                                                return item;
                                            }
                                        });

                                        //alert(nhomht);

                                        var arrNhomHT1 = [];
                                        $.each(nhomht, function (index, item) {
                                            arrNhomHT1.push(item.codename)
                                        })

                                        if (arrNhomHT1.length > 0) {
                                            cellProperties = instance.getCellMeta(item[0], 2);
                                            cellProperties.source = arrNhomHT1;
                                        }
                                        hot.render();
                                    }
                                    if (item[1] == 'NhomHeThong') {
                                        var NhomHeThongGoc = hot.getDataAtRowProp(0, 'NhomHeThong');
                                        var data = $.grep(hot.getData(), function (item, index) {
                                            return item.NhomHeThong !== null && item.NhomHeThong !== '' && item.NhomHeThong !== undefined
                                        });

                                        if (data.length > 1 && item[0] == 0) //hàng đầu tiên
                                        {
                                            for (var i = 1; i <= data.length - 1; i++) {
                                                hot.setDataAtRowProp(i, 'NhomHeThong', item[3]);
                                            }
                                        }

                                        if (item[0] > 0 && item[3] !== NhomHeThongGoc)  // các hàng tiếp theo
                                        {
                                            hot.setDataAtRowProp(item[0], 'NhomHeThong', NhomHeThongGoc);
                                            XFunction.RenderMessage('error', 'Thay đổi vui lòng chọn hàng đầu tiên');
                                        }
                                        hot.render();
                                    }
                                    if (item[1] == 'NgayChotYC') {
                                        var ngaychot = hot.getDataAtRowProp(item[0], 'NgayChotYC');
                                        var ngaychot_day = ngaychot.split('/')[0];
                                        var ngaychot_month = ngaychot.split('/')[1];
                                        var ngaychot_year = ngaychot.split('/')[2];

                                        var dt_chot = new Date(ngaychot_year, ngaychot_month - 1, ngaychot_day); // khởi tạo ngày chốt yêu cầu
                                        var dt_chot1 = new Date(ngaychot_year, ngaychot_month - 1, ngaychot_day); // khởi tạo ngày chốt yêu cầu

                                        var dateUAT = addDays(dt_chot, 27);
                                        var dateGoLive = addDays(dt_chot1, 30);

                                        var date_UAT = (dateUAT.getDate() < 10 ? "0" + dateUAT.getDate() : dateUAT.getDate()) + '/' + ((dateUAT.getMonth() + 1) < 10 ? "0" + (dateUAT.getMonth() + 1) : (dateUAT.getMonth() + 1)) + '/' + dateUAT.getFullYear();
                                        var date_GoLive = (dateGoLive.getDate() < 10 ? "0" + dateGoLive.getDate() : dateGoLive.getDate()) + '/' + ((dateGoLive.getMonth() + 1) < 10 ? "0" + (dateGoLive.getMonth() + 1) : (dateGoLive.getMonth() + 1)) + '/' + dateGoLive.getFullYear();

                                        if (ngaychot !== null || ngaychot !== '' || ngaychot !== undefined) {
                                            hot.setDataAtRowProp(item[0], 'NgayDuKienUAT', date_UAT);
                                            hot.setDataAtRowProp(item[0], 'NgayDuKienGoLive', date_GoLive);
                                        }
                                        hot.render();
                                    }
                                    if (item[1] == 'Uutien') {
                                        if (isNaN(item[3]) == true) {

                                            XFunction.RenderMessage('error', 'Dữ liệu nhập không phải số !! Bạn vui lòng chọn lại !!');
                                            hot.setDataAtRowProp(item[0], 'Uutien', '');

                                        }
                                        else {
                                            var GetDS_uutien = [];

                                            GetDS_uutien = $.grep(hot.getDataAtCol(11), function (item) {
                                                return item !== null && item !== '' && item !== undefined;
                                            });  // lấy danh sách ưu tiên nhập vào khác null

                                            //console.log(GetDS_uutien); return;

                                            var check_uutien = 0;

                                            for (var i = 0; i < GetDS_uutien.length; i++) {
                                                //alert(item[3] + '-' + Get_DSid[i]);                                         
                                                if (item[3] == GetDS_uutien[i])      // so sánh ưu tiên mới nhập với danh sách ưu tiên
                                                {
                                                    check_uutien++;
                                                }

                                            }

                                            if (check_uutien > 1) // giá trị mới nhập vào sẽ bị trùng
                                            {
                                                XFunction.RenderMessage('error', 'Trùng ưu tiên !! Bạn vui lòng chọn lại !!');
                                                hot.setDataAtRowProp(item[0], 'Uutien', '');
                                            }
                                            hot.render();

                                        }

                                    }

                                });
                            }
                        },
                    };
                };
                hot = new Handsontable(container, setting());
                hot.selectCell(0, 0, 0, 0);
            });
        });
        $btnSend.on('click', function () {

            var T = $.grep(hot.getData(), function (item, index) { return (item.MaID !== null && item.MaID !== '' && item.MaID !== undefined) || (item.PhongBan !== null && item.PhongBan !== '' && item.PhongBan !== undefined) })
            //console.log(hot.getData())
            //console.log(T)
            //alert(T.length)
            if (T.length < 1) {
                XFunction.RenderMessage('error', 'Vui lòng nhập đầy đủ thông tin khi tạo Calllog'); return;
            }
            else {

                var check = 0;
                $.each(T, function (index, item) { //kiểm tra dòng nhập còn thiếu
                    if (item.MaID == null || item.MaID == '' || item.MaID == undefined ||
                        item.PhongBan == null || item.PhongBan == '' || item.PhongBan == undefined ||
                        item.He_Thong == null || item.He_Thong == '' || item.He_Thong == undefined ||
                        item.NoiDungYC == null || item.NoiDungYC == '' || item.NoiDungYC == undefined ||
                        item.MoTaYC == null || item.MoTaYC == '' || item.MoTaYC == undefined ||
                        item.NgayChotYC == null || item.NgayChotYC == '' || item.NgayChotYC == undefined
                    ) {
                        check++;
                    }
                });
                if (check > 0) {
                    XFunction.RenderMessage('error', 'Vui lòng nhập đầy đủ thông tin'); return;
                }
                else {
                    var returntable = [];
                    $.each(T, function (index, item) {
                        var PhongBan = item.PhongBan.split('-')[0];
                        var NguoiYC = item.NguoiYC.split('-')[0];
                        var NhomHeThong = item.NhomHeThong.split('-')[0];

                        returntable.push({
                            Row: index,
                            MaID: item.MaID,
                            PhongBan: PhongBan,
                            NhomHeThong: NhomHeThong,
                            NguoiYC: NguoiYC,
                            He_Thong: item.He_Thong,
                            NoiDungYC: item.NoiDungYC,
                            MoTaYC: item.MoTaYC,
                            NgayChotYC: item.NgayChotYC,
                            TrangThai: item.TrangThai,
                            KPI: item.KPI,
                            Uutien: item.Uutien,
                            NhomHT: item.NhomHT,
                            GhiChu: item.GhiChu,
                            ThangTinhKPI: item.ThangTinhKPI,
                            ThangLamCR: item.ThangLamCR
                        });
                    });
                    //console.log(returntable); return;
                    $('#Details').val(JSON.stringify(returntable));
                    $('#DetailsLimited').val(JSON.stringify(''));

                    $('#Description').val(catagoryInfo.Description);
                    $('#TitleRequest').val($('#Title').val());
                    $('#typeId').val(catagoryInfo.Id);

                    var form = $("form#form-create");
                    form.attr("action", "/Requests/Create");
                    form.submit();
                    $('#WaitDialog').modal('show');
                }
            }

        });
    };
    //▲  Add - LuanNT44 - 27/03/2018 - Loại 204 - Chốt CR qua Calllog

    //▼ ChuongNT3 - 12/06/2018 - Claim nhà bảo hiểm
    function contruct_205() {
        //▼ Add - TuanNA89 - 28/07/2020 - Code lại theo rule mới
        var l_Data = dataHandsontable;
        var xFunctions = {
            strip_tags: function (input, allowed) {
                var tags = /<\/?([a-z][a-z0-9]*)\b[^>]*>/gi,
                    commentsAndPhpTags = /<!--[\s\S]*?-->|<\?(?:php)?[\s\S]*?\?>/gi;

                // making sure the allowed arg is a string containing only tags in lowercase (<a><b><c>)
                allowed = (((allowed || "") + "").toLowerCase().match(/<[a-z][a-z0-9]*>/g) || []).join('');

                return input.replace(commentsAndPhpTags, '').replace(tags, function ($0, $1) {
                    return allowed.indexOf('<' + $1.toLowerCase() + '>') > -1 ? $0 : '';
                });
            },
            readURL: function (input) {
                var tmppath = URL.createObjectURL(input);
                var win = window.open(tmppath, '_blank');
                if (win) {
                    win.focus();
                } else {
                    alert('Please allow popups for this site');
                }
            },
            checkExtenstion: function (name) {
                var extension = name.split('.').pop().toLowerCase();
                if ($.inArray(extension, ['jpg', 'png', 'gif', 'jpeg']) != -1) {        //file ảnh
                    return 1;
                }
                else if ($.inArray(extension, ['xls', 'xlsx']) != -1) {                         //excel
                    return 2;
                }
                else if ($.inArray(extension, ['rar', 'zip']) != -1) {                           // file nén
                    return 3;
                }
                else if ($.inArray(extension, ['doc', 'docx', 'txt']) != -1) {           // file word. text
                    return 4;
                }
                else if ($.inArray(extension, ['ppsx', 'ppsx']) != -1) {         // file powerpoint
                    return 5;
                }
                else if ($.inArray(extension, ['pdf']) != -1) {                        //file pdf
                    return 6;
                }
                else if ($.inArray(extension, ['bmp', 'csv']) != -1) {                        //file khác
                    return 7;
                }
                else {
                    return 0;
                }
            },
            checkvaluedata: function (value) {
                if (value && value.toString().trim().length > 0) {
                    return true;
                }
                else {
                    return false;
                }
            }
        }
        var tblRender = {
            createColumns: function () {
                var rsArrayColumns = {};
                var ColsHeader = [];
                var ColsType = [];

                ColsHeader.push('<div style="padding-top: 20px;"><strong style="font-size: 11px;">Nội dung yc hỗ trợ ( Note rõ khoảng thời gian cần cắt camera, <br> đặc điểm đối tượng (nếu là vụ trộm cắp)<br> để IT thực hiện. )</strong></div>');
                ColsType.push({ data: "NoiDung", type: 'text', className: 'htLeft', width: 350 });
                ColsHeader.push('<div style="padding-top: 20px;"><strong style="font-size: 11px;">File Bản tường trình chi tiết sự cố </strong></div>');
                ColsType.push({ data: "FileChiTietSuCo", type: 'text', className: 'htLeft', width: 180, renderer: tblRender.columns.UploadFile, readOnly: true });
                ColsHeader.push('<div style="padding-top: 20px;"><strong style="font-size: 11px;">File Bản tường trình chi tiết sự cố </strong></div>');
                ColsType.push({ data: "ColHtml_FileChiTietSuCo", type: 'text', className: 'htLeft', width: 200, renderer: tblRender.columns.SafeHtml, readOnly: true });
                ColsHeader.push('<div style="padding-top: 20px;"><strong style="font-size: 11px;">Bảng kê chi tiết giá trị thiệt hại</strong></div>');
                ColsType.push({ data: "FileBangKeChiTietGiaTriThietHai", type: 'text', className: 'htLeft', width: 180, renderer: tblRender.columns.UploadFile, readOnly: true });
                ColsHeader.push('<div style="padding-top: 20px;"><strong style="font-size: 11px;">Bảng kê chi tiết giá trị thiệt hại</strong></div>');
                ColsType.push({ data: "ColHtml_FileBangKeChiTietGiaTriThietHai", type: 'text', className: 'htLeft', width: 200, renderer: tblRender.columns.SafeHtml, readOnly: true });
                ColsHeader.push('<div style="padding-top: 20px;"><strong style="font-size: 11px;">File ảnh xác nhận trình báo công an</strong></div>');
                ColsType.push({ data: "FileXacNhanTrinhBaoCongAn", type: 'text', className: 'htLeft', width: 180, renderer: tblRender.columns.UploadFile, readOnly: true });
                ColsHeader.push('<div style="padding-top: 20px;"><strong style="font-size: 11px;">File ảnh xác nhận trình báo công an</strong></div>');
                ColsType.push({ data: "ColHtml_FileXacNhanTrinhBaoCongAn", type: 'text', className: 'htLeft', width: 200, renderer: tblRender.columns.SafeHtml, readOnly: true });
                ColsHeader.push('<div style="padding-top: 20px;"><strong style="font-size: 11px;">Ghi chú </strong></div>');
                rsArrayColumns.ColsHeader = ColsHeader;
                rsArrayColumns.ColsType = ColsType;

                return rsArrayColumns;
            },
            columns: {
                SafeHtml: function (instance, td, row, col, prop, value, cellProperties) {
                    var escaped = Handsontable.helper.stringify(value);
                    escaped = xFunctions.strip_tags(escaped, '<em><b><strong><a><big><i><br><img><button><div>');
                    td.innerHTML = escaped;
                    //td.style.textAlign = 'left';
                    td.className = 'htMiddle';
                    return td;
                },
                UploadFile: function (instance, td, row, col, prop, value, cellProperties) {
                    var htmlBtn = '';
                    var $button = '';

                    htmlBtn = tblRender.controls.btnUpload(prop, row, 'ColHtmlArray_' + prop, 'ColHtml_' + prop, 'DataFiles_' + prop, 'ArrayFileNames_' + prop);
                    $button = $(htmlBtn);
                    $button.click(function () {
                        events_205.onChange_BtnUploadFile(row, prop);
                    });

                    $(td).empty().append($button);
                }
            },
            controls: {
                btnUpload: function (p__PropName, p__IndexRow, p__ColHtmlArray, p__ColHtml, p__DataFiles, p__ArrayFileNames) {
                    var html = '';
                    html = '<div class="fileUpload205 btn"><span class="fa fa-cloud-upload"></span>';
                    html += '<input type="file" id="' + p__PropName + '_' + p__IndexRow + '"';
                    html += ' data-prop="' + p__PropName + '"';
                    html += ' data-indexRow="' + p__IndexRow + '"';
                    html += ' data-colName_ColHtmlArray="' + p__ColHtmlArray + '"';
                    html += ' data-colName_DataFiles="' + p__DataFiles + '"';
                    html += ' data-colName_ColHtml="' + p__ColHtml + '"';
                    html += ' data-colName_ArrayFileNames="' + p__ArrayFileNames + '"';
                    html += ' multiple class="upload" /></div>';
                    return html;
                },
                iconFile: function (path, requestId) {
                    var fileName = path.split('/').pop();
                    var resultEndFile = xFunctions.checkExtenstion(fileName);
                    var dataRender = '';
                    switch (resultEndFile) {
                        case 1: dataRender = '<a class="IMG fa " style="font-size: 3em;" href="' + path + '" target="_blank" class="renderlink" data-id="' + requestId + '" data-value="' + fileName + '"><img class="IMG" src="' + path + '" height="42" width="42"></a>'; break;
                        case 2: dataRender = '<a class="IMG fa fa-file-excel-o" style="font-size: 3em;" href="' + path + '" target="_blank" class="renderlink" data-id="' + requestId + '" data-value="' + fileName + '"></a>'; break;
                        case 3: dataRender = '<a class="IMG fa fa-file-zip-o" style="font-size: 3em;" href="' + path + '" target="_blank" class="renderlink" data-id="' + requestId + '" data-value="' + fileName + '"></a>'; break;
                        case 4: dataRender = '<a class="IMG fa fa-file-word-o" style="font-size: 3em;" href="' + path + '" target="_blank" class="renderlink" data-id="' + requestId + '" data-value="' + fileName + '"></a>'; break;
                        case 5: dataRender = '<a class="IMG fa fa-file-powerpoint-o" style="font-size: 3em;" href="' + path + '" target="_blank" class="renderlink" data-id="' + requestId + '" data-value="' + fileName + '"></a>'; break;
                        case 6: dataRender = '<a class="IMG fa fa-file-pdf-o" style="font-size: 3em;" href="' + path + '" target="_blank" class="renderlink" data-id="' + requestId + '" data-value="' + fileName + '"></a>'; break;
                        case 7: dataRender = '<a class="IMG fa fa-file-o" style="font-size: 3em;" href="' + path + '" target="_blank" class="renderlink" data-id="' + requestId + '" data-value="' + fileName + '"></a>'; break;
                    }
                    return dataRender;
                },
                iconFileUpload: function (indexRow, file, listIcon_FileUpload) {
                    var tmppath = URL.createObjectURL(file);
                    var fileName = file.name;
                    var fileName_New = file.nameNew;
                    var resultEndFile = xFunctions.checkExtenstion(fileName);
                    var file_khong_ho_tro = '';
                    switch (resultEndFile) {
                        case 1:
                            var x = '<a href="' + tmppath + '" target="_blank" class="renderlink" data-id="' + indexRow + '" data-value="' + fileName_New + '" ><img class="IMG" src="' + tmppath + '"height="42" width="42" style="margin-bottom: 25px;"></a>';
                            listIcon_FileUpload.push('<div class="ULH" style ="padding-left:3px;">' + x + '<button class="BTN" style="margin-top: -69px;" type="button" class="btn btn-success" data-id="' + indexRow + '" data-FileName="' + fileName_New + '" onclick="DeleteIMG(this)">X</button></div>');
                            break;
                        case 2:
                            var x = '<a href="' + tmppath + '" target="_blank" class="IMG fa fa-file-excel-o"  style="font-size: 3em;" data-id="' + indexRow + '" data-value="' + fileName_New + '" ></a>';
                            listIcon_FileUpload.push('<div class="ULH" style ="padding-left:3px;">' + x + '<button class="BTN" type="button" class="btn btn-success" data-id="' + indexRow + '" data-FileName="' + fileName_New + '" onclick="DeleteIMG(this)">X</button></div>');
                            break;
                        case 3:
                            var x = '<a href="' + tmppath + '" target="_blank" class="IMG fa fa-file-zip-o"  style="font-size: 3em;" data-id="' + indexRow + '" data-value="' + fileName_New + '" ></a>';
                            listIcon_FileUpload.push('<div class="ULH" style ="padding-left:3px;">' + x + '<button class="BTN" type="button" class="btn btn-success" data-id="' + indexRow + '" data-FileName="' + fileName_New + '" onclick="DeleteIMG(this)">X</button></div>');
                            break;
                        case 4:
                            var y = '<a href="' + tmppath + '" target="_blank" class="IMG fa fa-file-word-o"  style="font-size: 3em;" data-id="' + indexRow + '" data-value="' + fileName_New + '" ></a>';
                            listIcon_FileUpload.push('<div class="ULH" style ="padding-left:3px;">' + y + '<button class="BTN" type="button" class="btn btn-success" data-id="' + indexRow + '" data-FileName="' + fileName_New + '" onclick="DeleteIMG(this)">X</button></div>');
                            break;
                        case 5:
                            var y = '<a href="' + tmppath + '" target="_blank" class="IMG fa fa-file-powerpoint-o"  style="font-size: 3em;" data-id="' + indexRow + '" data-value="' + fileName_New + '" ></a>';
                            listIcon_FileUpload.push('<div class="ULH" style ="padding-left:3px;">' + y + '<button class="BTN" type="button" class="btn btn-success" data-id="' + indexRow + '" data-FileName="' + fileName_New + '" onclick="DeleteIMG(this)">X</button></div>');
                            break;
                        case 6:
                            var y = '<a href="' + tmppath + '" target="_blank" class="IMG fa fa-file-pdf-o"  style="font-size: 3em;" data-id="' + indexRow + '" data-value="' + fileName_New + '" ></a>';
                            listIcon_FileUpload.push('<div class="ULH" style ="padding-left:3px;">' + y + '<button class="BTN" type="button" class="btn btn-success" data-id="' + indexRow + '" data-FileName="' + fileName_New + '" onclick="DeleteIMG(this)">X</button></div>');
                            break;
                        case 7:
                            var y = '<a href="' + tmppath + '" target="_blank" class="IMG fa fa-file-o"  style="font-size: 3em;" data-id="' + indexRow + '" data-value="' + selectedFiles[index].nameNew + '" ></a>';
                            listIcon_FileUpload.push('<div class="ULH" style ="padding-left:3px;">' + y + '<button class="BTN" type="button" class="btn btn-success" data-id="' + indexRow + '" data-FileName="' + fileName_New + '" onclick="DeleteIMG(this)">X</button></div>');
                            break;
                        default:
                            file_khong_ho_tro = fileName;
                            break;
                    }
                    return file_khong_ho_tro;
                }
            }
        }
        var events_205 = {
            xulyDataHinhAnh: function (p__uri_String_IMG, p__requestId) {
                var l__ColHTML = null;
                var l__ColHtmlArray = [];
                if (xFunctions.checkvaluedata(p__uri_String_IMG)) {
                    l__ColHTML = p__uri_String_IMG.split(',');
                    $.each(l__ColHTML, function (index, item) {
                        l__ColHtmlArray.push((tblRender.controls.iconFile(item, p__requestId)));
                    });
                }
                return l__ColHtmlArray;
            },
            onChange_BtnUploadFile: function (indexRow, prop) {
                $('#' + prop + '_' + indexRow).on('change', function () {
                    var selectedFiles = $(this)[0].files;
                    var objDs = $(this).context.dataset;
                    var indexRow = objDs.indexrow;
                    var propName_ListFileName = 'ListFileName_' + prop;
                    var propName_ColHtml = 'ColHtml_' + prop;
                    var propName_ColHtmlArray = 'ColHtmlArray_' + prop;
                    var propName_DataFiles = 'DataFiles_' + prop;
                    var array_ten_file_khong_sup = [];
                    var listHtml_NewFiles = [];
                    var listHtml_NewFileName = [];
                    dataFiles = l_Data[indexRow][propName_DataFiles] || [];
                    listHtml_NewFiles = l_Data[indexRow][propName_ColHtmlArray] || [];
                    listHtml_NewFileName = l_Data[indexRow][propName_ListFileName] || [];
                    $.each(selectedFiles, function (index, item) {
                        var timeUpload = new Date();
                        var time = timeUpload.getTime();
                        var fileName = item.name;
                        var extension = '';
                        if (xFunctions.checkExtenstion(fileName) > 0) {
                            extension = item.name.split('.').pop();
                        }
                        var nameNew = prop + '_' + time.toString() + '.' + extension;
                        item.nameNew = nameNew;
                        var ten_file_khong_sup = tblRender.controls.iconFileUpload(indexRow, item, listHtml_NewFiles);
                        if (ten_file_khong_sup) {
                            array_ten_file_khong_sup.push(ten_file_khong_sup);
                        }
                        else {
                            dataFiles.push(item);
                            listHtml_NewFileName.push(nameNew);
                        }
                        sleep(1000);
                    });
                    l_Data[indexRow][propName_ColHtmlArray] = listHtml_NewFiles;//danh sách hình mới
                    l_Data[indexRow][propName_ColHtml] = listHtml_NewFiles.join(' ');//hiển thị hình 
                    l_Data[indexRow][propName_DataFiles] = dataFiles;//mới
                    l_Data[indexRow][propName_ListFileName] = listHtml_NewFileName;// tên hình mới

                    hot.render();
                    $(this).val('');
                    if (array_ten_file_khong_sup && array_ten_file_khong_sup.length > 0) {
                        XFunction.RenderMessage('error', 'Bạn không thể tải lên các file: ' + array_ten_file_khong_sup.join(', ') + ' do định dạng không hỗ trợ');
                    }
                });
            }
        }
        DeleteIMG = function (data) {
            console.log($(data).context.dataset);
            var fileName_delete = $(data).context.dataset.filename;
            var indexRow = $(data).context.dataset.id;
            var prop = fileName_delete.split('_')[0];
            var propName_ListFileName = 'ListFileName_' + prop;
            var propName_ColHtml = 'ColHtml_' + prop;
            var propName_ColHtmlArray = 'ColHtmlArray_' + prop;
            var propName_DataFiles = 'DataFiles_' + prop;
            var indexDelete = [];
            var dataFiles = l_Data[indexRow][propName_DataFiles];
            var listHtml_NewFiles = l_Data[indexRow][propName_ColHtmlArray];
            var listHtml_NewFileName = l_Data[indexRow][propName_ListFileName];

            $.each(listHtml_NewFileName, function (index, item) {
                if (item == fileName_delete) {
                    indexDelete.push(index);
                }
            });

            if (indexDelete.length > 0) {
                $.each(indexDelete, function (index, item) {
                    dataFiles.splice(item, 1);
                    listHtml_NewFiles.splice(item, 1);
                    listHtml_NewFileName.splice(item, 1);
                });

                l_Data[indexRow][propName_ColHtmlArray] = listHtml_NewFiles;//danh sách hình mới
                l_Data[indexRow][propName_ColHtml] = listHtml_NewFiles.join(' ');//hiển thị hình 
                l_Data[indexRow][propName_DataFiles] = dataFiles;//mới
                l_Data[indexRow][propName_ListFileName] = listHtml_NewFileName;// tên hình mới
            }
            hot.render();
            console.log(l_Data[indexRow]);
        }
        sleep = function (milliseconds) {
            const date = Date.now();
            var currentDate = null;
            do {
                currentDate = Date.now();
            } while (currentDate - date < milliseconds);
        }
        $('#detail').show();
        $('#dowloadSupport205').show(); //▶ Edit - TrongNM3 - 17/12/2018 - Loai 205 - claim nha bao hiem -1

        var colsTable = tblRender.createColumns();
        //▼ Edit - TrongNM3 - 11/12/2018 - Loai 205 - claim nha bao hiem
        var setting = function () {
            return {
                data: l_Data,
                minSpareCols: 0,
                allowInsertColumn: false,
                allowRemoveColumn: false,
                autoColumnSize: true,
                autoWrapCol: true,
                columnSorting: false,
                colWidths: 'undefined',
                copyColsLimit: 8,
                currentColClassName: 'currentCol',
                fixedColumnsLeft: 0,
                manualColumnMove: false,
                manualColumnResize: true,
                viewportColumnRenderingOffset: 8,
                sortIndicator: true,
                //================================Rows=======
                allowInsertRow: true,
                allowRemoveRow: true,
                autoRowSize: true,
                autoWrapRow: true,
                copyRowsLimit: 1000,
                currentRowClassName: 'currentRow',
                fixedRowsTop: 0,
                manualRowMove: false,
                manualRowResize: true,
                rowHeaders: true,
                minSpareRows: 2,
                minRows: 1,
                startRows: 1,
                //================================Oder=======
                allowInvalid: false,
                stretchH: 'all',
                commentedCellClassName: 'htCommentCell',
                comments: true,
                contextMenu: true,
                copyable: true,
                customBorders: false,
                debug: false,
                disableVisualSelection: true,
                enterBeginsEditingBoolean: true,
                fillHandle: true,
                outsideClickDeselects: true,
                fragmentSelection: false,
                groups: false,
                invalidCellClassName: 'htInvalid',
                mergeCells: false,
                multiSelect: true,
                noWordWrapClassName: 'htNoWrap',
                placeholder: false,
                placeholderCellClassName: 'htPlaceholder',
                readOnlyCellClassName: 'htDimmed',
                search: false,
                trimWhitespace: true,
                undo: true,
                formulas: true,
                wordWrap: true,
                hiddenColumns: {
                    indicators: true
                },
                //====================================Oder ==============================================
                colHeaders: colsTable.ColsHeader,
                columns: colsTable.ColsType
            };
        };
        hot = new Handsontable(container, setting());
        hot.selectCell(0, 0, 0, 0);
        hot.render();

        $btnSend.on('click', function () {
            var data = new FormData();

            var myData = $.grep(hot.getSettings().data, function (item, index) {
                return item.NoiDung || item.ListFileName_FileChiTietSuCo;
            });

            if (myData.length == 0) {
                XFunction.RenderMessage('error', 'Dữ liệu chưa đầy đủ! Vui lòng nhập đầy đủ dữ liệu !');
                return;
            }

            var dataMissNoiDung = $.grep(myData, function (item, index) {
                return !item.NoiDung;
            });

            if (dataMissNoiDung.length > 0) {
                XFunction.RenderMessage('error', 'Dữ liệu [Nội dung yc hỗ trợ] chưa đầy đủ ở các dòng ' + dataMissNoiDung.join(',') + '! Vui lòng nhập đầy đủ dữ liệu !');
                return;
            }

            var dataMissFileChiTietSuCo = $.grep(myData, function (item, index) {
                return !item.ListFileName_FileChiTietSuCo;
            });

            if (dataMissFileChiTietSuCo.length > 0) {
                XFunction.RenderMessage('error', 'Dữ liệu [Bản tường trình chi tiết sự cố] chưa đầy đủ ở các dòng ' + dataMissFileChiTietSuCo.join(',') + '! Vui lòng nhập đầy đủ dữ liệu !');
                return;
            }

            console.log(myData);
            $('#myModal205').modal('show');
            var dataReturn = [];
            $.each(myData, function (index, item) {
                dataReturn.push({
                    NoiDung: item.NoiDung,
                    GhiChu: item.GhiChu,
                    FileUpload: [
                        { col_Name: 'FileChiTietSuCo', ListFileName: xFunctions.checkvaluedata(item.ListFileName_FileChiTietSuCo) ? item.ListFileName_FileChiTietSuCo.join(',') : "" },
                        { col_Name: 'FileBangKeChiTietGiaTriThietHai', ListFileName: xFunctions.checkvaluedata(item.ListFileName_FileBangKeChiTietGiaTriThietHai) ? item.ListFileName_FileBangKeChiTietGiaTriThietHai.join(',') : "" },
                        { col_Name: 'FileXacNhanTrinhBaoCongAn', ListFileName: xFunctions.checkvaluedata(item.ListFileName_FileXacNhanTrinhBaoCongAn) ? item.ListFileName_FileXacNhanTrinhBaoCongAn.join(',') : "" },
                    ]
                });
                if (xFunctions.checkvaluedata(item.DataFiles_FileChiTietSuCo))
                    $.each(item.DataFiles_FileChiTietSuCo, function (cout, element) {
                        data.append(element.nameNew, element);
                    });
                if (xFunctions.checkvaluedata(item.DataFiles_FileBangKeChiTietGiaTriThietHai))
                    $.each(item.DataFiles_FileBangKeChiTietGiaTriThietHai, function (cout, element) {
                        data.append(element.nameNew, element);
                    });
                if (xFunctions.checkvaluedata(item.DataFiles_FileXacNhanTrinhBaoCongAn))
                    $.each(item.DataFiles_FileXacNhanTrinhBaoCongAn, function (cout, element) {
                        data.append(element.nameNew, element);
                    });
            });
            console.log(dataReturn);

            data.append("Details", JSON.stringify(dataReturn));
            data.append("DetailsLimited", JSON.stringify([]));
            data.append("Description", catagoryInfo.Description);
            data.append("TitleRequest", $('#Title').val());
            data.append("typeId", catagoryInfo.Id);
            data.append("TimeFutureFinish", $('#TimeFutureFinish').val());
            data.append("Cc", $('#Cc').val());
            data.append("sender", $('#sender').val());
            data.append("fileUpload", $('#fileUpload').val());
            data.append("dateFrom", $('#dateFrom').val());
            data.append("dateTo", $('#dateTo').val());
            data.append("timeSend", $('#timeSend').val());
            data.append("Message", $('#Message').val());
            $.ajax({
                type: "POST",
                url: "/Requests/CreateCalllogClaimNhaBaoHiem_Type205",
                contentType: false,
                processData: false,
                data: data,
                success: function (result) {
                    window.location.href = '/Home'
                    $('#myModal205').modal('hide');// NghiaTV5 - 13/04/2018 - 205 úp hình màn tạo
                },
                error: function () {
                    $('#myModal205').modal('hide');// NghiaTV5 - 13/04/2018 - 205 úp hình màn tạo
                    XFunction.RenderMessage('error', 'Dung lượng file upload quá lớn');
                    return;
                }
            });

        });
        //▲ Add - TuanNA89 - 28/07/2020 - Code lại theo rule mới
    };
    //▲ChuongNT3 - 12/06/2018 - Claim nhà bảo hiểm
    //▼ Add - TuanNA89 - 17/09/2019 - Calllog phụ cấp trực đêm - Loại 216
    function contruct_216() {
        var dataShop_216 = [], arrNameShop_216 = [];
        var dataEmp_216 = [], dataEmpShop_216 = {},arrNameEmp_216 = [];
        var wahousdeCodeDefault_216 = '', wahouseNameDefault_216 = '';
        var lyDoTrucDem_216 = [];
        //▼ Add - TuanNA89 - 02/10/2019 - chỉ cho phép chọn ngày trực tháng này và tháng trước
        var now = new Date();
        var maxDay = new Date(now.getFullYear() , now.getMonth()+1 , 0);
        var minDay = new Date(now.getFullYear() , now.getMonth()-1 , 1);
        //▲ Add - TuanNA89 - 02/10/2019 - chỉ cho phép chọn ngày trực tháng này và tháng trước
        $('#handsontableEx').css('overflow', 'hidden');
        $('#detail').show();
        $.get('/Requests/GetAllShop_Type216', {
            regionId: 0
        }, function (data) {
            dataShop_216 = data;

            $.get('/Requests/GetEmployees_Type216', {
                ShopCode: ''
            }, function (data) {
                dataEmp_216 = data;
                $.each(dataShop_216, function (indexShop, itemShop) {
                    arrNameEmp_216 = [];

                    $.each(dataEmp_216, function (indexEmp, itemEmp) {
                        if(itemEmp.ShopCode == itemShop.WarehouseCode)
                        {
                            arrNameEmp_216.push(itemEmp.EmpName);
                        }
                    });
                    arrNameShop_216.push(itemShop.TextSearch);
                    dataEmpShop_216[itemShop.WarehouseCode] = arrNameEmp_216;
                });
            });      

            function convertDate(dateStr) {
                var parts = dateStr.split("/");
                return new Date(parts[2], parts[1] - 1, parts[0])
            }
            function strip_tags(input, allowed) {
                var tags = /<\/?([a-z][a-z0-9]*)\b[^>]*>/gi,
                    commentsAndPhpTags = /<!--[\s\S]*?-->|<\?(?:php)?[\s\S]*?\?>/gi;
                allowed = (((allowed || "") + "").toLowerCase().match(/<[a-z][a-z0-9]*>/g) || []).join('');

                return input.replace(commentsAndPhpTags, '').replace(tags, function ($0, $1) {
                    return allowed.indexOf('<' + $1.toLowerCase() + '>') > -1 ? $0 : '';
                });
            }            
            function safeHtmlRenderer(instance, td, row, col, prop, value, cellProperties) {
                var escaped = Handsontable.helper.stringify(value);
                escaped = strip_tags(escaped, '<em><b><strong><a><big><i><br><img><button><div>');
                td.innerHTML = escaped;
                td.style.textAlign = 'left';
                return td;
            }
            function onInit() {                
                var instance = this;
                var data = instance.getData();
                var value;        
                for (var row = 0; row < data.length; row++) {
                    value = data[row]['ShopCode'];
                    if(value != undefined && value != null)
                    {                        
                        setAutocompleteSource.call(instance, row, value);
                    }
                }
                instance.render();
            }
            function onChange(changes, source) {
                if (!changes) {
                    return;
                }
                var instance = this;
                changes.forEach(function (change) {
                    var row = change[0];
                    var col = change[1];
                    var newValue = change[3];
                    var cellProperties, options;

                    if (col == 'Shop') {
                        if(newValue){
                            var wahouseCode = $.grep(dataShop_216, function (item, index) {
                                return item.TextSearch == newValue;
                            });
                            cellProperties = instance.getCellMeta(row, 1);
                            setAutocompleteSource.call(instance, row, wahouseCode[0].WarehouseCode);                            
                            instance.getData()[row]['ShopCode'] = wahouseCode[0].WarehouseCode;
                            instance.render();
                        }
                    }
                    else if( col == 'Employee')
                    {
                        if(newValue){
                            var Employee = $.grep(dataEmp_216, function (item, index) {
                                return item.EmpName == newValue;
                            });
                            instance.getData()[row]['EmployeeCode'] = Employee[0].EmpCode;
                            instance.render();
                        }
                    }
                });
            }
            function setAutocompleteSource(row, value) {
                var instance = this;                
                var options = dataEmpShop_216[value];
                if(options != null && options != undefined)
                {
                    var cellProperties = instance.getCellMeta(row, 2);                    
                    cellProperties.source = options;

                    if(instance.getData()[row]['ShopCode'] != value){
                        instance.getData()[row]['EmployeeCode'] = '';
                        instance.getData()[row]['Employee'] = '';
                        instance.getData()[row]['LyDo'] = '';
                        instance.getData()[row]['NgayTruc'] = '';
                    }
                    
                }
            }
            
            function checkNgaytruc (value, callback) {
                if(value){
                    //▼ Add - TuanNA89 - 02/10/2019 - chỉ cho phép chọn ngày trực tháng này và tháng trước
                    var date = new Date(convertDate(value));
                    setTimeout(function(){                        
                        if (minDay <= date && date <= maxDay) {
                            callback(true);
                        }
                        else {
                            var month = now.getMonth() + 1;
                            XFunction.RenderMessage('error', 'Chỉ được phép chọn các ngày trong tháng '+(month-1)+' và '+month+' !!!');
                            callback(false);
                        }
                        
                    }, 200);
                    //▲ Add - TuanNA89 - 02/10/2019 - chỉ cho phép chọn ngày trực tháng này và tháng trước
                }
                else{
                    callback(true);
                }
            };

            $.get('/Requests/GetLyDoTrucDem_Type216', function (data) {
                lyDoTrucDem_216 = [];
                $.each(data, function (index, item) {
                    lyDoTrucDem_216.push(item.LyDo);
                });
                var warehouseUser = $.grep(dataShop_216, function (item, index) {
                    return (item.WarehouseCode == warehouseCode);
                });
                if(warehouseUser.length > 0){
                    wahousdeCodeDefault_216 = warehouseCode;
                    wahouseNameDefault_216 = warehouseUser[0].TextSearch;
                }        


                var dataHandsontable = [{'ShopCode':wahousdeCodeDefault_216
                                        , 'Shop':wahouseNameDefault_216
                                        , 'EmployeeCode':''
                                        , 'Employee':''
                                        , 'NgayTruc':''
                                        , 'LyDo':''
                }];

                var setting = function () {
                    return {
                        data: dataHandsontable,
                        minSpareRows: 2,
                        allowInsertColumn: false,
                        allowRemoveColumn: false,
                        autoColumnSize: true,
                        autoWrapCol: true,
                        columnSorting: false,
                        //colWidths: 'undefined',
                        currentColClassName: 'currentCol',
                        fixedColumnsLeft: 0,
                        manualColumnMove: false,
                        manualColumnResize: true,
                        viewportColumnRenderingOffset: 8,
                        sortIndicator: true,
                        //================================Rows=======
                        allowInsertRow: true,
                        allowRemoveRow: true,
                        autoRowSize: true,
                        autoWrapRow: true,
                        copyRowsLimit: 1000,
                        currentRowClassName: 'currentRow',
                        fixedRowsTop: 0,
                        manualRowMove: false,
                        manualRowResize: true,
                        rowHeaders: true,
                        minRows: 1,
                        allowInvalid: false,
                        stretchH: 'all',
                        commentedCellClassName: 'htCommentCell',
                        comments: true,
                        contextMenu: true,
                        copyable: true,
                        customBorders: false,
                        debug: false,
                        disableVisualSelection: true,
                        enterBeginsEditingBoolean: true,
                        fillHandle: true,
                        outsideClickDeselects: true,
                        fragmentSelection: false,
                        groups: false,
                        invalidCellClassName: 'htInvalid',
                        mergeCells: false,
                        multiSelect: true,
                        noWordWrapClassName: 'htNoWrap',
                        placeholder: false,
                        placeholderCellClassName: 'htPlaceholder',
                        readOnlyCellClassName: 'htDimmed',
                        search: false,
                        trimWhitespace: true,
                        undo: true,
                        formulas: true,
                        wordWrap: true,
                        hiddenColumns: {
                            columns: [2],
                            indicators: true
                        },
                        colHeaders: [
                             'Mã shop',
                             'Tên shop',// <span style="color:red">*</span>',
                             //'Mã nhân viên',
                             'Tên nhân viên trực đêm',// <span style="color:red">*</span>',
                             'Ngày trực',// <span style="color:red">*</span>',
                             'Lý do'
                        ],
                        columns: [
                        { data: "ShopCode", type: 'text', width: 0, readonly: true},
                        { data: "Shop", type: 'autocomplete',    source: arrNameShop_216, strict: true, width: 200},
                        //{ data: "EmployeeCode", type: 'text', width: 0, readonly: true},
                        { data: "Employee", type: 'autocomplete', className: 'htCenter', width: 150, strict: true},
                        { data: "NgayTruc", type: 'date', dateFormat: 'DD/MM/YYYY', width: 100, validator: checkNgaytruc, allowInvalid: false,correctFormat: true},
                        { data: "LyDo", type: 'autocomplete',    source: lyDoTrucDem_216, strict: true, width: 200},
                        ],
                        afterInit: onInit,
                        afterChange: onChange,
                    };
                };
                hot = new Handsontable(container, setting());
                hot.selectCell(0, 0, 0, 0);

                hot.render();         
            });   
        });
        $btnSend.on('click', function () {
            var data = new FormData();
            var myData = $.grep(hot.getSettings().data, function (item, index) {
                return (!jQuery.isEmptyObject(item)) && ((item.Shop) || (item.Employee) || (item.NgayTruc));
            });
            
            if (myData.length == 0) {
                XFunction.RenderMessage('error', 'Dữ liệu chưa đầy đủ! Vui lòng nhập đầy đủ dữ liệu !');
                return;
            }
            else {
                // Check dữ liệu
                var l_CheckDoubleData = [];
                var is_Error = false, error_Msg = '';
                $.each(myData, function (index1, item1) {
                    if(!is_Error)
                    {
                        if(!item1.Shop){
                            is_Error = true;
                            error_Msg = 'Dòng ' + (index1+1) + ' chưa chọn shop';
                            return false;
                        }
                        else if(!item1.Employee){
                            is_Error = true;
                            error_Msg = 'Dòng ' + (index1+1) + ' chưa chọn nhân viên trực đêm';
                            return false;
                        }
                        else if(!item1.NgayTruc){
                            is_Error = true;
                            error_Msg = 'Dòng ' + (index1+1) + ' chưa chọn ngày trực';
                            return false;
                        }
                        else if(!item1.LyDo){
                            is_Error = true;
                            error_Msg = 'Dòng ' + (index1+1) + ' chưa chọn lý do';
                            return false;
                        }
                        else {
                            $.each(l_CheckDoubleData, function (index2, item2) {
                                if((item1.ShopCode == item2.ShopCode)&&(item1.EmployeeCode == item2.EmployeeCode)&&(item1.NgayTruc == item2.NgayTruc)){
                                    is_Error = true;
                                    error_Msg = 'Dữ liệu bị trùng. Vui lòng kiểm tra lại !';
                                    return false;
                                }
                            });
                        }
                        if(is_Error) return false;
                        else l_CheckDoubleData.push(item1);
                    }
                });
                if(is_Error) {
                    XFunction.RenderMessage('error', error_Msg);
                    return;
                }
                // Check dữ liệu       

                $('#Details').val(JSON.stringify(myData));
                $('#DetailsLimited').val(JSON.stringify(''));
                $('#Description').val(catagoryInfo.Description);
                $('#TitleRequest').val($('#Title').val());
                $('#typeId').val(catagoryInfo.Id);
                console.log('call api');
                var form = $("form#form-create");
                form.attr("action", "/Requests/Create");
                form.submit();
                $('#WaitDialog').modal('show');
            }

        });
    };
    //▲ Add - TuanNA89 - 17/09/2019 - Calllog phụ cấp trực đêm - Loại 216

    //▼ Add - TuanNA89 - 15/10/2019 - Calllog Xuất sử dụng VPKM cho Khai trương & Hoạt náo - Loại 218
    function contruct_218() {
        // Edit - TuanNA89 - 18/02/2020 - Fix chặn cột Mã kho xuất + chỉ cho phép import mã kho xuất 2 ký tự
        $('#WaitDialog').modal('show');
        $.get('/Requests/Get_AllShop', function (data) {
            $.get('/Requests/GetProducts_218', function (dataP) {
                var dataShop_218 = [], arrNameShop_218 = [], arrNameProducts = [], dataProducts = [];
                var wahousdeCodeB1Default_218 = '', wahousdeCodeDefault_218 = '', wahouseNameDefault_218 = '', wahouseName_218 = '', MaKhoXuatDefault = '02';
                var now = new Date();
                var dataimg = [];
                var isReadOnlyShop = false;
                var dataHandsontable = [];
                var index_Img = 0;
                $('#handsontableEx').css('overflow', 'hidden');
                $('#detail').show();        
                function endFile(name) {
                    var extension = name.split('.').pop().toLowerCase();
                    if (extension === 'jpg' || extension === 'png' || extension === 'gif' || extension === 'jpeg') {
                        return 1;
                    }
                    else if ($.inArray(extension, ['xls', 'xlsx']) != -1) {
                        return 2;
                    }
                    else {
                        return -1;
                    }
                }
                function strip_tags(input, allowed) {
                    var tags = /<\/?([a-z][a-z0-9]*)\b[^>]*>/gi,
                        commentsAndPhpTags = /<!--[\s\S]*?-->|<\?(?:php)?[\s\S]*?\?>/gi;
                    allowed = (((allowed || "") + "").toLowerCase().match(/<[a-z][a-z0-9]*>/g) || []).join('');

                    return input.replace(commentsAndPhpTags, '').replace(tags, function ($0, $1) {
                        return allowed.indexOf('<' + $1.toLowerCase() + '>') > -1 ? $0 : '';
                    });
                }            
                function safeHtmlRenderer(instance, td, row, col, prop, value, cellProperties) {
                    var escaped = Handsontable.helper.stringify(value);
                    escaped = strip_tags(escaped, '<em><b><strong><a><big><i><br><img><button><div>');
                    td.innerHTML = escaped;
                    td.style.textAlign = 'left';
                    return td;
                }
                function onChange(changes, source) {
                    if (!changes) {
                        return;
                    }
                    var instance = this;
                    changes.forEach(function (change) {
                        var row = change[0];
                        var col = change[1];
                        var newValue = change[3];
                        var cellProperties, options;
                        if (col == 'Shop') {
                            if(newValue){
                                var wahouseCode = $.grep(dataShop_218, function (item, index) {
                                    return item.TextSearch == newValue;
                                });
                                cellProperties = instance.getCellMeta(row, 1);
                                instance.getSettings().data[row]['ShopCode'] = wahouseCode[0].WarehouseCode;
                                instance.getSettings().data[row]['ShopCodeB1'] = wahouseCode[0].WarehouseCodeB1;
                                instance.getSettings().data[row]['ShopName'] = wahouseCode[0].WarehouseName;
                                instance.getSettings().data[row]['MaKhoXuat'] = MaKhoXuatDefault;
                                instance.render();
                        
                            }
                        } else if (col == 'Product') {
                            if(newValue){                        
                                var filterProduct = $.grep(dataProducts, function (item, index) {
                                    return item.TextSearch == newValue;
                                });
                                cellProperties = instance.getCellMeta(row, 1);
                                console.log(filterProduct)
                                if(filterProduct != null){
                                    instance.getSettings().data[row]['ItemCode'] = filterProduct[0].ItemCode;
                                    instance.getSettings().data[row]['ItemName'] = filterProduct[0].ItemName;
                            
                                }
                                else {
                                    instance.getSettings().data[row]['Product'] = '';
                                    instance.getSettings().data[row]['ItemCode'] = '';
                                    instance.getSettings().data[row]['ItemName'] = '';
                                }
                                instance.render();
                            }
                        }
                        else{
                            if(warehouseCodeB1_Sender && !instance.getData()[row]['ShopCode']){
                                instance.getSettings().data[row]['ShopCode'] = wahousdeCodeDefault_218;
                                instance.getSettings().data[row]['ShopCodeB1'] = wahousdeCodeB1Default_218;
                                instance.getSettings().data[row]['ShopName'] = wahouseName_218;
                                instance.getSettings().data[row]['Shop'] = wahouseNameDefault_218;
                                instance.getSettings().data[row]['MaKhoXuat'] = MaKhoXuatDefault;
                                instance.render();

                            }
                        }
                    });
                }
                var actionRendererUploadPicture = function (instance, td, row, col, prop, value, cellProperties) {
                    $btnupload = $('<div class="fileUpload205 btn"><span id="s218_' + row + '" class="fa fa-cloud-upload"></span><input type="file" multiple id="FileUpload_' + row + '" class="upload" /></div>');
                    var buttongId = 'FileUpload_' + row;
                    var error = false;
                    $btnupload.click(function () {
                        $('#'+buttongId).on('change', function () {
                            var selectedFiles = $('#'+buttongId)[0].files;   
                            var objImgs = {};                    
                            objImgs['Row'] = row;                    
                            var dataItemImg = [];
                            var ListImg = [];
                            $.each(selectedFiles, function(indexFile, itemFile){
                                var l__SelectedFile_Name = itemFile.name;
                                var inValid = /\s/;
                                var str = l__SelectedFile_Name.replace('.', '');
                                if (/^[\w ]*$/.test(str) === false) {
                                    alert('Cảnh báo : Tên file phải không dấu, không khoảng trắng và không có kí tự đặc biệt!');
                                    $('#'+buttongId).val('');
                                    error = true;
                                    return false;
                                }
                                else if (endFile(l__SelectedFile_Name) !== 1) {
                                    $('#'+buttongId).val('')
                                    XFunction.RenderMessage("error", "File hình ảnh phải có định dạng đuôi ['jpeg', 'jpg', 'png', 'gif', 'bmp']!");
                                    error = true;
                                    return false;
                                }
                                else if (inValid.test(l__SelectedFile_Name)) {
                                    XFunction.RenderMessage("error", "Cảnh báo : Tên file hình không chứa khoảng trắng");
                                    $('#'+buttongId).val('');
                                    error = true;
                                    return false;
                                }
                                else 
                                {
                                    var l__SelectedFile_Ext = (l__SelectedFile_Name != '') ? l__SelectedFile_Name.split('.')[1].toLowerCase() : '';
                                    var tmppath = URL.createObjectURL(itemFile);                            
                                    itemFile.fileName = 'file-' + index_Img;
                                    index_Img++;
                                    dataItemImg.push(itemFile);
                                    var strHTML = '<a href="' + tmppath + '" target="_blank" data-id="' + row + '" data-value="' + itemFile.name + '" ><img class="IMG" src="' + tmppath + '"height="42" width="42"></a>';
                                    ListImg.push(strHTML);
                                    error = false;
                                }
                            });
                            if(error) return;
                            if(dataItemImg){
                                objImgs["ListData"] = dataItemImg;
                                dataimg = $.grep(dataimg, function(e){
                                    return e.Row != row;
                                });
                                dataimg.push(objImgs);
                                instance.getSettings().data[row]['FileUpload'] = objImgs;
                                instance.render();
                                if (ListImg) {
                                    hot.setDataAtRowProp(row, 'Img', ListImg.join('|'));
                                }
                            }
                        });
                    })
                    $(td).empty().append($btnupload);
                };
                function checkDuplicateData(arrData){
                    console.log('checkDuplicateData.arrData',arrData);
                    var result = "";
                    var Dups = {};
                    $.each(arrData, function (index, item){
                        if(item.Product && item.SoLuong){
                            var itemArr = (item.ShopCode||'')+'|'+(item.ItemCode||'')+'|'+(item.Imei||'')+'|'+(item.MaKhoXuat||'');
                            Dups[itemArr] = Dups[itemArr] || [];
                            Dups[itemArr].push(index+1);
                        }
                    });  
                    console.log('Dups',Dups);
                    for(let name in Dups) {
                        if(Dups[name].length > 1)
                            result = Dups[name];
                    }
                    if(result.length > 0){
                        result = 'Dữ liệu dòng '+result+' bị trùng. Vui lòng kiểm tra lại!'
                    }
                    else result = '';

                    console.log('checkDuplicateData.result',result);
                    return result;
                }
                function contructExecl218() {
                    var X = XLSX;
                    function to_json(workbook) {
                        var result = {};
                        workbook.SheetNames.forEach(function (sheetName) {
                            var roa = X.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);
                            if (roa.length > 0) {
                                result[sheetName] = roa;
                            }
                        });
                        return result;
                    }
                    function fixdata(data) {
                        var o = "", l = 0, w = 10240;
                        for (; l < data.byteLength / w; ++l) o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w, l * w + w)));
                        o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w)));
                        return o;
                    }
                    $('#FileSupport').change(function (event) {
                        if(!$('#FileSupport').val()) {return;}
                        var fileValid = -1;
                        $('#WaitDialog').modal('show');
                        fileValid = endFile($('#FileSupport').val());
                        if (fileValid == 2) {
                            var files = event.target.files;
                            var f = files[0];
                            {
                                var reader = new FileReader();
                                var name = f.name;
                                reader.onload = function (e) {
                                    var data = e.target.result;
                                    var arr = fixdata(data);                            
                                    wb = X.read(btoa(arr), { type: 'base64' });
                                    var wb;
                                    var output = to_json(wb);
                                    if (output.Import !== null && output.Import !== '' && output.Import !== undefined) {
                                        dataPages = output.Import;
                                        var colname = ['Mã shop B1', 'Mã hàng cần xuất', 'Imei máy cũ (nếu có)', 'Mã kho xuất', 'Số lượng', 'Lý do'];
                                        var dataInvalid = [];
                                        var checkData = true;
                                        var colNotCheck = ['Lý do','Imei máy cũ (nếu có)'];
                                        //=======================================================NO DELETE
                                        $.each(dataPages, function (index, item) {
                                            $.each(colname, function (index1, item1) {
                                                if ((colNotCheck.indexOf(item1) < 0) && (item[item1] === '' || item[item1] === null || item[item1] === undefined || item[item1].length <= 0)) {
                                                    XFunction.RenderMessage('error', 'Lỗi Import!!! Phải nhập đầy đủ thông tin trên lưới');
                                                    checkData = false;
                                                }
                                            });
                                            if(item['Mã kho xuất'].length > 2){
                                                XFunction.RenderMessage('error', 'Lỗi Import!!! Vui lòng nhập mã kho xuất đại diện gồm 2 ký tự số');
                                                checkData = false;
                                            }
                                            if(checkData == false) return false;
                                        });
                                        if (checkData == false) {
                                            //XFunction.RenderMessage('error', 'Lỗi Import!!! Phải nhập đầy đủ thông tin trên lưới');
                                            return;
                                        }
                                        dataHandsontable = [];
                                        $.each(dataPages, function(index, item){
                                            var MaShopB1 = item[colname[0]];
                                            var wahouseCode = $.grep(dataShop_218, function (item, index) {
                                                return item.WarehouseCodeB1 == MaShopB1;
                                            });
                                            var ShopCodeB1 = '',ShopName = '', txtShop = '',ShopCode='';
                                            if(wahouseCode != null && wahouseCode.length > 0){
                                                ShopCode = wahouseCode[0].WarehouseCode;
                                                ShopCodeB1 = wahouseCode[0].WarehouseCodeB1;
                                                ShopName = wahouseCode[0].WarehouseName;
                                                txtShop = wahouseCode[0].TextSearch;
                                            }
                                            var ItemCode = '',ItemName ='', txtProduct = '';
                                            ItemCode = item[colname[1]];
                                            var Product = $.grep(dataProducts, function (item, index) {
                                                return item.ItemCode == ItemCode;
                                            });                  
                                            if(Product != null && Product.length > 0){
                                                ItemName = Product[0].ItemName;
                                                txtProduct = Product[0].TextSearch;
                                            }
                                            if(!ItemName){
                                                XFunction.RenderMessage('error', 'Mã hàng dòng '+(index+2)+' không tồn tại trong list sản phẩm, vui lòng kiểm tra lại.');
                                                dataHandsontable = [{'ShopCode':wahousdeCodeDefault_218
                                                                , 'ShopCodeB1': wahousdeCodeB1Default_218
                                                                , 'ShopName':wahouseName_218
                                                                , 'Shop':wahouseNameDefault_218
                                                                , 'ItemCode':''
                                                                , 'ItemName': ''
                                                                , 'Product': ''
                                                                , 'Imei':''
                                                                , 'MaKhoXuat':MaKhoXuatDefault
                                                                , 'SoLuong':0
                                                                , 'LyDo':''
                                                                , 'Img':''
                                                                , 'FileUpload': ''
                                                }];
                                                return false;
                                            }
                                            dataHandsontable.push(
                                            {
                                                'ShopCode':ShopCode
                                                , 'ShopCodeB1': ShopCodeB1
                                                , 'ShopName':ShopName
                                                , 'Shop':txtShop
                                                , 'ItemCode':item[colname[1]]
                                                , 'ItemName': ItemName
                                                , 'Product': txtProduct
                                                , 'Imei':item[colname[2]]
                                                , 'MaKhoXuat':item[colname[3]]
                                                , 'SoLuong':item[colname[4]]
                                                , 'LyDo':item[colname[5]]
                                                , 'Img':''
                                                , 'FileUpload': []
                                            });
                                        });
                                    }
                                    hot.loadData(dataHandsontable);
                                };
                                reader.readAsArrayBuffer(f);
                            }
                        }
                        else{
                            XFunction.RenderMessage('error', 'File import phải có định dạng đuôi xls và xlsx');
                        }
                        $('#FileSupport').val('');
                        $('#WaitDialog').modal('hide');
                    });
                }
                $.each(data, function (indexShop, itemShop) {
                    if(warehouseCodeB1_Sender){
                        if(itemShop.WarehouseCodeB1 == warehouseCodeB1_Sender){
                            wahousdeCodeDefault_218 = itemShop.WarehouseCode;
                            wahousdeCodeB1Default_218 = itemShop.WarehouseCodeB1;
                            wahouseNameDefault_218 = itemShop.WarehouseCodeB1 + ' - ' + itemShop.WarehouseName;
                            wahouseName_218 = itemShop.WarehouseName;
                            //MaKhoXuatDefault = '02';
                            isReadOnlyShop = false;
                            dataShop_218.push({
                                'WarehouseCode': itemShop.WarehouseCode,
                                'WarehouseCodeB1': itemShop.WarehouseCodeB1,
                                'WarehouseName': itemShop.WarehouseName,
                                'TextSearch': itemShop.WarehouseCodeB1 + ' - ' + itemShop.WarehouseName
                            });
                            arrNameShop_218.push(itemShop.WarehouseCodeB1 + ' - ' + itemShop.WarehouseName);
                            return false;
                        }
                    }
                    else{
                        dataShop_218.push({
                            'WarehouseCode': itemShop.WarehouseCode,
                            'WarehouseCodeB1': itemShop.WarehouseCodeB1,
                            'WarehouseName': itemShop.WarehouseName,
                            'TextSearch': itemShop.WarehouseCodeB1 + ' - ' + itemShop.WarehouseName
                        });
                        arrNameShop_218.push(itemShop.WarehouseCodeB1 + ' - ' + itemShop.WarehouseName);
                    }
                });

                $.each(dataP, function (index, item) {
                    dataProducts.push({
                        'ItemCode': item.ItemCode,
                        'ItemName': item.ItemName,
                        'TextSearch': item.ItemCode +' - '+ item.ItemName
                    });
                    arrNameProducts.push(item.ItemCode +' - '+ item.ItemName);
                });

                if(!wahousdeCodeB1Default_218){
                    $('#sum-total').show();
                    contructExecl218();
                }
                dataHandsontable = [{'ShopCode':wahousdeCodeDefault_218
                                        , 'ShopCodeB1': wahousdeCodeB1Default_218
                                        , 'ShopName':wahouseName_218
                                        , 'Shop':wahouseNameDefault_218
                                        , 'ItemCode':''
                                        , 'ItemName': ''
                                        , 'Product': ''
                                        , 'Imei':''
                                        , 'MaKhoXuat':MaKhoXuatDefault
                                        , 'SoLuong':0
                                        , 'LyDo':''
                                        , 'Img':''
                                        , 'FileUpload': ''
                }];

                var setting = function () {
                    return {
                        data: dataHandsontable,
                        minSpareRows: 2,
                        allowInsertColumn: false,
                        allowRemoveColumn: false,
                        autoColumnSize: true,
                        autoWrapCol: true,
                        columnSorting: false,
                        //colWidths: 'undefined',
                        currentColClassName: 'currentCol',
                        fixedColumnsLeft: 0,
                        manualColumnMove: false,
                        manualColumnResize: true,
                        viewportColumnRenderingOffset: 8,
                        sortIndicator: true,
                        //================================Rows=======
                        allowInsertRow: true,
                        allowRemoveRow: true,
                        autoRowSize: true,
                        autoWrapRow: true,
                        copyRowsLimit: 1000,
                        currentRowClassName: 'currentRow',
                        fixedRowsTop: 0,
                        manualRowMove: false,
                        manualRowResize: true,
                        rowHeaders: true,
                        minRows: 1,
                        allowInvalid: false,
                        stretchH: 'all',
                        commentedCellClassName: 'htCommentCell',
                        comments: true,
                        contextMenu: true,
                        copyable: true,
                        customBorders: false,
                        debug: false,
                        disableVisualSelection: true,
                        enterBeginsEditingBoolean: true,
                        fillHandle: true,
                        outsideClickDeselects: true,
                        fragmentSelection: false,
                        groups: false,
                        invalidCellClassName: 'htInvalid',
                        mergeCells: false,
                        multiSelect: true,
                        noWordWrapClassName: 'htNoWrap',
                        placeholder: false,
                        placeholderCellClassName: 'htPlaceholder',
                        readOnlyCellClassName: 'htDimmed',
                        search: false,
                        trimWhitespace: true,
                        undo: true,
                        formulas: true,
                        wordWrap: true,
                        colHeaders: [
                                'Mã shop',
                                'Mã hàng cần xuất',
                                'Imei máy cũ (nếu có)',
                                'Mã kho xuất',
                                'Số lượng',
                                'Lý do',
                                'Đính kèm hình ảnh',
                                'Hình ảnh đính kèm'
                        ],
                        columns: [
                        { data: "Shop", type: 'autocomplete', source: arrNameShop_218, strict: true, width: 150, readOnly:isReadOnlyShop},
                        { data: "Product", type: 'autocomplete', source: arrNameProducts, width: 150, readonly: false },
                        //{ data: "ItemCode", type: 'text', width: 100, readonly: false, validator: function (value, callback) {
                        //    var maxlength = 20;
                        //   if (value.length > maxlength) {
                        //       alert('Mã hàng nhập kho chỉ được phép nhập '+maxlength+' ký tự. Số ký tự dư sẽ bị xoá!!');
                        //       this.instance.setDataAtCell(this.row, this.col, value.substring(0, maxlength), null);
                        //   }else if({

                        //    }
                        //   callback(true);
                        //}},
                        { data: "Imei", type: 'text', width: 160, readonly: false, validator: function (value, callback) {
                            var maxlength = 32;
                            if (value.length > maxlength) {
                                alert('Imei máy cũ chỉ được phép nhập '+maxlength+' ký tự. Số ký tự dư sẽ bị xoá!!');
                                this.instance.setDataAtCell(this.row, this.col, value.substring(0, maxlength), null);
                            }
                            callback(true);
                        }},
                        { data: "MaKhoXuat", type: 'text', width: 100, readOnly: true},
                        { data: "SoLuong", type: 'numeric', width: 80, readOnly: false, className: 'htCenter'},
                        { data: "LyDo", type: 'text', width: 100, readOnly: false},
                        { data: "button", type: 'text', width: 100, readOnly: true, renderer: actionRendererUploadPicture},
                        { data: "Img", type: 'text', width: 100, readOnly:true, classNamereadonly: true, renderer: safeHtmlRenderer},
                        ],
                        afterChange: onChange,
                    };
                };
                hot = new Handsontable(container, setting());
                hot.render();

                $btnSend.on('click', function () {
                    var myData = $.grep(hot.getSettings().data, function (item, index) {
                        return (!jQuery.isEmptyObject(item)) && (item.ShopCode);
                    });

                    // Check dữ liệu
                    var l_UniqueData = [], l_DuplicateData = [];
                    var error_Msg = '';
                    error_Msg = checkDuplicateData(myData);
            
                    if(!error_Msg){
                        myData = $.grep(hot.getSettings().data, function (item, index) {
                            return (!jQuery.isEmptyObject(item)) && (item.ShopCode) && (item.Product) && (item.SoLuong);
                        });

                        if (myData.length == 0) {
                            error_Msg = 'Dữ liệu chưa đầy đủ! Vui lòng nhập đầy đủ dữ liệu !';
                        }
                        if(!error_Msg){
                            $.each(myData, function (index1, item1) {
                                if(!error_Msg)
                                {
                                    if(!item1.ShopCode){
                                        error_Msg = 'Dòng ' + (index1+1) + ' chưa chọn shop';
                                        return false;
                                    }
                                    else if(!item1.Product){
                                        error_Msg = 'Dòng ' + (index1+1) + ' không đúng mã sản phẩm';
                                        return false;
                                    }
                                    else if(item1.ItemCode && item1.ItemCode.indexOf(' ') > -1){
                                        error_Msg = 'Dòng ' + (index1+1) + ' mã hàng không được có khoảng trắng';
                                        return false;
                                    }
                                    else if(item1.Imei && item1.Imei.indexOf(' ') > -1){
                                        error_Msg = 'Dòng ' + (index1+1) + ' Imei không được có khoảng trắng';
                                        return false;
                                    }
                                    else if(!item1.MaKhoXuat){
                                        error_Msg = 'Dòng ' + (index1+1) + ' chưa nhập mã kho xuất';
                                        return false;
                                    }
                                    else if(!$.isNumeric(item1.SoLuong)){
                                        error_Msg = 'Dòng ' + (index1+1) + ' chưa nhập số lượng';
                                        return false;
                                    }
                                    else if(!dataimg[index1]){
                                        error_Msg = 'Dòng ' + (index1+1) + ' chưa up hình đính kèm';
                                        return false;
                                    }
                                        //▼ Add - TuanNA89 - 29/11/2019 - Thêm điều kiện bắt buộc nhập Lý do
                                    else if(!item1.LyDo || $.trim(item1.LyDo) == ''){
                                        error_Msg = 'Dòng ' + (index1+1) + ' bạn vui lòng nhập rõ thông tin sản phẩm dùng cho chương trình KM nào, sử dụng vào ngày nào tại cột Lý do.';
                                        return false;
                                    }
                                    //▲ Add - TuanNA89 - 29/11/2019 - Thêm điều kiện bắt buộc nhập Lý do
                                    if(error_Msg) return false;
                                }
                            });
                        }
                    }

                    if(error_Msg) {
                        XFunction.RenderMessage('error', error_Msg);
                        return;
                    }
                
                    // Check dữ liệu                       
                    var data = new FormData();
                    var details = [];
                    var itemDetail = [];
                    var dataShop = [];
                    var Title = '', ShopName = '', ShopCodeB1 = '';
                    $.each(myData, function (index, item){
                        if($.inArray(item.ShopCode, dataShop) === -1) 
                            dataShop.push(item.ShopCode);
                    });
                    $.each(dataShop, function (indexShop, itemShop){
                        itemDetail = [];
                        ShopName = '';
                        $.each(myData, function (index, item){
                            if(item.ShopCode == itemShop){
                                ShopName = item.ShopName;
                                ShopCodeB1 = item.ShopCodeB1;
                                itemDetail.push({
                                    'row': index
                                    , 'ItemCode': $.trim(item.ItemCode)
                                    , 'ItemName': $.trim(item.ItemName)
                                    , 'Imei': $.trim(item.Imei)
                                    , 'MaKhoXuat': $.trim(item.MaKhoXuat)
                                    , 'SoLuong': $.trim(item.SoLuong)
                                    , 'LyDo': $.trim(item.LyDo)
                                    , 'FileUpload': item.FileUpload
                                    , 'ShopCodeB1': $.trim(item.ShopCodeB1)
                                });
                            }
                        });
                        if(warehouseCodeB1_Sender){ // Acc Shop
                            Title = 'Xuất sử dụng VPKM (ngoài CTKM) cho Khai Trương & Hoạt Náo – '+ShopCodeB1+' – '+ShopName+' – '+ now.getDate() + '/' + (now.getMonth() + 1) + '/' + now.getFullYear();
                        }else{
                            Title = 'Marketing import xuất sử dụng VPKM (ngoài CTKM) cho Khai Trương & Hoạt Náo – '+ShopCodeB1+' – '+ShopName+' – '+ now.getDate() + '/' + (now.getMonth() + 1) + '/' + now.getFullYear();
                        }
                        details.push({
                            'ShopCode': itemShop,
                            'ShopName': ShopName,
                            'Title': Title,
                            'TypeId': 218,
                            'Data': itemDetail
                        });
                    });
                    for (var i = 0; i < dataimg.length; i++) {
                        var itemImg = dataimg[i].ListData;
                        for(var j = 0; j < itemImg.length; j++){
                            data.append(itemImg[j].fileName, itemImg[j]);
                        }
                    }
                    console.log(details);
                    $('#WaitDialog').modal('show');
                    data.append("Details", JSON.stringify(details));
                    data.append("Description", catagoryInfo.Description);
                    data.append("TitleRequest", $('#Title').val());
                    data.append("typeId", catagoryInfo.Id);
                    data.append("TimeFutureFinish", $('#TimeFutureFinish').val());
                    data.append("Cc", $('#Cc').val());
                    data.append("sender", $('#sender').val());
                    data.append("fileUpload", dataimg);
                    data.append("dateFrom", $('#dateFrom').val());
                    data.append("dateTo", $('#dateTo').val());
                    data.append("timeSend", $('#timeSend').val());
                    data.append("Message", $('#Message').val());
                
                    $.ajax({
                        type: "POST",
                        url: "/Requests/CreateCalllogVPKM_218",
                        contentType: false,
                        processData: false,
                        data: data,
                        success: function (result) {
                            var win = window.open('/Home', '_self');
                        },
                        error: function () {
                            $('#myModalWatting').modal('hide');
                            XFunction.RenderMessage('error', 'Lỗi tạo yêu cầu');
                            return;
                            //var win = window.open('/Home', '_self');
                        }
                    });
                });

                $('#WaitDialog').modal('hide');
            });
        });        
    };
    //▲ Add - TuanNA89 - 15/10/2019 - Calllog Xuất sử dụng VPKM cho Khai trương & Hoạt náo - Loại 218

    //▼ Add - TuanNA89 - 04/12/2019 - CallLog in ấn POSM - Loại 223
    function contruct_223() {
        $('#WaitDialog').modal('show');
        $.get('/Requests/Get_AllShop', function (data) {
            var dataShop_223 = [], arrNameShop_223 = [];        
            $('#handsontableEx').css('overflow', 'hidden');
            $('#detail').show();        
            function DefaultValueStringEmpty (Value, Type) {
                if(Type == 'string')
                    return (!!Value) ? Value : '';
                else if(Type == 'number')
                    return (!isNaN(Value)) ? Value : 0;
            };
            function endFile(name) {
                var extension = name.split('.').pop().toLowerCase();
                if (extension === 'jpg' || extension === 'png' || extension === 'gif' || extension === 'jpeg') {
                    return 1;
                }
                else if ($.inArray(extension, ['xls', 'xlsx']) != -1) {
                    return 2;
                }
                else {
                    return -1;
                }
            }
            function strip_tags(input, allowed) {
                var tags = /<\/?([a-z][a-z0-9]*)\b[^>]*>/gi,
                    commentsAndPhpTags = /<!--[\s\S]*?-->|<\?(?:php)?[\s\S]*?\?>/gi;
                allowed = (((allowed || "") + "").toLowerCase().match(/<[a-z][a-z0-9]*>/g) || []).join('');

                return input.replace(commentsAndPhpTags, '').replace(tags, function ($0, $1) {
                    return allowed.indexOf('<' + $1.toLowerCase() + '>') > -1 ? $0 : '';
                });
            }            
            function safeHtmlRenderer(instance, td, row, col, prop, value, cellProperties) {
                var escaped = Handsontable.helper.stringify(value);
                escaped = strip_tags(escaped, '<em><b><strong><a><big><i><br>');
                td.innerHTML = escaped;
                td.style.textAlign = 'left';
                return td;
            }
            function convertStringToLink(strUrl){
                return '<a href="' + strUrl + '" target="_blank" class="renderlink">' + strUrl + '</a>';
            }
            function onChange(changes, source) {
                if (!changes || source == 'not') {
                    return;
                }
                var instance = this;
                changes.forEach(function (change) {
                    var row = change[0];
                    var col = change[1];
                    var newValue = change[3];
                    var cellProperties, options;
                    if (col == 'Shop') {
                        var wahouseCode = $.grep(dataShop_223, function (item, index) {
                            return item.TextSearch == newValue;
                        });
                        var shopcode, shopcodeb1, shopname, soluong;
                        shopcode = (wahouseCode.length == 0) ? '' : wahouseCode[0].WarehouseCode;
                        shopcodeb1 = (wahouseCode.length == 0) ? '' : wahouseCode[0].WarehouseCodeB1;
                        shopname = (wahouseCode.length == 0) ? '' : wahouseCode[0].WarehouseName;
                        soluong = (wahouseCode.length == 0) ? 0 : wahouseCode[0].SoLuong;
                        hot.setDataAtRowProp(row, 'Shop', shopname,'not');
                        hot.setDataAtRowProp(row, 'ShopCode', shopcode,'not');
                        hot.setDataAtRowProp(row, 'ShopCodeB1', shopcodeb1,'not');
                        hot.setDataAtRowProp(row, 'ShopName', shopname,'not');
                        hot.setDataAtRowProp(row, 'SoLuong', 0,'not');
                    }
                    else if(col == 'LinkTaiFileInAn'){
                        var arrlinkTaiFileInAn =[], convertlinkTaiFileInAn = [],
                                                            linkTaiFileInAn = '';
                        linkTaiFileInAn = newValue;
                        arrlinkTaiFileInAn = linkTaiFileInAn.split(',');
                        $.each(arrlinkTaiFileInAn, function(index, item){
                            convertlinkTaiFileInAn.push(convertStringToLink(item));
                        });
                        var linkView = (!convertlinkTaiFileInAn) ? '' : convertlinkTaiFileInAn.join('<br>');
                        hot.setDataAtRowProp(row, 'LinkView', linkView,'not');
                    }
                    else if(col == 'DonGia' || col == 'SoLuong'){
                        var dongia = 0;
                        var soluong = 0;
                        var thanhtien = 0;
                            
                        dongia = (col == 'DonGia') ? parseFloat(newValue) : parseFloat(hot.getDataAtRowProp(row, 'DonGia'));
                        soluong = (col == 'SoLuong') ? parseFloat(newValue) : parseFloat(hot.getDataAtRowProp(row, 'SoLuong'));
                        thanhtien = dongia * soluong;
                        hot.setDataAtRowProp(row, 'ThanhTien', thanhtien,'not');
                    }
                });
            }
            function contructExecl223() {
                var X = XLSX;
                function to_json(workbook) {
                    var result = {};
                    workbook.SheetNames.forEach(function (sheetName) {
                        var roa = X.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);
                        if (roa.length > 0) {
                            result[sheetName] = roa;
                        }
                    });
                    return result;
                }
                function fixdata(data) {
                    var o = "", l = 0, w = 10240;
                    for (; l < data.byteLength / w; ++l) o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w, l * w + w)));
                    o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w)));
                    return o;
                }
                $('#FileSupport').change(function (event) {
                    if(!$('#FileSupport').val()) {return;}
                    var fileValid = -1;
                    $('#WaitDialog').modal('show');
                    fileValid = endFile($('#FileSupport').val());
                    if (fileValid == 2) {
                        var files = event.target.files;
                        var f = files[0];
                        {
                            var reader = new FileReader();
                            var name = f.name;
                            reader.onload = function (e) {
                                var data = e.target.result;
                                var arr = fixdata(data);                            
                                wb = X.read(btoa(arr), { type: 'base64' });
                                var wb;
                                var output = to_json(wb);
                                if (output.Import !== null && output.Import !== '' && output.Import !== undefined) {
                                    dataPages = output.Import;

                                    var colname = ['Mã shop', 'Loại in ấn', 'Nội dung', 'Chất liệu', 'Kích thước ( Dài - Ngang) cm', 'Kích thước ( Rộng - Cao) cm', 'Diện tích (m2)', 'Đơn giá', 'Số lượng', 'Link tải file in ấn', 'Ghi chú'];
                                    var dataInvalid = [];
                                    var checkData = true, checkNumber = true;
                                    var colNotCheck = ['Ghi chú'];
                                    var colValidNumber = ['Kích thước ( Dài - Ngang) cm', 'Kích thước ( Rộng - Cao) cm', 'Diện tích (m2)', 'Đơn giá', 'Số lượng'];
                                    var messageError = '';
                                    $.each(dataPages, function (index, item) {
                                        $.each(colname, function (index1, item1) {
                                            if ((colNotCheck.indexOf(item1) < 0) && (item[item1] === '' || item[item1] === null || item[item1] === undefined || item[item1].length <= 0)) {
                                                messageError = 'Lỗi Import!!! Phải nhập đầy đủ thông tin trên lưới';
                                                return false;
                                            }
                                            if ((colValidNumber.indexOf(item1) >= 0) && (isNaN(item[item1]))) {
                                                messageError = 'Lỗi Import!!! Cột ' + colValidNumber[colValidNumber.indexOf(item1)] + 'phải nhập số';
                                                return false;
                                            }
                                        });
                                        if(messageError != '') return false;
                                    });
                                    if (messageError != '') {
                                        XFunction.RenderMessage('error', messageError);
                                        return;
                                    }

                                    dataHandsontable = [];
                                    $.each(dataPages, function(index, item){
                                        var MaShopB1 = item[colname[0]];
                                        var wahouseCode = $.grep(dataShop_223, function (item, index) {
                                            return item.WarehouseCodeB1 == MaShopB1;
                                        });
                                        var ShopCodeB1 = '',ShopName = '', txtShop = '',ShopCode='';
                                        if(wahouseCode != null && wahouseCode.length > 0){
                                            ShopCode = wahouseCode[0].WarehouseCode;
                                            ShopCodeB1 = wahouseCode[0].WarehouseCodeB1;
                                            ShopName = wahouseCode[0].WarehouseName;
                                            txtShop = wahouseCode[0].TextSearch;
                                        }
                                        if(!ShopName){
                                            XFunction.RenderMessage('error', 'Dòng '+(index+2)+' sai mã shop, vui lòng kiểm tra lại.');
                                            dataHandsontable = [{
                                                'ShopCode':''
                                                                , 'ShopCodeB1':''
                                                                , 'ShopName':''
                                                                , 'Shop':''
                                                                , 'LoaiInAn':''
                                                                , 'NoiDung': ''
                                                                , 'ChatLieu': ''
                                                                , 'Width':''
                                                                , 'Height':''
                                                                , 'SoLuong':1
                                                                , 'LinkTaiFileInAn':''
                                                                , 'GhiChu':''
                                                                , 'DienTich':''
                                                                , 'DonGia':''
                                                                , 'ThanhTien':''
                                            }];
                                            return false;
                                        }
                                        var arrlinkTaiFileInAn =[], convertlinkTaiFileInAn = [],
                                        linkTaiFileInAn = '';
                                        linkTaiFileInAn = item[colname[9]];
                                        arrlinkTaiFileInAn = linkTaiFileInAn.split(',');
                                        $.each(arrlinkTaiFileInAn, function(index, item){
                                            convertlinkTaiFileInAn.push(convertStringToLink($.trim(item)));
                                        });
                                        dataHandsontable.push(
                                        {
                                            'ShopCode':ShopCode
                                            , 'ShopCodeB1':ShopCodeB1
                                            , 'ShopName':ShopName
                                            , 'Shop':txtShop
                                            , 'LoaiInAn':item[colname[1]]
                                            , 'NoiDung': item[colname[2]]
                                            , 'ChatLieu': item[colname[3]]
                                            , 'Width':item[colname[4]]
                                            , 'Height':item[colname[5]]
                                            , 'DienTich':item[colname[6]]
                                            , 'DonGia':item[colname[7]]
                                            , 'SoLuong':item[colname[8]]
                                            , 'LinkTaiFileInAn': linkTaiFileInAn
                                            , 'LinkView': (convertlinkTaiFileInAn) ? convertlinkTaiFileInAn.join('<br>') : ''
                                            , 'GhiChu':item[colname[10]]                                        
                                            , 'ThanhTien': parseFloat(item[colname[7]]) * parseInt(item[colname[8]])
                                        });
                                    });
                                }
                                hot.loadData(dataHandsontable);
                            };
                            reader.readAsArrayBuffer(f);
                        }
                    }
                    else{
                        XFunction.RenderMessage('error', 'File import phải có định dạng đuôi xls và xlsx');
                    }
                    $('#FileSupport').val('');
                    $('#WaitDialog').modal('hide');
                });
            }    
            function checkDuplicateData(arrData){
                var result = "";
                var Dups = {};
                $.each(arrData, function (index, item){
                    if(item.Product && item.SoLuong){
                        var itemArr = (DefaultValueStringEmpty(item.ShopCode, 'string'))
                                    +'|'+(DefaultValueStringEmpty(item.LoaiInAn, 'string'))
                                    +'|'+(DefaultValueStringEmpty(item.NoiDung, 'string'))
                                    +'|'+(DefaultValueStringEmpty(item.ChatLieu, 'string'))
                                    +'|'+(DefaultValueStringEmpty(item.Width, 'number'))
                                    +'|'+(DefaultValueStringEmpty(item.Height, 'number'))
                                    +'|'+(DefaultValueStringEmpty(item.SoLuong, 'number'))
                                    +'|'+(DefaultValueStringEmpty(item.DienTich, 'number'))
                                    +'|'+(DefaultValueStringEmpty(item.DonGia, 'number'))
                                    +'|'+(DefaultValueStringEmpty(item.ThanhTien, 'number'))
                                    +'|'+(DefaultValueStringEmpty(item.LinkTaiFileInAn, 'string'));

                        Dups[itemArr] = Dups[itemArr] || [];
                        Dups[itemArr].push(index+1);
                    }
                });
                for(let name in Dups) {
                    if(Dups[name].length > 1)
                        result = Dups[name];
                }
                if(result.length > 0){
                    result = 'Dữ liệu dòng '+result+' bị trùng. Vui lòng kiểm tra lại!'
                }
                else result = '';

                return result;
            }
                
            $.each(data, function (indexShop, itemShop) {
                dataShop_223.push({
                    'WarehouseCode': itemShop.WarehouseCode,
                    'WarehouseCodeB1': itemShop.WarehouseCodeB1,
                    'WarehouseName': itemShop.WarehouseName,
                    'TextSearch': itemShop.WarehouseCodeB1 + ' - ' + itemShop.WarehouseName
                });
                arrNameShop_223.push(itemShop.WarehouseCodeB1 + ' - ' + itemShop.WarehouseName);
            });

            $('#sum-total').show();
            contructExecl223();

            dataHandsontable = [{'ShopCode':''
                                    , 'ShopCodeB1':''
                                    , 'ShopName':''
                                    , 'Shop':''
                                    , 'LoaiInAn':''
                                    , 'NoiDung': ''
                                    , 'ChatLieu': ''
                                    , 'Width':''
                                    , 'Height':''
                                    , 'SoLuong':1
                                    , 'LinkTaiFileInAn':''
                                    , 'LinkView': ''
                                    , 'GhiChu':''
                                    , 'DienTich':''
                                    , 'DonGia':''
                                    , 'ThanhTien':''
            }];

            var setting = function () {
                return {
                    data: dataHandsontable,
                    minSpareRows: 2,
                    allowInsertColumn: false,
                    allowRemoveColumn: false,
                    autoColumnSize: true,
                    autoWrapCol: true,
                    columnSorting: false,
                    //colWidths: 'undefined',
                    currentColClassName: 'currentCol',
                    fixedColumnsLeft: 0,
                    manualColumnMove: false,
                    manualColumnResize: true,
                    viewportColumnRenderingOffset: 8,
                    sortIndicator: true,
                    //================================Rows=======
                    allowInsertRow: true,
                    allowRemoveRow: true,
                    autoRowSize: true,
                    autoWrapRow: true,
                    copyRowsLimit: 1000,
                    currentRowClassName: 'currentRow',
                    fixedRowsTop: 0,
                    manualRowMove: false,
                    manualRowResize: true,
                    rowHeaders: true,
                    minRows: 1,
                    allowInvalid: false,
                    stretchH: 'all',
                    commentedCellClassName: 'htCommentCell',
                    comments: true,
                    contextMenu: true,
                    copyable: true,
                    customBorders: false,
                    debug: false,
                    disableVisualSelection: true,
                    enterBeginsEditingBoolean: true,
                    fillHandle: true,
                    outsideClickDeselects: true,
                    fragmentSelection: false,
                    groups: false,
                    invalidCellClassName: 'htInvalid',
                    mergeCells: false,
                    multiSelect: true,
                    //noWordWrapClassName: 'htNoWrap',
                    placeholder: false,
                    placeholderCellClassName: 'htPlaceholder',
                    readOnlyCellClassName: 'htDimmed',
                    search: false,
                    trimWhitespace: true,
                    undo: true,
                    formulas: true,
                    wordWrap: true,
                    colHeaders: [
                            'Tên shop',
                            'Loại in ấn',
                            'Nội dung',
                            'Chất liệu',
                            'Kích thước(Dài-Ngang)cm',
                            'Kích thước(Rộng-Cao)cm',
                            'Diện tích (m2)',
                            'Đơn giá',                            
                            'Số lượng',
                            'Thành tiền',
                            'Link tải file in ấn',
                            'Xem Link',
                            'Ghi chú'
                    ],
                    columns: [
                    { data: "Shop", type: 'autocomplete', source: arrNameShop_223, strict: false, width: 150, readOnly:false},
                    { data: "LoaiInAn", type: 'text', width: 100, readOnly: false},
                    { data: "NoiDung", type: 'text', width: 100, readOnly: false},
                    { data: "ChatLieu", type: 'text', width: 100, readOnly: false},
                    { data: "Width", format: '0,0', type: 'numeric', width: 160, readOnly: false},
                    { data: "Height", format: '0,0', type: 'numeric', width: 160, readOnly: false},
                    { data: "DienTich", format: '0,0', type: 'numeric', width: 100, readOnly: false},
                    { data: "DonGia", format: '0,0', type: 'numeric', width: 100, readOnly: false},                    
                    { data: "SoLuong", format: '0,0', type: 'numeric', width: 80, readOnly: false},
                    { data: "ThanhTien", format: '0,0', type: 'numeric', width: 100, readOnly: true},
                    { data: "LinkTaiFileInAn", type: 'text', width: 160, readOnly: false, renderer: safeHtmlRenderer},
                    { data: "LinkView", type: 'text', readOnly: false, renderer: safeHtmlRenderer},
                    { data: "GhiChu", type: 'text', width: 100, readOnly: false},
                    ],
                    afterChange: onChange,
                };
            };
            hot = new Handsontable(container, setting());
            hot.render();        
        
            $btnSend.on('click', function () {
                var myData = $.grep(hot.getSettings().data, function (item, index) {
                    return (!jQuery.isEmptyObject(item)) && (item.ShopCode);
                });

                // Check dữ liệu
                var l_UniqueData = [], l_DuplicateData = [];
                var error_Msg = '';
                error_Msg = checkDuplicateData(myData);
            
                if(!error_Msg){
                    myData = $.grep(hot.getSettings().data, function (item, index) {
                        return (!jQuery.isEmptyObject(item));
                    });
                    if (myData.length == 0) {
                        error_Msg = 'Dữ liệu chưa đầy đủ! Vui lòng nhập đầy đủ dữ liệu !';
                    }
                    if(!error_Msg){
                        $.each(myData, function (index1, item1) {
                            if(!error_Msg)
                            {
                                if(item1.Shop){
                                    if(!DefaultValueStringEmpty(item1.LoaiInAn, 'string')){
                                        error_Msg = 'Dòng ' + (index1+1) + ' chưa nhập in ấn';
                                        return false;
                                    }
                                    else if(!DefaultValueStringEmpty(item1.NoiDung, 'string')){
                                        error_Msg = 'Dòng ' + (index1+1) + ' chưa nhập nội dung';
                                        return false;
                                    }
                                    else if(!DefaultValueStringEmpty(item1.ChatLieu, 'string')){
                                        error_Msg = 'Dòng ' + (index1+1) + ' chưa nhập chất liệu';
                                        return false;
                                    }
                                    else if(DefaultValueStringEmpty(item1.Width, 'number') <= 0){
                                        error_Msg = 'Dòng ' + (index1+1) + ' chưa nhập chiều dài';
                                        return false;
                                    }
                                    else if(DefaultValueStringEmpty(item1.Height, 'number') <= 0){
                                        error_Msg = 'Dòng ' + (index1+1) + ' chưa nhập chiều rộng';
                                        return false;
                                    }
                                    else if(DefaultValueStringEmpty(item1.SoLuong, 'number') <= 0){
                                        error_Msg = 'Dòng ' + (index1+1) + ' chưa nhập số lượng';
                                        return false;
                                    }
                                    else if(DefaultValueStringEmpty(item1.DienTich, 'number') <= 0){
                                        error_Msg = 'Dòng ' + (index1+1) + ' chưa nhập diện tích';
                                        return false;
                                    }
                                    else if(DefaultValueStringEmpty(item1.DonGia, 'number') <= 0){
                                        error_Msg = 'Dòng ' + (index1+1) + ' chưa nhập đơn giá';
                                        return false;
                                    }
                                    else if(DefaultValueStringEmpty(item1.ThanhTien, 'number') <= 0){
                                        error_Msg = 'Dòng ' + (index1+1) + ' chưa nhập thành tiền';
                                        return false;
                                    }

                                    if(error_Msg) return false;
                                }
                            }
                        });
                    }
                }

                if(error_Msg) {
                    XFunction.RenderMessage('error', error_Msg);
                    return;
                }
                myData = $.grep(hot.getSettings().data, function (item, index) {
                    return (!jQuery.isEmptyObject(item) && (item.Shop));
                });
            
                // Check dữ liệu                       
                $('#Details').val(JSON.stringify(myData));
                $('#DetailsLimited').val(JSON.stringify(''));
                $('#Description').val(catagoryInfo.Description);
                $('#TitleRequest').val($('#Title').val());
                $('#typeId').val(catagoryInfo.Id);
                $('#WaitDialog').modal('show');
                var form = $("form#form-create");
                form.attr("action", "/Requests/Create");
                form.submit();            
            });
        });
        $('#WaitDialog').modal('hide');
    };
    //▲ Add - TuanNA89 - 04/12/2019 - CallLog in ấn POSM - Loại 223
    /*__________________*/
    function bindDumpButton() {
        if (typeof Handsontable === "undefined") {
            return;
        }
        Handsontable.Dom.addEvent(document.body, 'click', function (e) {

            var element = e.target || e.srcElement;

            if (element.nodeName == "BUTTON" && element.name == 'dump') {
                var name = element.getAttribute('data-dump');
                var instance = element.getAttribute('data-instance');
                var hot = window[instance];
            }
        });
    }
    bindDumpButton();

    // Add - TuanNA89 - 01/09/2020 - Thêm sự kiện quay lại trang chủ khi tắt catagoriesModal
    $(document).on('keydown keyup', function (e) {
        if ($('#catagoriesModal').is(':visible')) {
            var key = e.which;
            console.log(key);
            if (key == 27) { //This is Escapse
                window.location.href = "/";
            }
        }
    });
});
