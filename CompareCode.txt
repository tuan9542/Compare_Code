SET QUOTED_IDENTIFIER ON
SET ANSI_NULLS ON
GO
/*
==================================================
Author			:	VietMXH
Create date		:	05/07/2018 - 02/10/2020 16:16
Description		:	CallLog Hoàn tiền thanh toán dư cho KH  - Lấy Pending - Sinh XLVP
Note			:	153:Duyệt hoàn tiền thanh toán dư cho KH
				:	[10.96.254.143].FRTInsideV2
				:	981:BETA ; 571:GOLIVE
==================================================
Test:
EXEC sp__RefundPayment__GetPending__InsertViolationVoteRecord
*/
ALTER PROCEDURE dbo.sp__RefundPayment__GetPending__InsertViolationVoteRecord
AS
BEGIN
    BEGIN TRY
        --	===Lấy Ngày quét===
        DECLARE @p__NgayQuet DATE = GETDATE();

        ----SET @p__NgayQuet = '2018-07-28';	--	VietMXH - Test
        PRINT CONCAT(N'@p__NgayQuet: ', @p__NgayQuet);

        --	===Check T7/CN?===
        IF ( DATEPART(DW, @p__NgayQuet) IN (7, 1))
        BEGIN
            PRINT CONCAT(N'Ngày quét "', CONVERT(NVARCHAR(50), @p__NgayQuet, 121), N'" là T7/CN nên không quét!');
            RETURN;
        END;

        --	===Check Holiday?===
        DECLARE @p__Holiday__ID INT;
        SELECT TOP 1
               @p__Holiday__ID = D.ID
        FROM
            dbo.Holidays AS D ( NOLOCK )
        WHERE
            D.BO = 1
            AND @p__NgayQuet BETWEEN CONVERT(DATE, D.FromDay) AND CONVERT(DATE, D.ToDay);

        IF ( @p__Holiday__ID > 0 )
        BEGIN
            PRINT CONCAT(N'Ngày quét "', CONVERT(NVARCHAR(50), @p__NgayQuet, 121), N'" là Holiday nên không quét!');
            RETURN;
        END;

        DECLARE
            @p__NgayTao__From           DATE = dbo.fn_Get_DATE_By_Days(@p__NgayQuet, -7, 1, 1, 1)
          , @p__NgayTao__To             DATE = dbo.fn_Get_DATE_By_Days(@p__NgayQuet, -3, 1, 1, 1)
          , @p__Count__XLVP__PushInside INT  = 0;

        PRINT ( N'@p__NgayTao__From: ' + ISNULL(CONVERT(NVARCHAR(50), @p__NgayTao__From, 121), 'NULL'));
        PRINT ( N'@p__NgayTao__To: ' + ISNULL(CONVERT(NVARCHAR(50), @p__NgayTao__To, 121), 'NULL'));

        --	===Lấy Req===
        CREATE TABLE #Tmp__Req ( STT INT IDENTITY(1, 1), ReqId INT, TimeCre DATETIME );
        INSERT INTO #Tmp__Req ( ReqId, TimeCre )
        SELECT
            R.Id AS ReqId
          , R.TimeCreate AS TimeCre
        FROM
            dbo.Requests AS R ( NOLOCK )
        WHERE
            CONVERT(DATE, R.TimeCreate) BETWEEN @p__NgayTao__From AND @p__NgayTao__To
            AND --	153:Duyệt hoàn tiền thanh toán dư cho KH
            R.TypeId = 153
            AND --	Chưa 4:Hoàn tất/5:Hủy
            R.Status < 4;

        IF ( EXISTS ( SELECT 1 FROM #Tmp__Req ))
        BEGIN
            --	===Lấy Ass===
            SELECT
                A.RequestId AS ReqId
              , A.EmployeeCode AS NVVP
            INTO
                #Tmp__Ass
            FROM
                dbo.Assigners AS A ( NOLOCK )
            WHERE
                A.RequestId IN ( SELECT R.ReqId FROM #Tmp__Req AS R )
                AND --	Bước 1
                A.StepNo = 1
                AND --	1:Assigner
                A.Type = 1
                AND --	1:Active
                A.Status = 1
            --
            ;

            DECLARE
                @p__NgayQuet__Month INT = MONTH(@p__NgayQuet)
              , @p__NgayQuet__Year  INT = YEAR(@p__NgayQuet);

            --	===Lấy Info XLVP===
            CREATE TABLE #Tmp__XLVP
            (
                ReqId INT
              , TimeCre DATE
              , SoTienCallLog NUMERIC(19, 6)
              , NVVP NVARCHAR(50)
              , HeSoPhat FLOAT
              , Count_NVVP INT
              , Remark NVARCHAR(500)
              , SoTienBoiThuong NUMERIC(19, 6)
              , MonthRecord INT
              , YearRecord INT
            );
            INSERT INTO #Tmp__XLVP
            (
                ReqId
              , TimeCre
              , SoTienCallLog
              , NVVP
              , HeSoPhat
              , Count_NVVP
              , Remark
              , SoTienBoiThuong
              , MonthRecord
              , YearRecord
            )
            SELECT
                R.ReqId AS ReqId -- int
              , R.TimeCre AS TimeCre -- DATE
              , 100000 AS SoTienCallLog -- numeric -- * Mặc định 100K
              , A.NVVP AS NVVP -- nvarchar(50)
              , 1 AS HeSoPhat -- float
              , NULL AS Count_NVVP -- int
              , N'Trễ hạn ' + ISNULL(CONVERT(NVARCHAR(50), DATEDIFF(DAY, R.TimeCre, @p__NgayQuet)), '') + N' ngày xử lý CallLog outside: ' + ISNULL(CONVERT(NVARCHAR(50), R.ReqId), '') + N' thanh toán hoàn tiền dư online' AS Remark -- nvarchar(500)
              , NULL AS SoTienBoiThuong -- numeric
              , @p__NgayQuet__Month AS MonthRecord -- int
              , @p__NgayQuet__Year AS YearRecord -- int
            FROM
                #Tmp__Req AS R
                INNER JOIN #Tmp__Ass AS A ON R.ReqId = A.ReqId;

            --	===Lấy SL NVVP từng Req===
            SELECT
                X.ReqId
              , COUNT(1) AS Count_NVVP
            INTO
                #Tmp__XLVP__Count_NVVP
            FROM
                #Tmp__XLVP AS X
            GROUP BY
                X.ReqId;

            --	===Update SL NVVP từng Req===
            UPDATE
                X
            SET
                X.Count_NVVP = C.Count_NVVP
            FROM
                #Tmp__XLVP AS X
                INNER JOIN #Tmp__XLVP__Count_NVVP AS C ON X.ReqId = C.ReqId;

            DROP TABLE #Tmp__XLVP__Count_NVVP;

            --	===Update Số tiền===
            UPDATE
                #Tmp__XLVP
            SET
                SoTienBoiThuong = CASE
                                      WHEN ( Count_NVVP > 0 ) THEN CEILING(( SoTienCallLog * 1.0 / Count_NVVP ) / 100) * 100
                                      ELSE 0
                                  END;

            --	===Lấy Data XLVP dùng Push Inside===
            CREATE TABLE #Tmp__XLVP__PushInside
            (
                STT INT IDENTITY(1, 1)
              , ReqId INT
              , TimeCre DATE
              , SoTienCallLog NUMERIC(19, 6)
              , NVVP NVARCHAR(50)
              , HeSoPhat FLOAT
              , Count_NVVP INT
              , Remark NVARCHAR(500)
              , SoTienBoiThuong NUMERIC(19, 6)
              , MonthRecord INT
              , YearRecord INT
              , ViolationContentID INT
              , NguoiGhiNhan NVARCHAR(50)
            );
            INSERT INTO #Tmp__XLVP__PushInside
            (
                ReqId
              , TimeCre
              , SoTienCallLog
              , NVVP
              , HeSoPhat
              , Count_NVVP
              , Remark
              , SoTienBoiThuong
              , MonthRecord
              , YearRecord
              , ViolationContentID
              , NguoiGhiNhan
            )
            SELECT
                X.ReqId AS ReqId -- int
              , X.TimeCre AS TimeCre -- date
              , X.SoTienCallLog AS SoTienCallLog -- numeric
              , X.NVVP AS NVVP -- nvarchar(50)
              , X.HeSoPhat AS HeSoPhat -- float
              , X.Count_NVVP AS Count_NVVP -- int
              , X.Remark AS Remark -- nvarchar(500)
              , X.SoTienBoiThuong AS SoTienBoiThuong -- numeric
              , X.MonthRecord AS MonthRecord -- int
              , X.YearRecord AS YearRecord -- int
              , 981 AS ViolationContentID -- Mã Vi phạm "Không thực hiện đúng hạn yêu cầu hoàn  tiền/chuyển tiền thanh online" - 981:BETA ; 571:GOLIVE
              , N'33105' AS NguoiGhiNhan -- 02/10/2020 - Hanhbt6 yc
            FROM
                #Tmp__XLVP AS X
            WHERE
                X.SoTienBoiThuong > 0;

            SET @p__Count__XLVP__PushInside = ISNULL(( SELECT COUNT(1)FROM #Tmp__XLVP__PushInside ), 0);

            IF ( @p__Count__XLVP__PushInside > 0 )
            BEGIN
                DECLARE
                    @p__Loop__STT     INT = 1
                  , @p__Loop__STT_MAX INT = ISNULL(( SELECT MAX(P.STT)FROM #Tmp__XLVP__PushInside AS P ), 0);
                WHILE ( @p__Loop__STT <= @p__Loop__STT_MAX )
                BEGIN
                    DECLARE
                        @p__Loop__CallLogID          INT           = 0
                      , @p__Loop__MonthRecord        INT           = 0
                      , @p__Loop__YearRecord         INT           = 0
                      , @p__Loop__EmpViolation       NVARCHAR(50)  = N''
                      , @p__Loop__ViolationContentID INT           = 0
                      , @p__Loop__Remark             NVARCHAR(500) = N''
                      , @p__Loop__HeSoPhat           FLOAT         = 0
                      , @p__Loop__SoTienBoiThuong    FLOAT         = 0
                      , @p__Loop__NguoiGhiNhan       NVARCHAR(50)  = NULL
                    --
                    ;

                    SELECT TOP 1
                           @p__Loop__CallLogID = P.ReqId
                         , @p__Loop__MonthRecord = P.MonthRecord
                         , @p__Loop__YearRecord = P.YearRecord
                         , @p__Loop__EmpViolation = P.NVVP
                         , @p__Loop__ViolationContentID = P.ViolationContentID
                         , @p__Loop__Remark = P.Remark
                         , @p__Loop__HeSoPhat = P.HeSoPhat
                         , @p__Loop__SoTienBoiThuong = P.SoTienBoiThuong
                         , @p__Loop__NguoiGhiNhan = P.NguoiGhiNhan
                    FROM
                        #Tmp__XLVP__PushInside AS P
                    WHERE
                        P.STT = @p__Loop__STT;

                    SET @p__Loop__CallLogID = ISNULL(@p__Loop__CallLogID, 0);
                    SET @p__Loop__MonthRecord = ISNULL(@p__Loop__MonthRecord, 0);
                    SET @p__Loop__YearRecord = ISNULL(@p__Loop__YearRecord, 0);
                    SET @p__Loop__EmpViolation = ISNULL(@p__Loop__EmpViolation, '');
                    SET @p__Loop__ViolationContentID = ISNULL(@p__Loop__ViolationContentID, 0);
                    SET @p__Loop__Remark = ISNULL(@p__Loop__Remark, '');
                    SET @p__Loop__HeSoPhat = ISNULL(@p__Loop__HeSoPhat, 0);
                    SET @p__Loop__SoTienBoiThuong = ISNULL(@p__Loop__SoTienBoiThuong, 0);

                    IF ( @p__Loop__CallLogID > 0 )
                    BEGIN
                        BEGIN TRY
                            DECLARE @SoPhieu VARCHAR(40);
                            EXEC SV_BETA_FRT_INSIDE.FRTInsideV2.dbo.CallLog_InsertViolationVoteRecord
                                @MonthRecord = @p__Loop__MonthRecord -- int
                              , @YearRecord = @p__Loop__YearRecord -- int
                              , @EmpViolation = @p__Loop__EmpViolation -- varchar(40)
                              , @ViolationContentID = @p__Loop__ViolationContentID -- int
                              , @CallLogID = @p__Loop__CallLogID -- bigint
                              , @Remark = @p__Loop__Remark -- nvarchar(500)
                              , @HeSoPhat = @p__Loop__HeSoPhat -- float
                              , @SoTienPhatThem = 0.0 -- float
                              , @SoTienBoiThuong = @p__Loop__SoTienBoiThuong -- float
                              , @NguoiGhiNhan = @p__Loop__NguoiGhiNhan -- varchar(50)
                              , @HDQuyDinh = N'' -- nvarchar(1000)
                              , @HDTaiLieu = N'' -- nvarchar(1000)
                              , @SoPhieu = @SoPhieu OUTPUT; -- varchar(40)

                            --	===Ghi Log===
                            INSERT INTO dbo.Log_CallLog_InsertViolationVoteRecord
                            (
                                CreateDateTime
                              , StoreName
                              , TypeId
                              , CallLogID
                              , EmpViolation
                              , ViolationContentID
                              , HeSoPhat
                              , Remark
                              , SoTienPhatThem
                              , SoTienBoiThuong
                              , MonthRecord
                              , YearRecord
                              , NguoiGhiNhan
                              , OUTPUT_SoPhieu
                            )
                            SELECT
                                GETDATE() -- CreateDateTime - datetime
                              , N'sp__RefundPayment__GetPending__InsertViolationVoteRecord' -- StoreName - nvarchar(50)
                              , 153 -- TypeId - int -- * Loại CallLog: 153:Duyệt hoàn tiền thanh toán dư cho KH
                              , @p__Loop__CallLogID -- CallLogID - int
                              , @p__Loop__EmpViolation -- EmpViolation - nvarchar(50)
                              , @p__Loop__ViolationContentID -- ViolationContentID - int
                              , @p__Loop__HeSoPhat -- HeSoPhat - float
                              , @p__Loop__Remark -- Remark - nvarchar(500)
                              , 0.0 -- SoTienPhatThem - float
                              , @p__Loop__SoTienBoiThuong -- SoTienBoiThuong - float
                              , @p__Loop__MonthRecord -- MonthRecord - int
                              , @p__Loop__YearRecord -- YearRecord - int
                              , @p__Loop__NguoiGhiNhan
                              , @SoPhieu;

                        END TRY
                        BEGIN CATCH
                            DECLARE @ErrorMessage_FRTInsideV2 NVARCHAR(MAX) = N'';
                            SET @ErrorMessage_FRTInsideV2 = N'Lỗi: [FRTInsideV2.dbo.CallLog_InsertViolationVoteRecord]';
                            SET @ErrorMessage_FRTInsideV2 += N' - ERROR_MESSAGE: ' + ERROR_MESSAGE() + N' - ERROR_LINE: ' + CONVERT(NVARCHAR, ERROR_LINE());

                            --	===Ghi Log===
                            INSERT INTO dbo.Logs ( Title, Error, Status, TimeCreate )
                            VALUES (
                                       N'sp__RefundPayment__GetPending__InsertViolationVoteRecord' -- Title - nvarchar(300)
                                     , @ErrorMessage_FRTInsideV2 -- Error - nvarchar(max)
                                     , 1 -- Status - tinyint
                                     , GETDATE() -- TimeCreate - datetime
                                   );
                        END CATCH;
                    END;

                    SET @p__Loop__STT += 1;
                END;
            END;

            DROP TABLE #Tmp__XLVP__PushInside;

            DROP TABLE #Tmp__XLVP;

            DROP TABLE #Tmp__Ass;
        END;

        PRINT ( N'@p__Count__XLVP__PushInside: ' + ISNULL(CONVERT(NVARCHAR(50), @p__Count__XLVP__PushInside), 'NULL'));

        DROP TABLE #Tmp__Req;
    END TRY
    BEGIN CATCH
        DECLARE @ErrorMessage NVARCHAR(MAX) = N'';
        SET @ErrorMessage = N'Lỗi: [sp__RefundPayment__GetPending__InsertViolationVoteRecord]';
        SET @ErrorMessage += N' - ERROR_MESSAGE: ' + ERROR_MESSAGE() + N' - ERROR_LINE: ' + CONVERT(NVARCHAR, ERROR_LINE());

        --	===Ghi Log===
        INSERT INTO dbo.Logs ( Title, Error, Status, TimeCreate )
        VALUES (
                   N'sp__RefundPayment__GetPending__InsertViolationVoteRecord' -- Title - nvarchar(300)
                 , @ErrorMessage -- Error - nvarchar(max)
                 , 1 -- Status - tinyint
                 , GETDATE() -- TimeCreate - datetime
               );
    END CATCH;
END;

----SELECT * FROM dbo.Logs(NOLOCK) WHERE Title=N'sp__RefundPayment__GetPending__InsertViolationVoteRecord' AND CHARINDEX(N'', Error)>0 ORDER BY Id DESC
----SELECT * FROM dbo.Log_CallLog_InsertViolationVoteRecord(NOLOCK) ORDER BY ID DESC
GO

