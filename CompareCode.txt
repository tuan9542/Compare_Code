
@{
    ViewBag.Title = "Index";
    string typeId = TempData.GetData<string>("TypeId");
    string step = TempData.GetData<string>("Step");
}


<div class="row">
    <div class="col-md-12">
        <form action="@Url.Action("Create","Permission")" method="post" autocomplete="off" id="frm-permission">
            <div class="p-2 mb-3 border position-relative box-shadow-bottom" style="background:#FFF">
                <h5>Phân quyền</h5>
                <hr class="mt-2 mb-0" />
                <div class="form-row mb-1">
                    <div class="form-group col-md-6 mb-0">
                        <label for="CalllogType" class="mb-0 col-form-label-sm">Loại yêu cầu </label>
                        <div class="dropdown">
                            <button onclick="$('.dropdown-calllog-type').toggleClass('show')"
                                    class="form-control form-control-sm text-left"
                                    type="button" id="btn-calllog-type" aria-haspopup="true" aria-expanded="false">
                                Chọn loại yêu cầu
                                <span class="dropdown-toggle float-right"></span>
                            </button>
                            <div class="dropdown-menu dropdown-calllog-type w-100 p-2" style="overflow:scroll;max-height:400px;" aria-labelledby="btn-calllog-type">

                            </div>
                        </div>
                        <input type="text" hidden id="in-calllog-type" required data-error-valueMissing="Chọn loại yêu cầu" name="TypeId"
                               class="form-control form-control-sm bg-transparent f-validate" value="">
                    </div>
                    <div class="form-group col-md-6 mb-0">
                        <label class="mb-0 col-form-label-sm">Phân cấp tổ chức</label>
                        <div class="dropdown">
                            <button onclick="$('.dropdown-org-type').toggleClass('show')"
                                    class="form-control form-control-sm text-left"
                                    type="button" id="btn-org-type" aria-haspopup="true" aria-expanded="false">
                                Tất cả phân cấp
                                <span class="dropdown-toggle float-right"></span>
                            </button>
                            <div class="dropdown-menu dropdown-org-type w-100 p-2" style="overflow:scroll;max-height:400px;" aria-labelledby="btn-calllog-type">

                            </div>
                        </div>
                        <input type="hidden" class="form-control form-control-sm bg-transparent rounded-0" id="in-org-type">
                    </div>
                </div>
                <div class="form-row mb-1">
                    <div class="form-group col-md-6 mb-0">
                        <label class="mb-0 col-form-label-sm">Chủ đề </label>
                        <input type="text" name="Subject" placeholder="Chủ đề"
                               class="form-control form-control-sm bg-transparent">
                    </div>
                    <div class="form-group col-md-6 mb-0">
                        <label for="FinishDate" class="mb-0 col-form-label-sm">Chức danh</label>
                        <select name="Jobtitles" required data-error-valueMissing="Chọn chức danh phân quyền"
                                data-none-selected-text="Chọn chức danh"
                                data-style="bg-transparent border" class="form-control form-control-sm f-validate selectpicker" multiple
                                data-multiple-separator=" | " id="sl-jobtitle" style="height:31px" data-live-search="true" data-size="8"
                                data-selected-text-format="count > 3" data-actions-box="true"></select>
                    </div>
                </div>
                <div class="form-row mb-1">
                    <div class="form-group col-md-4 mb-0">
                        <label for="CalllogType" class="mb-0 col-form-label-sm">Bước </label>
                        <select id="sl-stepno" name="Step" required data-error-valueMissing="Chọn bước của yêu cầu"
                                class="form-control form-control-sm f-validate"></select>
                    </div>
                    <div class="form-group col-md-2 mb-0 text-md-center">
                        <label class="mb-0 col-form-label-sm">Phân công</label>
                        <div class="position-relative form-control border-0 p-0">
                            <label class="position-relative d-inline-block">
                                <input type="checkbox" name="Follow" hidden class="custom-checkbox" data-value="true" value="true">
                                <span class="custom-checkbox-icon form-control form-control-sm"></span>
                            </label>
                        </div>
                    </div>

                    <div class="form-group col-md-6 mb-0">
                        <label class="mb-0 col-form-label-sm">Loại người dùng </label>
                        <select class="form-control form-control-sm f-validate" name="PermType"
                                required data-error-valueMissing="Chọn loại người dùng">
                            <option value="0">Thông thường</option>
                            <option value="1">Chỉ định</option>
                            <option value="2">Chỉ định đặc biệt</option>
                        </select>
                    </div>


                </div>
            </div>
            <div class="text-center mt-1">
                <button id="btn-search" class="btn border-0 btn-success bg-success-custom box-shadow mr-2" type="button"
                        onclick="permission.getPermissionByStepAndType();">
                    <i class="fas fa-search"></i>
                    Tìm kiếm
                </button>

                <button class="btn border-0 btn-success bg-success-custom box-shadow mr-2" type="button"
                        onclick="formObj.fncCheckValidity(this.form, false) ? this.form.submit() : ''">
                    <i class="far fa-save"></i>
                    Tạo mới
                </button>
                <button class="btn border-0 btn-success bg-success-custom box-shadow mr-2" type="button"
                        onclick="window.location.reload()">
                    <i class="fas fa-sync"></i>
                    Refesh
                </button>
                <button class="btn border-0 btn-success bg-success-custom box-shadow mr-2" type="button"
                        onclick="permission.exportPermission()">
                    <i class="fas fa-file-export"></i>
                    Xuất Excel
                </button>
                <button class="btn border-0 btn-success bg-success-custom box-shadow" type="button"
                        onclick="permission.comfirmDelete();"
                        data-toggle="modal" data-target="#modal-confirm-delete">
                    <i class="far fa-trash-alt"></i>
                    Xóa phân quyền
                </button>
            </div>
        </form>
        
        <table id="table-permission" class="table table-bordered table-sm mt-3 font-weight-normal" style="background:#FFF">
            <thead>
                <tr>
                    <th class="">STT</th>
                    <th class="">Nhóm y/c</th>
                    <th class="">Loại y/c</th>
                    <th class="">Chủ đề</th>
                    <th class="">Bước</th>
                    <th class="">Chức danh</th>
                    <th class="">Theo phân công</th>
                    <th class="">Loại</th>
                    <th class="">
                        <input onchange="$(permission.elDeleteChecked).prop('checked', $(this).prop('checked'))" autocomplete="off" type="checkbox" id="delete-checked-all" />
                    </th>
                </tr>
            </thead>
            <tbody>
                
            </tbody>
        </table>
    </div>
</div>
<div id="modal-confirm-delete" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Xác nhận xóa phân quyền</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p id="modal-body-count"></p>
            </div>
            <div class="modal-footer">
                <button type="button" onclick="permission.deletePermission();"
                        id="btn-confirm-delete" class="btn btn-primary">Xác nhận</button>
                <button type="button"  class="btn btn-secondary" data-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>


<script>
    var permission = {
        elBtnCllType: "#btn-calllog-type",
        elInCllType:"#in-calllog-type",
        elDropCllType: ".dropdown-calllog-type",
        treeCllType: new jsTree(),
        elBtnOrgType: "#btn-org-type",
        elInOrgType: "#in-org-type",
        elDropOrgType: ".dropdown-org-type",
        treeOrgType: new jsTree(),
        elSlJobTitle: "#sl-jobtitle",
        elSlStepNo: "#sl-stepno",
        elTblPermisssion: "#table-permission",
        elBtnSearch: "#btn-search",
        elDeleteCheckedAll: "#delete-checked-all",
        elDeleteChecked: ".delete-checked",
        elBtnConfimDel: "#btn-confirm-delete",
        elModalCountChecked: "#modal-body-count",
        elFrmPerm:"#frm-permission",
        numDelete: 0,
        jsTreeCheckbox: new jsTreeCheckbox(),
        init: function () {
            var cllTypeData = jsData.category.categories().map(t => { return { "ParentId": t.ParentId, "Label": t.Description, "Id": t.Id } });
            $(permission.elDropCllType).append(permission.treeCllType.treeChosen(cllTypeData, "0", null, "permission.clickCllType"));
            ajaxObj.jsonPost("@Url.Action("GetOrganization", "Permission")", {}, data => {
                if (data.error == 0) {
                    $(permission.elDropOrgType).append(permission.treeOrgType.treeChosen(data.html, "0", null, "permission.clickOrgType"));
                }
                else {
                    messObj.fncCreate("Có lỗi xay ra khi lấy danh sách tổ chức", messObj.types.warning);
                }
            })

            $(document).click(evt => {
                var target = $(evt.target);
                if (target.closest('.dropdown-org-type').length == 0 && target.get(0).id != 'btn-org-type') {
                    $(".dropdown-org-type").removeClass('show');
                }
                if(target.closest('.dropdown-calllog-type').length == 0 && target.get(0).id != 'btn-calllog-type') {
                    $(".dropdown-calllog-type").removeClass('show');
                }
            });

            permission.getJobTitleByOffice('');
            @{ 
                if(!string.IsNullOrEmpty(typeId) && !string.IsNullOrEmpty(step))
                {
                    @:permission.getPermissionByStepAndType('@(typeId)','@(step)');
                }
            }
        },
        clickCllType: function (el) {
            var id = $(el).data("id");
            $(permission.elBtnCllType).text($(el).text());
            $(permission.elInCllType).val(id);
            $(permission.elDropCllType).toggleClass('show');
            var numStep = jsData.category.fncFindCategory(id).StepNo || 0;
            permission.createStep(numStep);
        },
        createStep: function (numStep) {
            numStep = numStep || 0;
            var html = "";
            if (!isNaN(numStep)) {
                numStep = parseInt(numStep);
                var idx;
                for (idx = 0; idx <= numStep ; idx++) {
                    html += "<option value=\"" + idx + "\">" + idx + "</option>";
                }
            }
            $(permission.elSlStepNo).html(html);
        },
        clickOrgType: function (el) {
            var id = $(el).data("id") || "";
            $(permission.elBtnOrgType).text($(el).text());
            $(permission.elInOrgType).val(id);
            $(permission.elDropOrgType).toggleClass('show');
            permission.getJobTitleByOffice(id);
        },
        getJobTitleByOffice: function (officeCode) {
            $(permission.elBtnOrgType).attr("disabled", "disabled");
            ajaxObj.jsonPost("@Url.Action("GetJobTitleByOffice", "Permission")", { officeCode: officeCode}, data => {
                if (data.error == 0) {
                    if (data.html == "") {
                        data.html = "<option disabled>Không có dữ liệu</option>";
                    }
                    $(permission.elSlJobTitle).empty();
                    var clone = $(permission.elSlJobTitle).clone();
                    $(permission.elSlJobTitle).selectpicker("destroy");
                    $(permission.elSlJobTitle).replaceWith(clone);
                    $(permission.elSlJobTitle).html(data.html);
                    $(permission.elSlJobTitle).selectpicker("refesh");
                    $(permission.elBtnOrgType).removeAttr("disabled");
                }
                else {
                    messObj.fncCreate("Có lỗi xay ra khi lấy danh sách chức danh", messObj.types.warning);
                }
            })
        },
        getPermissionByStepAndType: function (typeId, stepNo) {
            typeId = typeId || $(permission.elInCllType).val() || "";
            stepNo = stepNo || $(permission.elSlStepNo).val() || "";
            if (typeId == "") {
                messObj.fncCreate("Chọn loại yêu cầu", messObj.types.warning);
            }
            if (stepNo == "") {
                messObj.fncCreate("Chọn bước của yêu cầu", messObj.types.warning);
            }
            if (typeId != "" & stepNo != "") {
                $(permission.elBtnSearch).attr("disabled", "disabled");
                $(permission.elBtnConfimDel).removeAttr("disabled");
                ajaxObj.jsonPost("@Url.Action("GetPermissionByStepAndType", "Permission")", { typeId: typeId, stepNo: stepNo }, data => {
                    if (data.error == 0) {
                        $(permission.elTblPermisssion + " tbody").empty().html(data.html);
                    }
                    else {
                        messObj.fncCreate("Có lỗi xay ra khi lấy danh sách phân quyền", messObj.types.warning);
                    }
                    $(permission.elBtnSearch).removeAttr("disabled");
                    $(permission.elBtnConfimDel).removeAttr("disabled");
                })
            }
        },
        exportPermission: function () {
            var typeId = $(permission.elInCllType).val() || "0";
            var stepNo =  $(permission.elSlStepNo).val() || "-1";
            var url = "@Url.Action("ExportExcel","Permission")"
            window.open(url + "?typeId=" + typeId + "&stepNo=" + stepNo,"_blank");
        },
        comfirmDelete: function () {
            var checked = $(permission.elDeleteChecked + ":checked").length;
            if (checked > 0) {
                $("#modal-confirm-delete").modal('show');
                $(permission.elBtnConfimDel).removeAttr("disabled");
                $(permission.elModalCountChecked).html("Xác nhận xóa " + checked + " phân quyền");
            }
            else {
                $("#modal-confirm-delete").modal('show');
                $(permission.elBtnConfimDel).attr("disabled", "disabled");
                $(permission.elModalCountChecked).html("Bạn chưa chọn phân quyền xần xóa");
            }
        },
        deletePermission: function () {
            var checked = $(permission.elDeleteChecked + ":checked");
            if (checked.length > 0) {
                permission.numDelete = checked.length;
                $(permission.elBtnConfimDel).attr("disabled", "disabled");
                $(permission.elBtnSearch).attr("disabled", "disabled");
                $.each(checked, (idx, obj) => {
                    var id = $(obj).data("id");
                    ajaxObj.jsonPost("@Url.Action("Delete", "Permission")", { Id: id }, data => {
                        permission.numDelete--;
                        if (data.error == 0) {
                            messObj.fncCreate(data.html, messObj.types.success);
                            $(".tr-delete-" + id).remove();
                        }
                        else {
                            messObj.fncCreate(data.html, messObj.types.warning);
                        }
                        if (permission.numDelete == 0) {
                            $(permission.elBtnConfimDel).removeAttr("disabled");
                            $(permission.elBtnSearch).removeAttr("disabled");
                            $("#modal-confirm-delete").modal('hide');
                        }
                    }, (jqXHR, textStatus, errorThrown) => {
                        permission.numDelete--;
                        if (jqXHR.status == 401) {
                            messObj.fncCreate("Phiên đăng nhập của bạn đã hết hạn vui lòng tải lại trang", messObj.types.error);
                        } else if (jqXHR.status == 403) {
                            messObj.fncCreate("Bạn không có quyền thực hiện hành động này", messObj.types.error);
                        } else {
                            messObj.fncCreate("Có lỗi xảy ra khi xóa phân quyền", messObj.types.warning);
                        }
                        if (permission.numDelete == 0) {
                            $(permission.elBtnConfimDel).removeAttr("disabled");
                            $(permission.elBtnSearch).removeAttr("disabled");
                            $("#modal-confirm-delete").modal('hide');
                        }
                    });
                });                      
            }
            else {
                messObj.fncCreate("Chọn phân quyền cần xóa", messObj.types.warning);
            }
        }
    }
    objLayout.push(permission);
</script>

